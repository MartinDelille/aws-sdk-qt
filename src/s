diff --git a/codegen/aws-sdk-cpp b/codegen/aws-sdk-cpp
index ff114aa2b4..d635b63959 160000
--- a/codegen/aws-sdk-cpp
+++ b/codegen/aws-sdk-cpp
@@ -1 +1 @@
-Subproject commit ff114aa2b477862c9b76d2513dae843b88e4bd83
+Subproject commit d635b6395929d3e833435f8125e6baaf1a863dee
diff --git a/src/acmpca/acmpca.pro b/src/acmpca/acmpca.pro
index cc5256727f..d1e3638d8c 100644
--- a/src/acmpca/acmpca.pro
+++ b/src/acmpca/acmpca.pro
@@ -64,6 +64,10 @@ HEADERS += \
     listtagsrequest_p.h \
     listtagsresponse.h \
     listtagsresponse_p.h \
+    restorecertificateauthorityrequest.h \
+    restorecertificateauthorityrequest_p.h \
+    restorecertificateauthorityresponse.h \
+    restorecertificateauthorityresponse_p.h \
     revokecertificaterequest.h \
     revokecertificaterequest_p.h \
     revokecertificateresponse.h \
@@ -109,6 +113,8 @@ SOURCES += \
     listcertificateauthoritiesresponse.cpp \
     listtagsrequest.cpp \
     listtagsresponse.cpp \
+    restorecertificateauthorityrequest.cpp \
+    restorecertificateauthorityresponse.cpp \
     revokecertificaterequest.cpp \
     revokecertificateresponse.cpp \
     tagcertificateauthorityrequest.cpp \
diff --git a/src/acmpca/acmpcaclient.cpp b/src/acmpca/acmpcaclient.cpp
index 6fba610cc7..33e923e5e6 100644
--- a/src/acmpca/acmpcaclient.cpp
+++ b/src/acmpca/acmpcaclient.cpp
@@ -45,6 +45,8 @@
 #include "listcertificateauthoritiesresponse.h"
 #include "listtagsrequest.h"
 #include "listtagsresponse.h"
+#include "restorecertificateauthorityrequest.h"
+#include "restorecertificateauthorityresponse.h"
 #include "revokecertificaterequest.h"
 #include "revokecertificateresponse.h"
 #include "tagcertificateauthorityrequest.h"
@@ -77,8 +79,8 @@ namespace ACMPCA {
  * \inmodule QtAwsACMPCA
  *
  *  You can use the ACM PCA API to create a private certificate authority (CA). You must first call the
- *  <a>CreateCertificateAuthority</a> function. If successful, the function returns an Amazon Resource Name (ARN) for your
- *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> function to retrieve the certificate signing
+ *  <a>CreateCertificateAuthority</a> operation. If successful, the operation returns an Amazon Resource Name (ARN) for your
+ *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> operation to retrieve the certificate signing
  *  request (CSR) for your private CA certificate. Sign the CSR using the root or an intermediate CA in your on-premises PKI
  *  hierarchy, and call the <a>ImportCertificateAuthorityCertificate</a> to import your signed private CA certificate into
  *  ACM PCA.
@@ -87,7 +89,7 @@ namespace ACMPCA {
  * 
  *  Use your private CA to issue and revoke certificates. These are private certificates that identify and secure client
  *  computers, servers, applications, services, devices, and users over SSLS/TLS connections within your organization. Call
- *  the <a>IssueCertificate</a> function to issue a certificate. Call the <a>RevokeCertificate</a> function to revoke a
+ *  the <a>IssueCertificate</a> operation to issue a certificate. Call the <a>RevokeCertificate</a> operation to revoke a
  *  certificate.
  * 
  *  </p <note>
@@ -98,14 +100,14 @@ namespace ACMPCA {
  * 
  *  Your private CA can optionally create a certificate revocation list (CRL) to track the certificates you revoke. To
  *  create a CRL, you must specify a <a>RevocationConfiguration</a> object when you call the
- *  <a>CreateCertificateAuthority</a> function. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
+ *  <a>CreateCertificateAuthority</a> operation. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
  *  bucket policy that grants ACM PCA write permission.
  * 
  *  </p
  * 
  *  You can also call the <a>CreateCertificateAuthorityAuditReport</a> to create an optional audit report that lists every
  *  time the CA private key is used. The private key is used for signing when the <b>IssueCertificate</b> or
- *  <b>RevokeCertificate</b> function is called.
+ *  <b>RevokeCertificate</b> operation is called.
  */
 
 /*!
@@ -172,7 +174,7 @@ AcmpcaClient::AcmpcaClient(
  * and key size to be used to create the CA private key, the type of signing algorithm that the CA uses to sign, and X.500
  * subject information. The CRL (certificate revocation list) configuration specifies the CRL expiration period in days
  * (the validity period of the CRL), the Amazon S3 bucket that will contain the CRL, and a CNAME alias for the S3 bucket
- * that is included in certificates issued by the CA. If successful, this function returns the Amazon Resource Name (ARN)
+ * that is included in certificates issued by the CA. If successful, this operation returns the Amazon Resource Name (ARN)
  * of the
  */
 CreateCertificateAuthorityResponse * AcmpcaClient::createCertificateAuthority(const CreateCertificateAuthorityRequest &request)
@@ -187,7 +189,7 @@ CreateCertificateAuthorityResponse * AcmpcaClient::createCertificateAuthority(co
  * \note The caller is to take responsbility for the resulting pointer.
  *
  * Creates an audit report that lists every time that the your CA private key is used. The report is saved in the Amazon S3
- * bucket that you specify on input. The <a>IssueCertificate</a> and <a>RevokeCertificate</a> functions use the private
+ * bucket that you specify on input. The <a>IssueCertificate</a> and <a>RevokeCertificate</a> operations use the private
  * key. You can generate a new report every 30
  */
 CreateCertificateAuthorityAuditReportResponse * AcmpcaClient::createCertificateAuthorityAuditReport(const CreateCertificateAuthorityAuditReportRequest &request)
@@ -201,15 +203,25 @@ CreateCertificateAuthorityAuditReportResponse * AcmpcaClient::createCertificateA
  *
  * \note The caller is to take responsbility for the resulting pointer.
  *
- * Deletes the private certificate authority (CA) that you created or started to create by calling the
- * <a>CreateCertificateAuthority</a> function. This action requires that you enter an ARN (Amazon Resource Name) for the
- * private CA that you want to delete. You can find the ARN by calling the <a>ListCertificateAuthorities</a> function. You
- * can delete the CA if you are waiting for it to be created (the <b>Status</b> field of the <a>CertificateAuthority</a> is
- * <code>CREATING</code>) or if the CA has been created but you haven't yet imported the signed certificate (the
- * <b>Status</b> is <code>PENDING_CERTIFICATE</code>) into ACM PCA. If you've already imported the certificate, you cannot
- * delete the CA unless it has been disabled for more than 30 days. To disable a CA, call the
- * <a>UpdateCertificateAuthority</a> function and set the <b>CertificateAuthorityStatus</b> argument to
- * <code>DISABLED</code>.
+ * Deletes a private certificate authority (CA). You must provide the ARN (Amazon Resource Name) of the private CA that you
+ * want to delete. You can find the ARN by calling the <a>ListCertificateAuthorities</a> operation. Before you can delete a
+ * CA, you must disable it. Call the <a>UpdateCertificateAuthority</a> operation and set the
+ * <b>CertificateAuthorityStatus</b> parameter to <code>DISABLED</code>.
+ *
+ * </p
+ *
+ * Additionally, you can delete a CA if you are waiting for it to be created (the <b>Status</b> field of the
+ * <a>CertificateAuthority</a> is <code>CREATING</code>). You can also delete it if the CA has been created but you haven't
+ * yet imported the signed certificate (the <b>Status</b> is <code>PENDING_CERTIFICATE</code>) into ACM PCA.
+ *
+ * </p
+ *
+ * If the CA is in one of the aforementioned states and you call <a>DeleteCertificateAuthority</a>, the CA's status changes
+ * to <code>DELETED</code>. However, the CA won't be permentantly deleted until the restoration period has passed. By
+ * default, if you do not set the <code>PermanentDeletionTimeInDays</code> parameter, the CA remains restorable for 30
+ * days. You can set the parameter from 7 to 30 days. The <a>DescribeCertificateAuthority</a> operation returns the time
+ * remaining in the restoration window of a Private CA in the <code>DELETED</code> state. To restore an eligable CA, call
+ * the <a>RestoreCertificateAuthority</a>
  */
 DeleteCertificateAuthorityResponse * AcmpcaClient::deleteCertificateAuthority(const DeleteCertificateAuthorityRequest &request)
 {
@@ -227,29 +239,34 @@ DeleteCertificateAuthorityResponse * AcmpcaClient::deleteCertificateAuthority(co
  *
  * </p <ul> <li>
  *
- * <b>CREATING:</b> ACM PCA is creating your private certificate
+ * <code>CREATING</code> - ACM PCA is creating your private certificate
  *
  * authority> </li> <li>
  *
- * <b>PENDING_CERTIFICATE:</b> The certificate is pending. You must use your on-premises root or subordinate CA to sign
- * your private CA CSR and then import it into PCA.
+ * <code>PENDING_CERTIFICATE</code> - The certificate is pending. You must use your on-premises root or subordinate CA to
+ * sign your private CA CSR and then import it into PCA.
  *
  * </p </li> <li>
  *
- * <b>ACTIVE:</b> Your private CA is
+ * <code>ACTIVE</code> - Your private CA is
  *
  * active> </li> <li>
  *
- * <b>DISABLED:</b> Your private CA has been
+ * <code>DISABLED</code> - Your private CA has been
  *
  * disabled> </li> <li>
  *
- * <b>EXPIRED:</b> Your private CA certificate has
+ * <code>EXPIRED</code> - Your private CA certificate has
  *
  * expired> </li> <li>
  *
- * <b>FAILED:</b> Your private CA has failed. Your CA can fail for problems such a network outage or backend AWS failure or
- * other errors. A failed CA can never return to the pending state. You must create a new CA.
+ * <code>FAILED</code> - Your private CA has failed. Your CA can fail because of problems such a network outage or backend
+ * AWS failure or other errors. A failed CA can never return to the pending state. You must create a new CA.
+ *
+ * </p </li> <li>
+ *
+ * <code>DELETED</code> - Your private CA is within the restoration period, after which it will be permanently deleted. The
+ * length of time remaining in the CA's restoration period will also be included in this operation's
  */
 DescribeCertificateAuthorityResponse * AcmpcaClient::describeCertificateAuthority(const DescribeCertificateAuthorityRequest &request)
 {
@@ -263,8 +280,8 @@ DescribeCertificateAuthorityResponse * AcmpcaClient::describeCertificateAuthorit
  * \note The caller is to take responsbility for the resulting pointer.
  *
  * Lists information about a specific audit report created by calling the <a>CreateCertificateAuthorityAuditReport</a>
- * function. Audit information is created every time the certificate authority (CA) private key is used. The private key is
- * used when you call the <a>IssueCertificate</a> function or the <a>RevokeCertificate</a> function.
+ * operation. Audit information is created every time the certificate authority (CA) private key is used. The private key
+ * is used when you call the <a>IssueCertificate</a> operation or the <a>RevokeCertificate</a> operation.
  */
 DescribeCertificateAuthorityAuditReportResponse * AcmpcaClient::describeCertificateAuthorityAuditReport(const DescribeCertificateAuthorityAuditReportRequest &request)
 {
@@ -278,10 +295,10 @@ DescribeCertificateAuthorityAuditReportResponse * AcmpcaClient::describeCertific
  * \note The caller is to take responsbility for the resulting pointer.
  *
  * Retrieves a certificate from your private CA. The ARN of the certificate is returned when you call the
- * <a>IssueCertificate</a> function. You must specify both the ARN of your private CA and the ARN of the issued certificate
- * when calling the <b>GetCertificate</b> function. You can retrieve the certificate if it is in the <b>ISSUED</b> state.
- * You can call the <a>CreateCertificateAuthorityAuditReport</a> function to create a report that contains information
- * about all of the certificates issued and revoked by your private CA.
+ * <a>IssueCertificate</a> operation. You must specify both the ARN of your private CA and the ARN of the issued
+ * certificate when calling the <b>GetCertificate</b> operation. You can retrieve the certificate if it is in the
+ * <b>ISSUED</b> state. You can call the <a>CreateCertificateAuthorityAuditReport</a> operation to create a report that
+ * contains information about all of the certificates issued and revoked by your private CA.
  */
 GetCertificateResponse * AcmpcaClient::getCertificate(const GetCertificateRequest &request)
 {
@@ -310,9 +327,9 @@ GetCertificateAuthorityCertificateResponse * AcmpcaClient::getCertificateAuthori
  * \note The caller is to take responsbility for the resulting pointer.
  *
  * Retrieves the certificate signing request (CSR) for your private certificate authority (CA). The CSR is created when you
- * call the <a>CreateCertificateAuthority</a> function. Take the CSR to your on-premises X.509 infrastructure and sign it
+ * call the <a>CreateCertificateAuthority</a> operation. Take the CSR to your on-premises X.509 infrastructure and sign it
  * by using your root or a subordinate CA. Then import the signed certificate back into ACM PCA by calling the
- * <a>ImportCertificateAuthorityCertificate</a> function. The CSR is returned as a base64 PEM-encoded string.
+ * <a>ImportCertificateAuthorityCertificate</a> operation. The CSR is returned as a base64 PEM-encoded string.
  */
 GetCertificateAuthorityCsrResponse * AcmpcaClient::getCertificateAuthorityCsr(const GetCertificateAuthorityCsrRequest &request)
 {
@@ -325,10 +342,10 @@ GetCertificateAuthorityCsrResponse * AcmpcaClient::getCertificateAuthorityCsr(co
  *
  * \note The caller is to take responsbility for the resulting pointer.
  *
- * Imports your signed private CA certificate into ACM PCA. Before you can call this function, you must create the private
- * certificate authority by calling the <a>CreateCertificateAuthority</a> function. You must then generate a certificate
- * signing request (CSR) by calling the <a>GetCertificateAuthorityCsr</a> function. Take the CSR to your on-premises CA and
- * use the root certificate or a subordinate certificate to sign it. Create a certificate chain and copy the signed
+ * Imports your signed private CA certificate into ACM PCA. Before you can call this operation, you must create the private
+ * certificate authority by calling the <a>CreateCertificateAuthority</a> operation. You must then generate a certificate
+ * signing request (CSR) by calling the <a>GetCertificateAuthorityCsr</a> operation. Take the CSR to your on-premises CA
+ * and use the root certificate or a subordinate certificate to sign it. Create a certificate chain and copy the signed
  * certificate and the certificate chain to your working directory.
  *
  * </p <note>
@@ -356,13 +373,13 @@ ImportCertificateAuthorityCertificateResponse * AcmpcaClient::importCertificateA
  *
  * \note The caller is to take responsbility for the resulting pointer.
  *
- * Uses your private certificate authority (CA) to issue a client certificate. This function returns the Amazon Resource
- * Name (ARN) of the certificate. You can retrieve the certificate by calling the <a>GetCertificate</a> function and
+ * Uses your private certificate authority (CA) to issue a client certificate. This operation returns the Amazon Resource
+ * Name (ARN) of the certificate. You can retrieve the certificate by calling the <a>GetCertificate</a> operation and
  * specifying the ARN.
  *
  * </p <note>
  *
- * You cannot use the ACM <b>ListCertificateAuthorities</b> function to retrieve the ARNs of the certificates that you
+ * You cannot use the ACM <b>ListCertificateAuthorities</b> operation to retrieve the ARNs of the certificates that you
  * issue by using ACM
  */
 IssueCertificateResponse * AcmpcaClient::issueCertificate(const IssueCertificateRequest &request)
@@ -390,21 +407,43 @@ ListCertificateAuthoritiesResponse * AcmpcaClient::listCertificateAuthorities(co
  * \note The caller is to take responsbility for the resulting pointer.
  *
  * Lists the tags, if any, that are associated with your private CA. Tags are labels that you can use to identify and
- * organize your CAs. Each tag consists of a key and an optional value. Call the <a>TagCertificateAuthority</a> function to
- * add one or more tags to your CA. Call the <a>UntagCertificateAuthority</a> function to remove tags.
+ * organize your CAs. Each tag consists of a key and an optional value. Call the <a>TagCertificateAuthority</a> operation
+ * to add one or more tags to your CA. Call the <a>UntagCertificateAuthority</a> operation to remove tags.
  */
 ListTagsResponse * AcmpcaClient::listTags(const ListTagsRequest &request)
 {
     return qobject_cast<ListTagsResponse *>(send(request));
 }
 
+/*!
+ * Sends \a request to the AcmpcaClient service, and returns a pointer to an
+ * RestoreCertificateAuthorityResponse object to track the result.
+ *
+ * \note The caller is to take responsbility for the resulting pointer.
+ *
+ * Restores a certificate authority (CA) that is in the <code>DELETED</code> state. You can restore a CA during the period
+ * that you defined in the <b>PermanentDeletionTimeInDays</b> parameter of the <a>DeleteCertificateAuthority</a> operation.
+ * Currently, you can specify 7 to 30 days. If you did not specify a <b>PermanentDeletionTimeInDays</b> value, by default
+ * you can restore the CA at any time in a 30 day period. You can check the time remaining in the restoration period of a
+ * private CA in the <code>DELETED</code> state by calling the <a>DescribeCertificateAuthority</a> or
+ * <a>ListCertificateAuthorities</a> operations. The status of a restored CA is set to its pre-deletion status when the
+ * <b>RestoreCertificateAuthority</b> operation returns. To change its status to <code>ACTIVE</code>, call the
+ * <a>UpdateCertificateAuthority</a> operation. If the private CA was in the <code>PENDING_CERTIFICATE</code> state at
+ * deletion, you must use the <a>ImportCertificateAuthorityCertificate</a> operation to import a certificate authority into
+ * the private CA before it can be activated. You cannot restore a CA after the restoration period has
+ */
+RestoreCertificateAuthorityResponse * AcmpcaClient::restoreCertificateAuthority(const RestoreCertificateAuthorityRequest &request)
+{
+    return qobject_cast<RestoreCertificateAuthorityResponse *>(send(request));
+}
+
 /*!
  * Sends \a request to the AcmpcaClient service, and returns a pointer to an
  * RevokeCertificateResponse object to track the result.
  *
  * \note The caller is to take responsbility for the resulting pointer.
  *
- * Revokes a certificate that you issued by calling the <a>IssueCertificate</a> function. If you enable a certificate
+ * Revokes a certificate that you issued by calling the <a>IssueCertificate</a> operation. If you enable a certificate
  * revocation list (CRL) when you create or update your private CA, information about the revoked certificates will be
  * included in the CRL. ACM PCA writes the CRL to an S3 bucket that you specify. For more information about revocation, see
  * the <a>CrlConfiguration</a> structure. ACM PCA also writes revocation information to the audit report. For more
@@ -425,8 +464,8 @@ RevokeCertificateResponse * AcmpcaClient::revokeCertificate(const RevokeCertific
  * Each tag consists of a key and an optional value. You specify the private CA on input by its Amazon Resource Name (ARN).
  * You specify the tag by using a key-value pair. You can apply a tag to just one private CA if you want to identify a
  * specific characteristic of that CA, or you can apply the same tag to multiple private CAs if you want to filter for a
- * common relationship among those CAs. To remove one or more tags, use the <a>UntagCertificateAuthority</a> function. Call
- * the <a>ListTags</a> function to see what tags are associated with your CA.
+ * common relationship among those CAs. To remove one or more tags, use the <a>UntagCertificateAuthority</a> operation.
+ * Call the <a>ListTags</a> operation to see what tags are associated with your CA.
  */
 TagCertificateAuthorityResponse * AcmpcaClient::tagCertificateAuthority(const TagCertificateAuthorityRequest &request)
 {
@@ -440,9 +479,9 @@ TagCertificateAuthorityResponse * AcmpcaClient::tagCertificateAuthority(const Ta
  * \note The caller is to take responsbility for the resulting pointer.
  *
  * Remove one or more tags from your private CA. A tag consists of a key-value pair. If you do not specify the value
- * portion of the tag when calling this function, the tag will be removed regardless of value. If you specify a value, the
+ * portion of the tag when calling this operation, the tag will be removed regardless of value. If you specify a value, the
  * tag is removed only if it is associated with the specified value. To add tags to a private CA, use the
- * <a>TagCertificateAuthority</a>. Call the <a>ListTags</a> function to see what tags are associated with your CA.
+ * <a>TagCertificateAuthority</a>. Call the <a>ListTags</a> operation to see what tags are associated with your CA.
  */
 UntagCertificateAuthorityResponse * AcmpcaClient::untagCertificateAuthority(const UntagCertificateAuthorityRequest &request)
 {
@@ -455,10 +494,9 @@ UntagCertificateAuthorityResponse * AcmpcaClient::untagCertificateAuthority(cons
  *
  * \note The caller is to take responsbility for the resulting pointer.
  *
- * Updates the status or configuration of a private certificate authority (CA). Your private CA must be in the <b>
- * <code>ACTIVE</code> </b> or <b> <code>DISABLED</code> </b> state before you can update it. You can disable a private CA
- * that is in the <b> <code>ACTIVE</code> </b> state or make a CA that is in the <b> <code>DISABLED</code> </b> state
- * active
+ * Updates the status or configuration of a private certificate authority (CA). Your private CA must be in the
+ * <code>ACTIVE</code> or <code>DISABLED</code> state before you can update it. You can disable a private CA that is in the
+ * <code>ACTIVE</code> state or make a CA that is in the <code>DISABLED</code> state active
  */
 UpdateCertificateAuthorityResponse * AcmpcaClient::updateCertificateAuthority(const UpdateCertificateAuthorityRequest &request)
 {
diff --git a/src/acmpca/acmpcaclient.h b/src/acmpca/acmpcaclient.h
index 5464be3dd1..85b8b45b08 100644
--- a/src/acmpca/acmpcaclient.h
+++ b/src/acmpca/acmpcaclient.h
@@ -52,6 +52,8 @@ class ListCertificateAuthoritiesRequest;
 class ListCertificateAuthoritiesResponse;
 class ListTagsRequest;
 class ListTagsResponse;
+class RestoreCertificateAuthorityRequest;
+class RestoreCertificateAuthorityResponse;
 class RevokeCertificateRequest;
 class RevokeCertificateResponse;
 class TagCertificateAuthorityRequest;
@@ -89,6 +91,7 @@ public slots:
     IssueCertificateResponse * issueCertificate(const IssueCertificateRequest &request);
     ListCertificateAuthoritiesResponse * listCertificateAuthorities(const ListCertificateAuthoritiesRequest &request);
     ListTagsResponse * listTags(const ListTagsRequest &request);
+    RestoreCertificateAuthorityResponse * restoreCertificateAuthority(const RestoreCertificateAuthorityRequest &request);
     RevokeCertificateResponse * revokeCertificate(const RevokeCertificateRequest &request);
     TagCertificateAuthorityResponse * tagCertificateAuthority(const TagCertificateAuthorityRequest &request);
     UntagCertificateAuthorityResponse * untagCertificateAuthority(const UntagCertificateAuthorityRequest &request);
diff --git a/src/acmpca/acmpcarequest.cpp b/src/acmpca/acmpcarequest.cpp
index b52c5025d1..dfcf4036e5 100644
--- a/src/acmpca/acmpcarequest.cpp
+++ b/src/acmpca/acmpcarequest.cpp
@@ -48,6 +48,7 @@ namespace ACMPCA {
  * \value IssueCertificateAction ACMPCA IssueCertificate action.
  * \value ListCertificateAuthoritiesAction ACMPCA ListCertificateAuthorities action.
  * \value ListTagsAction ACMPCA ListTags action.
+ * \value RestoreCertificateAuthorityAction ACMPCA RestoreCertificateAuthority action.
  * \value RevokeCertificateAction ACMPCA RevokeCertificate action.
  * \value TagCertificateAuthorityAction ACMPCA TagCertificateAuthority action.
  * \value UntagCertificateAuthorityAction ACMPCA UntagCertificateAuthority action.
diff --git a/src/acmpca/acmpcarequest.h b/src/acmpca/acmpcarequest.h
index 8388c29ae6..eb41fd76d3 100644
--- a/src/acmpca/acmpcarequest.h
+++ b/src/acmpca/acmpcarequest.h
@@ -49,6 +49,7 @@ public:
         IssueCertificateAction,
         ListCertificateAuthoritiesAction,
         ListTagsAction,
+        RestoreCertificateAuthorityAction,
         RevokeCertificateAction,
         TagCertificateAuthorityAction,
         UntagCertificateAuthorityAction,
diff --git a/src/acmpca/createcertificateauthorityauditreportrequest.cpp b/src/acmpca/createcertificateauthorityauditreportrequest.cpp
index 06d68d800d..ebb720ad10 100644
--- a/src/acmpca/createcertificateauthorityauditreportrequest.cpp
+++ b/src/acmpca/createcertificateauthorityauditreportrequest.cpp
@@ -32,8 +32,8 @@ namespace ACMPCA {
  * \inmodule QtAwsACMPCA
  *
  *  You can use the ACM PCA API to create a private certificate authority (CA). You must first call the
- *  <a>CreateCertificateAuthority</a> function. If successful, the function returns an Amazon Resource Name (ARN) for your
- *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> function to retrieve the certificate signing
+ *  <a>CreateCertificateAuthority</a> operation. If successful, the operation returns an Amazon Resource Name (ARN) for your
+ *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> operation to retrieve the certificate signing
  *  request (CSR) for your private CA certificate. Sign the CSR using the root or an intermediate CA in your on-premises PKI
  *  hierarchy, and call the <a>ImportCertificateAuthorityCertificate</a> to import your signed private CA certificate into
  *  ACM PCA.
@@ -42,7 +42,7 @@ namespace ACMPCA {
  * 
  *  Use your private CA to issue and revoke certificates. These are private certificates that identify and secure client
  *  computers, servers, applications, services, devices, and users over SSLS/TLS connections within your organization. Call
- *  the <a>IssueCertificate</a> function to issue a certificate. Call the <a>RevokeCertificate</a> function to revoke a
+ *  the <a>IssueCertificate</a> operation to issue a certificate. Call the <a>RevokeCertificate</a> operation to revoke a
  *  certificate.
  * 
  *  </p <note>
@@ -53,14 +53,14 @@ namespace ACMPCA {
  * 
  *  Your private CA can optionally create a certificate revocation list (CRL) to track the certificates you revoke. To
  *  create a CRL, you must specify a <a>RevocationConfiguration</a> object when you call the
- *  <a>CreateCertificateAuthority</a> function. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
+ *  <a>CreateCertificateAuthority</a> operation. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
  *  bucket policy that grants ACM PCA write permission.
  * 
  *  </p
  * 
  *  You can also call the <a>CreateCertificateAuthorityAuditReport</a> to create an optional audit report that lists every
  *  time the CA private key is used. The private key is used for signing when the <b>IssueCertificate</b> or
- *  <b>RevokeCertificate</b> function is called.
+ *  <b>RevokeCertificate</b> operation is called.
  *
  * \sa AcmpcaClient::createCertificateAuthorityAuditReport
  */
diff --git a/src/acmpca/createcertificateauthorityauditreportresponse.cpp b/src/acmpca/createcertificateauthorityauditreportresponse.cpp
index 5f23b75c3c..90f3375472 100644
--- a/src/acmpca/createcertificateauthorityauditreportresponse.cpp
+++ b/src/acmpca/createcertificateauthorityauditreportresponse.cpp
@@ -34,8 +34,8 @@ namespace ACMPCA {
  * \inmodule QtAwsACMPCA
  *
  *  You can use the ACM PCA API to create a private certificate authority (CA). You must first call the
- *  <a>CreateCertificateAuthority</a> function. If successful, the function returns an Amazon Resource Name (ARN) for your
- *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> function to retrieve the certificate signing
+ *  <a>CreateCertificateAuthority</a> operation. If successful, the operation returns an Amazon Resource Name (ARN) for your
+ *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> operation to retrieve the certificate signing
  *  request (CSR) for your private CA certificate. Sign the CSR using the root or an intermediate CA in your on-premises PKI
  *  hierarchy, and call the <a>ImportCertificateAuthorityCertificate</a> to import your signed private CA certificate into
  *  ACM PCA.
@@ -44,7 +44,7 @@ namespace ACMPCA {
  * 
  *  Use your private CA to issue and revoke certificates. These are private certificates that identify and secure client
  *  computers, servers, applications, services, devices, and users over SSLS/TLS connections within your organization. Call
- *  the <a>IssueCertificate</a> function to issue a certificate. Call the <a>RevokeCertificate</a> function to revoke a
+ *  the <a>IssueCertificate</a> operation to issue a certificate. Call the <a>RevokeCertificate</a> operation to revoke a
  *  certificate.
  * 
  *  </p <note>
@@ -55,14 +55,14 @@ namespace ACMPCA {
  * 
  *  Your private CA can optionally create a certificate revocation list (CRL) to track the certificates you revoke. To
  *  create a CRL, you must specify a <a>RevocationConfiguration</a> object when you call the
- *  <a>CreateCertificateAuthority</a> function. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
+ *  <a>CreateCertificateAuthority</a> operation. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
  *  bucket policy that grants ACM PCA write permission.
  * 
  *  </p
  * 
  *  You can also call the <a>CreateCertificateAuthorityAuditReport</a> to create an optional audit report that lists every
  *  time the CA private key is used. The private key is used for signing when the <b>IssueCertificate</b> or
- *  <b>RevokeCertificate</b> function is called.
+ *  <b>RevokeCertificate</b> operation is called.
  *
  * \sa AcmpcaClient::createCertificateAuthorityAuditReport
  */
diff --git a/src/acmpca/createcertificateauthorityrequest.cpp b/src/acmpca/createcertificateauthorityrequest.cpp
index a0979b4886..eee502834e 100644
--- a/src/acmpca/createcertificateauthorityrequest.cpp
+++ b/src/acmpca/createcertificateauthorityrequest.cpp
@@ -32,8 +32,8 @@ namespace ACMPCA {
  * \inmodule QtAwsACMPCA
  *
  *  You can use the ACM PCA API to create a private certificate authority (CA). You must first call the
- *  <a>CreateCertificateAuthority</a> function. If successful, the function returns an Amazon Resource Name (ARN) for your
- *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> function to retrieve the certificate signing
+ *  <a>CreateCertificateAuthority</a> operation. If successful, the operation returns an Amazon Resource Name (ARN) for your
+ *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> operation to retrieve the certificate signing
  *  request (CSR) for your private CA certificate. Sign the CSR using the root or an intermediate CA in your on-premises PKI
  *  hierarchy, and call the <a>ImportCertificateAuthorityCertificate</a> to import your signed private CA certificate into
  *  ACM PCA.
@@ -42,7 +42,7 @@ namespace ACMPCA {
  * 
  *  Use your private CA to issue and revoke certificates. These are private certificates that identify and secure client
  *  computers, servers, applications, services, devices, and users over SSLS/TLS connections within your organization. Call
- *  the <a>IssueCertificate</a> function to issue a certificate. Call the <a>RevokeCertificate</a> function to revoke a
+ *  the <a>IssueCertificate</a> operation to issue a certificate. Call the <a>RevokeCertificate</a> operation to revoke a
  *  certificate.
  * 
  *  </p <note>
@@ -53,14 +53,14 @@ namespace ACMPCA {
  * 
  *  Your private CA can optionally create a certificate revocation list (CRL) to track the certificates you revoke. To
  *  create a CRL, you must specify a <a>RevocationConfiguration</a> object when you call the
- *  <a>CreateCertificateAuthority</a> function. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
+ *  <a>CreateCertificateAuthority</a> operation. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
  *  bucket policy that grants ACM PCA write permission.
  * 
  *  </p
  * 
  *  You can also call the <a>CreateCertificateAuthorityAuditReport</a> to create an optional audit report that lists every
  *  time the CA private key is used. The private key is used for signing when the <b>IssueCertificate</b> or
- *  <b>RevokeCertificate</b> function is called.
+ *  <b>RevokeCertificate</b> operation is called.
  *
  * \sa AcmpcaClient::createCertificateAuthority
  */
diff --git a/src/acmpca/createcertificateauthorityresponse.cpp b/src/acmpca/createcertificateauthorityresponse.cpp
index 6a97648d0d..0366f0175e 100644
--- a/src/acmpca/createcertificateauthorityresponse.cpp
+++ b/src/acmpca/createcertificateauthorityresponse.cpp
@@ -34,8 +34,8 @@ namespace ACMPCA {
  * \inmodule QtAwsACMPCA
  *
  *  You can use the ACM PCA API to create a private certificate authority (CA). You must first call the
- *  <a>CreateCertificateAuthority</a> function. If successful, the function returns an Amazon Resource Name (ARN) for your
- *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> function to retrieve the certificate signing
+ *  <a>CreateCertificateAuthority</a> operation. If successful, the operation returns an Amazon Resource Name (ARN) for your
+ *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> operation to retrieve the certificate signing
  *  request (CSR) for your private CA certificate. Sign the CSR using the root or an intermediate CA in your on-premises PKI
  *  hierarchy, and call the <a>ImportCertificateAuthorityCertificate</a> to import your signed private CA certificate into
  *  ACM PCA.
@@ -44,7 +44,7 @@ namespace ACMPCA {
  * 
  *  Use your private CA to issue and revoke certificates. These are private certificates that identify and secure client
  *  computers, servers, applications, services, devices, and users over SSLS/TLS connections within your organization. Call
- *  the <a>IssueCertificate</a> function to issue a certificate. Call the <a>RevokeCertificate</a> function to revoke a
+ *  the <a>IssueCertificate</a> operation to issue a certificate. Call the <a>RevokeCertificate</a> operation to revoke a
  *  certificate.
  * 
  *  </p <note>
@@ -55,14 +55,14 @@ namespace ACMPCA {
  * 
  *  Your private CA can optionally create a certificate revocation list (CRL) to track the certificates you revoke. To
  *  create a CRL, you must specify a <a>RevocationConfiguration</a> object when you call the
- *  <a>CreateCertificateAuthority</a> function. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
+ *  <a>CreateCertificateAuthority</a> operation. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
  *  bucket policy that grants ACM PCA write permission.
  * 
  *  </p
  * 
  *  You can also call the <a>CreateCertificateAuthorityAuditReport</a> to create an optional audit report that lists every
  *  time the CA private key is used. The private key is used for signing when the <b>IssueCertificate</b> or
- *  <b>RevokeCertificate</b> function is called.
+ *  <b>RevokeCertificate</b> operation is called.
  *
  * \sa AcmpcaClient::createCertificateAuthority
  */
diff --git a/src/acmpca/deletecertificateauthorityrequest.cpp b/src/acmpca/deletecertificateauthorityrequest.cpp
index 1b93e2e92d..d460abc8be 100644
--- a/src/acmpca/deletecertificateauthorityrequest.cpp
+++ b/src/acmpca/deletecertificateauthorityrequest.cpp
@@ -32,8 +32,8 @@ namespace ACMPCA {
  * \inmodule QtAwsACMPCA
  *
  *  You can use the ACM PCA API to create a private certificate authority (CA). You must first call the
- *  <a>CreateCertificateAuthority</a> function. If successful, the function returns an Amazon Resource Name (ARN) for your
- *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> function to retrieve the certificate signing
+ *  <a>CreateCertificateAuthority</a> operation. If successful, the operation returns an Amazon Resource Name (ARN) for your
+ *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> operation to retrieve the certificate signing
  *  request (CSR) for your private CA certificate. Sign the CSR using the root or an intermediate CA in your on-premises PKI
  *  hierarchy, and call the <a>ImportCertificateAuthorityCertificate</a> to import your signed private CA certificate into
  *  ACM PCA.
@@ -42,7 +42,7 @@ namespace ACMPCA {
  * 
  *  Use your private CA to issue and revoke certificates. These are private certificates that identify and secure client
  *  computers, servers, applications, services, devices, and users over SSLS/TLS connections within your organization. Call
- *  the <a>IssueCertificate</a> function to issue a certificate. Call the <a>RevokeCertificate</a> function to revoke a
+ *  the <a>IssueCertificate</a> operation to issue a certificate. Call the <a>RevokeCertificate</a> operation to revoke a
  *  certificate.
  * 
  *  </p <note>
@@ -53,14 +53,14 @@ namespace ACMPCA {
  * 
  *  Your private CA can optionally create a certificate revocation list (CRL) to track the certificates you revoke. To
  *  create a CRL, you must specify a <a>RevocationConfiguration</a> object when you call the
- *  <a>CreateCertificateAuthority</a> function. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
+ *  <a>CreateCertificateAuthority</a> operation. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
  *  bucket policy that grants ACM PCA write permission.
  * 
  *  </p
  * 
  *  You can also call the <a>CreateCertificateAuthorityAuditReport</a> to create an optional audit report that lists every
  *  time the CA private key is used. The private key is used for signing when the <b>IssueCertificate</b> or
- *  <b>RevokeCertificate</b> function is called.
+ *  <b>RevokeCertificate</b> operation is called.
  *
  * \sa AcmpcaClient::deleteCertificateAuthority
  */
diff --git a/src/acmpca/deletecertificateauthorityresponse.cpp b/src/acmpca/deletecertificateauthorityresponse.cpp
index 2b45696438..7d0028a8bc 100644
--- a/src/acmpca/deletecertificateauthorityresponse.cpp
+++ b/src/acmpca/deletecertificateauthorityresponse.cpp
@@ -34,8 +34,8 @@ namespace ACMPCA {
  * \inmodule QtAwsACMPCA
  *
  *  You can use the ACM PCA API to create a private certificate authority (CA). You must first call the
- *  <a>CreateCertificateAuthority</a> function. If successful, the function returns an Amazon Resource Name (ARN) for your
- *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> function to retrieve the certificate signing
+ *  <a>CreateCertificateAuthority</a> operation. If successful, the operation returns an Amazon Resource Name (ARN) for your
+ *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> operation to retrieve the certificate signing
  *  request (CSR) for your private CA certificate. Sign the CSR using the root or an intermediate CA in your on-premises PKI
  *  hierarchy, and call the <a>ImportCertificateAuthorityCertificate</a> to import your signed private CA certificate into
  *  ACM PCA.
@@ -44,7 +44,7 @@ namespace ACMPCA {
  * 
  *  Use your private CA to issue and revoke certificates. These are private certificates that identify and secure client
  *  computers, servers, applications, services, devices, and users over SSLS/TLS connections within your organization. Call
- *  the <a>IssueCertificate</a> function to issue a certificate. Call the <a>RevokeCertificate</a> function to revoke a
+ *  the <a>IssueCertificate</a> operation to issue a certificate. Call the <a>RevokeCertificate</a> operation to revoke a
  *  certificate.
  * 
  *  </p <note>
@@ -55,14 +55,14 @@ namespace ACMPCA {
  * 
  *  Your private CA can optionally create a certificate revocation list (CRL) to track the certificates you revoke. To
  *  create a CRL, you must specify a <a>RevocationConfiguration</a> object when you call the
- *  <a>CreateCertificateAuthority</a> function. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
+ *  <a>CreateCertificateAuthority</a> operation. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
  *  bucket policy that grants ACM PCA write permission.
  * 
  *  </p
  * 
  *  You can also call the <a>CreateCertificateAuthorityAuditReport</a> to create an optional audit report that lists every
  *  time the CA private key is used. The private key is used for signing when the <b>IssueCertificate</b> or
- *  <b>RevokeCertificate</b> function is called.
+ *  <b>RevokeCertificate</b> operation is called.
  *
  * \sa AcmpcaClient::deleteCertificateAuthority
  */
diff --git a/src/acmpca/describecertificateauthorityauditreportrequest.cpp b/src/acmpca/describecertificateauthorityauditreportrequest.cpp
index 4fa6d9f2e9..a832fb92da 100644
--- a/src/acmpca/describecertificateauthorityauditreportrequest.cpp
+++ b/src/acmpca/describecertificateauthorityauditreportrequest.cpp
@@ -32,8 +32,8 @@ namespace ACMPCA {
  * \inmodule QtAwsACMPCA
  *
  *  You can use the ACM PCA API to create a private certificate authority (CA). You must first call the
- *  <a>CreateCertificateAuthority</a> function. If successful, the function returns an Amazon Resource Name (ARN) for your
- *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> function to retrieve the certificate signing
+ *  <a>CreateCertificateAuthority</a> operation. If successful, the operation returns an Amazon Resource Name (ARN) for your
+ *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> operation to retrieve the certificate signing
  *  request (CSR) for your private CA certificate. Sign the CSR using the root or an intermediate CA in your on-premises PKI
  *  hierarchy, and call the <a>ImportCertificateAuthorityCertificate</a> to import your signed private CA certificate into
  *  ACM PCA.
@@ -42,7 +42,7 @@ namespace ACMPCA {
  * 
  *  Use your private CA to issue and revoke certificates. These are private certificates that identify and secure client
  *  computers, servers, applications, services, devices, and users over SSLS/TLS connections within your organization. Call
- *  the <a>IssueCertificate</a> function to issue a certificate. Call the <a>RevokeCertificate</a> function to revoke a
+ *  the <a>IssueCertificate</a> operation to issue a certificate. Call the <a>RevokeCertificate</a> operation to revoke a
  *  certificate.
  * 
  *  </p <note>
@@ -53,14 +53,14 @@ namespace ACMPCA {
  * 
  *  Your private CA can optionally create a certificate revocation list (CRL) to track the certificates you revoke. To
  *  create a CRL, you must specify a <a>RevocationConfiguration</a> object when you call the
- *  <a>CreateCertificateAuthority</a> function. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
+ *  <a>CreateCertificateAuthority</a> operation. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
  *  bucket policy that grants ACM PCA write permission.
  * 
  *  </p
  * 
  *  You can also call the <a>CreateCertificateAuthorityAuditReport</a> to create an optional audit report that lists every
  *  time the CA private key is used. The private key is used for signing when the <b>IssueCertificate</b> or
- *  <b>RevokeCertificate</b> function is called.
+ *  <b>RevokeCertificate</b> operation is called.
  *
  * \sa AcmpcaClient::describeCertificateAuthorityAuditReport
  */
diff --git a/src/acmpca/describecertificateauthorityauditreportresponse.cpp b/src/acmpca/describecertificateauthorityauditreportresponse.cpp
index 9865fdbaa4..884d5602b9 100644
--- a/src/acmpca/describecertificateauthorityauditreportresponse.cpp
+++ b/src/acmpca/describecertificateauthorityauditreportresponse.cpp
@@ -34,8 +34,8 @@ namespace ACMPCA {
  * \inmodule QtAwsACMPCA
  *
  *  You can use the ACM PCA API to create a private certificate authority (CA). You must first call the
- *  <a>CreateCertificateAuthority</a> function. If successful, the function returns an Amazon Resource Name (ARN) for your
- *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> function to retrieve the certificate signing
+ *  <a>CreateCertificateAuthority</a> operation. If successful, the operation returns an Amazon Resource Name (ARN) for your
+ *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> operation to retrieve the certificate signing
  *  request (CSR) for your private CA certificate. Sign the CSR using the root or an intermediate CA in your on-premises PKI
  *  hierarchy, and call the <a>ImportCertificateAuthorityCertificate</a> to import your signed private CA certificate into
  *  ACM PCA.
@@ -44,7 +44,7 @@ namespace ACMPCA {
  * 
  *  Use your private CA to issue and revoke certificates. These are private certificates that identify and secure client
  *  computers, servers, applications, services, devices, and users over SSLS/TLS connections within your organization. Call
- *  the <a>IssueCertificate</a> function to issue a certificate. Call the <a>RevokeCertificate</a> function to revoke a
+ *  the <a>IssueCertificate</a> operation to issue a certificate. Call the <a>RevokeCertificate</a> operation to revoke a
  *  certificate.
  * 
  *  </p <note>
@@ -55,14 +55,14 @@ namespace ACMPCA {
  * 
  *  Your private CA can optionally create a certificate revocation list (CRL) to track the certificates you revoke. To
  *  create a CRL, you must specify a <a>RevocationConfiguration</a> object when you call the
- *  <a>CreateCertificateAuthority</a> function. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
+ *  <a>CreateCertificateAuthority</a> operation. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
  *  bucket policy that grants ACM PCA write permission.
  * 
  *  </p
  * 
  *  You can also call the <a>CreateCertificateAuthorityAuditReport</a> to create an optional audit report that lists every
  *  time the CA private key is used. The private key is used for signing when the <b>IssueCertificate</b> or
- *  <b>RevokeCertificate</b> function is called.
+ *  <b>RevokeCertificate</b> operation is called.
  *
  * \sa AcmpcaClient::describeCertificateAuthorityAuditReport
  */
diff --git a/src/acmpca/describecertificateauthorityrequest.cpp b/src/acmpca/describecertificateauthorityrequest.cpp
index 849bd57b4e..3883585cb0 100644
--- a/src/acmpca/describecertificateauthorityrequest.cpp
+++ b/src/acmpca/describecertificateauthorityrequest.cpp
@@ -32,8 +32,8 @@ namespace ACMPCA {
  * \inmodule QtAwsACMPCA
  *
  *  You can use the ACM PCA API to create a private certificate authority (CA). You must first call the
- *  <a>CreateCertificateAuthority</a> function. If successful, the function returns an Amazon Resource Name (ARN) for your
- *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> function to retrieve the certificate signing
+ *  <a>CreateCertificateAuthority</a> operation. If successful, the operation returns an Amazon Resource Name (ARN) for your
+ *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> operation to retrieve the certificate signing
  *  request (CSR) for your private CA certificate. Sign the CSR using the root or an intermediate CA in your on-premises PKI
  *  hierarchy, and call the <a>ImportCertificateAuthorityCertificate</a> to import your signed private CA certificate into
  *  ACM PCA.
@@ -42,7 +42,7 @@ namespace ACMPCA {
  * 
  *  Use your private CA to issue and revoke certificates. These are private certificates that identify and secure client
  *  computers, servers, applications, services, devices, and users over SSLS/TLS connections within your organization. Call
- *  the <a>IssueCertificate</a> function to issue a certificate. Call the <a>RevokeCertificate</a> function to revoke a
+ *  the <a>IssueCertificate</a> operation to issue a certificate. Call the <a>RevokeCertificate</a> operation to revoke a
  *  certificate.
  * 
  *  </p <note>
@@ -53,14 +53,14 @@ namespace ACMPCA {
  * 
  *  Your private CA can optionally create a certificate revocation list (CRL) to track the certificates you revoke. To
  *  create a CRL, you must specify a <a>RevocationConfiguration</a> object when you call the
- *  <a>CreateCertificateAuthority</a> function. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
+ *  <a>CreateCertificateAuthority</a> operation. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
  *  bucket policy that grants ACM PCA write permission.
  * 
  *  </p
  * 
  *  You can also call the <a>CreateCertificateAuthorityAuditReport</a> to create an optional audit report that lists every
  *  time the CA private key is used. The private key is used for signing when the <b>IssueCertificate</b> or
- *  <b>RevokeCertificate</b> function is called.
+ *  <b>RevokeCertificate</b> operation is called.
  *
  * \sa AcmpcaClient::describeCertificateAuthority
  */
diff --git a/src/acmpca/describecertificateauthorityresponse.cpp b/src/acmpca/describecertificateauthorityresponse.cpp
index b13a19ec08..75e5f0ff07 100644
--- a/src/acmpca/describecertificateauthorityresponse.cpp
+++ b/src/acmpca/describecertificateauthorityresponse.cpp
@@ -34,8 +34,8 @@ namespace ACMPCA {
  * \inmodule QtAwsACMPCA
  *
  *  You can use the ACM PCA API to create a private certificate authority (CA). You must first call the
- *  <a>CreateCertificateAuthority</a> function. If successful, the function returns an Amazon Resource Name (ARN) for your
- *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> function to retrieve the certificate signing
+ *  <a>CreateCertificateAuthority</a> operation. If successful, the operation returns an Amazon Resource Name (ARN) for your
+ *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> operation to retrieve the certificate signing
  *  request (CSR) for your private CA certificate. Sign the CSR using the root or an intermediate CA in your on-premises PKI
  *  hierarchy, and call the <a>ImportCertificateAuthorityCertificate</a> to import your signed private CA certificate into
  *  ACM PCA.
@@ -44,7 +44,7 @@ namespace ACMPCA {
  * 
  *  Use your private CA to issue and revoke certificates. These are private certificates that identify and secure client
  *  computers, servers, applications, services, devices, and users over SSLS/TLS connections within your organization. Call
- *  the <a>IssueCertificate</a> function to issue a certificate. Call the <a>RevokeCertificate</a> function to revoke a
+ *  the <a>IssueCertificate</a> operation to issue a certificate. Call the <a>RevokeCertificate</a> operation to revoke a
  *  certificate.
  * 
  *  </p <note>
@@ -55,14 +55,14 @@ namespace ACMPCA {
  * 
  *  Your private CA can optionally create a certificate revocation list (CRL) to track the certificates you revoke. To
  *  create a CRL, you must specify a <a>RevocationConfiguration</a> object when you call the
- *  <a>CreateCertificateAuthority</a> function. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
+ *  <a>CreateCertificateAuthority</a> operation. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
  *  bucket policy that grants ACM PCA write permission.
  * 
  *  </p
  * 
  *  You can also call the <a>CreateCertificateAuthorityAuditReport</a> to create an optional audit report that lists every
  *  time the CA private key is used. The private key is used for signing when the <b>IssueCertificate</b> or
- *  <b>RevokeCertificate</b> function is called.
+ *  <b>RevokeCertificate</b> operation is called.
  *
  * \sa AcmpcaClient::describeCertificateAuthority
  */
diff --git a/src/acmpca/getcertificateauthoritycertificaterequest.cpp b/src/acmpca/getcertificateauthoritycertificaterequest.cpp
index 8eeb75bed8..283d39ef63 100644
--- a/src/acmpca/getcertificateauthoritycertificaterequest.cpp
+++ b/src/acmpca/getcertificateauthoritycertificaterequest.cpp
@@ -32,8 +32,8 @@ namespace ACMPCA {
  * \inmodule QtAwsACMPCA
  *
  *  You can use the ACM PCA API to create a private certificate authority (CA). You must first call the
- *  <a>CreateCertificateAuthority</a> function. If successful, the function returns an Amazon Resource Name (ARN) for your
- *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> function to retrieve the certificate signing
+ *  <a>CreateCertificateAuthority</a> operation. If successful, the operation returns an Amazon Resource Name (ARN) for your
+ *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> operation to retrieve the certificate signing
  *  request (CSR) for your private CA certificate. Sign the CSR using the root or an intermediate CA in your on-premises PKI
  *  hierarchy, and call the <a>ImportCertificateAuthorityCertificate</a> to import your signed private CA certificate into
  *  ACM PCA.
@@ -42,7 +42,7 @@ namespace ACMPCA {
  * 
  *  Use your private CA to issue and revoke certificates. These are private certificates that identify and secure client
  *  computers, servers, applications, services, devices, and users over SSLS/TLS connections within your organization. Call
- *  the <a>IssueCertificate</a> function to issue a certificate. Call the <a>RevokeCertificate</a> function to revoke a
+ *  the <a>IssueCertificate</a> operation to issue a certificate. Call the <a>RevokeCertificate</a> operation to revoke a
  *  certificate.
  * 
  *  </p <note>
@@ -53,14 +53,14 @@ namespace ACMPCA {
  * 
  *  Your private CA can optionally create a certificate revocation list (CRL) to track the certificates you revoke. To
  *  create a CRL, you must specify a <a>RevocationConfiguration</a> object when you call the
- *  <a>CreateCertificateAuthority</a> function. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
+ *  <a>CreateCertificateAuthority</a> operation. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
  *  bucket policy that grants ACM PCA write permission.
  * 
  *  </p
  * 
  *  You can also call the <a>CreateCertificateAuthorityAuditReport</a> to create an optional audit report that lists every
  *  time the CA private key is used. The private key is used for signing when the <b>IssueCertificate</b> or
- *  <b>RevokeCertificate</b> function is called.
+ *  <b>RevokeCertificate</b> operation is called.
  *
  * \sa AcmpcaClient::getCertificateAuthorityCertificate
  */
diff --git a/src/acmpca/getcertificateauthoritycertificateresponse.cpp b/src/acmpca/getcertificateauthoritycertificateresponse.cpp
index 7898d4bb93..22b9537dfd 100644
--- a/src/acmpca/getcertificateauthoritycertificateresponse.cpp
+++ b/src/acmpca/getcertificateauthoritycertificateresponse.cpp
@@ -34,8 +34,8 @@ namespace ACMPCA {
  * \inmodule QtAwsACMPCA
  *
  *  You can use the ACM PCA API to create a private certificate authority (CA). You must first call the
- *  <a>CreateCertificateAuthority</a> function. If successful, the function returns an Amazon Resource Name (ARN) for your
- *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> function to retrieve the certificate signing
+ *  <a>CreateCertificateAuthority</a> operation. If successful, the operation returns an Amazon Resource Name (ARN) for your
+ *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> operation to retrieve the certificate signing
  *  request (CSR) for your private CA certificate. Sign the CSR using the root or an intermediate CA in your on-premises PKI
  *  hierarchy, and call the <a>ImportCertificateAuthorityCertificate</a> to import your signed private CA certificate into
  *  ACM PCA.
@@ -44,7 +44,7 @@ namespace ACMPCA {
  * 
  *  Use your private CA to issue and revoke certificates. These are private certificates that identify and secure client
  *  computers, servers, applications, services, devices, and users over SSLS/TLS connections within your organization. Call
- *  the <a>IssueCertificate</a> function to issue a certificate. Call the <a>RevokeCertificate</a> function to revoke a
+ *  the <a>IssueCertificate</a> operation to issue a certificate. Call the <a>RevokeCertificate</a> operation to revoke a
  *  certificate.
  * 
  *  </p <note>
@@ -55,14 +55,14 @@ namespace ACMPCA {
  * 
  *  Your private CA can optionally create a certificate revocation list (CRL) to track the certificates you revoke. To
  *  create a CRL, you must specify a <a>RevocationConfiguration</a> object when you call the
- *  <a>CreateCertificateAuthority</a> function. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
+ *  <a>CreateCertificateAuthority</a> operation. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
  *  bucket policy that grants ACM PCA write permission.
  * 
  *  </p
  * 
  *  You can also call the <a>CreateCertificateAuthorityAuditReport</a> to create an optional audit report that lists every
  *  time the CA private key is used. The private key is used for signing when the <b>IssueCertificate</b> or
- *  <b>RevokeCertificate</b> function is called.
+ *  <b>RevokeCertificate</b> operation is called.
  *
  * \sa AcmpcaClient::getCertificateAuthorityCertificate
  */
diff --git a/src/acmpca/getcertificateauthoritycsrrequest.cpp b/src/acmpca/getcertificateauthoritycsrrequest.cpp
index 05b9cd5784..c9fbb27409 100644
--- a/src/acmpca/getcertificateauthoritycsrrequest.cpp
+++ b/src/acmpca/getcertificateauthoritycsrrequest.cpp
@@ -32,8 +32,8 @@ namespace ACMPCA {
  * \inmodule QtAwsACMPCA
  *
  *  You can use the ACM PCA API to create a private certificate authority (CA). You must first call the
- *  <a>CreateCertificateAuthority</a> function. If successful, the function returns an Amazon Resource Name (ARN) for your
- *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> function to retrieve the certificate signing
+ *  <a>CreateCertificateAuthority</a> operation. If successful, the operation returns an Amazon Resource Name (ARN) for your
+ *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> operation to retrieve the certificate signing
  *  request (CSR) for your private CA certificate. Sign the CSR using the root or an intermediate CA in your on-premises PKI
  *  hierarchy, and call the <a>ImportCertificateAuthorityCertificate</a> to import your signed private CA certificate into
  *  ACM PCA.
@@ -42,7 +42,7 @@ namespace ACMPCA {
  * 
  *  Use your private CA to issue and revoke certificates. These are private certificates that identify and secure client
  *  computers, servers, applications, services, devices, and users over SSLS/TLS connections within your organization. Call
- *  the <a>IssueCertificate</a> function to issue a certificate. Call the <a>RevokeCertificate</a> function to revoke a
+ *  the <a>IssueCertificate</a> operation to issue a certificate. Call the <a>RevokeCertificate</a> operation to revoke a
  *  certificate.
  * 
  *  </p <note>
@@ -53,14 +53,14 @@ namespace ACMPCA {
  * 
  *  Your private CA can optionally create a certificate revocation list (CRL) to track the certificates you revoke. To
  *  create a CRL, you must specify a <a>RevocationConfiguration</a> object when you call the
- *  <a>CreateCertificateAuthority</a> function. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
+ *  <a>CreateCertificateAuthority</a> operation. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
  *  bucket policy that grants ACM PCA write permission.
  * 
  *  </p
  * 
  *  You can also call the <a>CreateCertificateAuthorityAuditReport</a> to create an optional audit report that lists every
  *  time the CA private key is used. The private key is used for signing when the <b>IssueCertificate</b> or
- *  <b>RevokeCertificate</b> function is called.
+ *  <b>RevokeCertificate</b> operation is called.
  *
  * \sa AcmpcaClient::getCertificateAuthorityCsr
  */
diff --git a/src/acmpca/getcertificateauthoritycsrresponse.cpp b/src/acmpca/getcertificateauthoritycsrresponse.cpp
index 4d983840b3..c9b3c6a5bb 100644
--- a/src/acmpca/getcertificateauthoritycsrresponse.cpp
+++ b/src/acmpca/getcertificateauthoritycsrresponse.cpp
@@ -34,8 +34,8 @@ namespace ACMPCA {
  * \inmodule QtAwsACMPCA
  *
  *  You can use the ACM PCA API to create a private certificate authority (CA). You must first call the
- *  <a>CreateCertificateAuthority</a> function. If successful, the function returns an Amazon Resource Name (ARN) for your
- *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> function to retrieve the certificate signing
+ *  <a>CreateCertificateAuthority</a> operation. If successful, the operation returns an Amazon Resource Name (ARN) for your
+ *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> operation to retrieve the certificate signing
  *  request (CSR) for your private CA certificate. Sign the CSR using the root or an intermediate CA in your on-premises PKI
  *  hierarchy, and call the <a>ImportCertificateAuthorityCertificate</a> to import your signed private CA certificate into
  *  ACM PCA.
@@ -44,7 +44,7 @@ namespace ACMPCA {
  * 
  *  Use your private CA to issue and revoke certificates. These are private certificates that identify and secure client
  *  computers, servers, applications, services, devices, and users over SSLS/TLS connections within your organization. Call
- *  the <a>IssueCertificate</a> function to issue a certificate. Call the <a>RevokeCertificate</a> function to revoke a
+ *  the <a>IssueCertificate</a> operation to issue a certificate. Call the <a>RevokeCertificate</a> operation to revoke a
  *  certificate.
  * 
  *  </p <note>
@@ -55,14 +55,14 @@ namespace ACMPCA {
  * 
  *  Your private CA can optionally create a certificate revocation list (CRL) to track the certificates you revoke. To
  *  create a CRL, you must specify a <a>RevocationConfiguration</a> object when you call the
- *  <a>CreateCertificateAuthority</a> function. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
+ *  <a>CreateCertificateAuthority</a> operation. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
  *  bucket policy that grants ACM PCA write permission.
  * 
  *  </p
  * 
  *  You can also call the <a>CreateCertificateAuthorityAuditReport</a> to create an optional audit report that lists every
  *  time the CA private key is used. The private key is used for signing when the <b>IssueCertificate</b> or
- *  <b>RevokeCertificate</b> function is called.
+ *  <b>RevokeCertificate</b> operation is called.
  *
  * \sa AcmpcaClient::getCertificateAuthorityCsr
  */
diff --git a/src/acmpca/getcertificaterequest.cpp b/src/acmpca/getcertificaterequest.cpp
index f8d4a264b5..693e2f7cfc 100644
--- a/src/acmpca/getcertificaterequest.cpp
+++ b/src/acmpca/getcertificaterequest.cpp
@@ -32,8 +32,8 @@ namespace ACMPCA {
  * \inmodule QtAwsACMPCA
  *
  *  You can use the ACM PCA API to create a private certificate authority (CA). You must first call the
- *  <a>CreateCertificateAuthority</a> function. If successful, the function returns an Amazon Resource Name (ARN) for your
- *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> function to retrieve the certificate signing
+ *  <a>CreateCertificateAuthority</a> operation. If successful, the operation returns an Amazon Resource Name (ARN) for your
+ *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> operation to retrieve the certificate signing
  *  request (CSR) for your private CA certificate. Sign the CSR using the root or an intermediate CA in your on-premises PKI
  *  hierarchy, and call the <a>ImportCertificateAuthorityCertificate</a> to import your signed private CA certificate into
  *  ACM PCA.
@@ -42,7 +42,7 @@ namespace ACMPCA {
  * 
  *  Use your private CA to issue and revoke certificates. These are private certificates that identify and secure client
  *  computers, servers, applications, services, devices, and users over SSLS/TLS connections within your organization. Call
- *  the <a>IssueCertificate</a> function to issue a certificate. Call the <a>RevokeCertificate</a> function to revoke a
+ *  the <a>IssueCertificate</a> operation to issue a certificate. Call the <a>RevokeCertificate</a> operation to revoke a
  *  certificate.
  * 
  *  </p <note>
@@ -53,14 +53,14 @@ namespace ACMPCA {
  * 
  *  Your private CA can optionally create a certificate revocation list (CRL) to track the certificates you revoke. To
  *  create a CRL, you must specify a <a>RevocationConfiguration</a> object when you call the
- *  <a>CreateCertificateAuthority</a> function. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
+ *  <a>CreateCertificateAuthority</a> operation. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
  *  bucket policy that grants ACM PCA write permission.
  * 
  *  </p
  * 
  *  You can also call the <a>CreateCertificateAuthorityAuditReport</a> to create an optional audit report that lists every
  *  time the CA private key is used. The private key is used for signing when the <b>IssueCertificate</b> or
- *  <b>RevokeCertificate</b> function is called.
+ *  <b>RevokeCertificate</b> operation is called.
  *
  * \sa AcmpcaClient::getCertificate
  */
diff --git a/src/acmpca/getcertificateresponse.cpp b/src/acmpca/getcertificateresponse.cpp
index 49ab505414..f2cdfaa780 100644
--- a/src/acmpca/getcertificateresponse.cpp
+++ b/src/acmpca/getcertificateresponse.cpp
@@ -34,8 +34,8 @@ namespace ACMPCA {
  * \inmodule QtAwsACMPCA
  *
  *  You can use the ACM PCA API to create a private certificate authority (CA). You must first call the
- *  <a>CreateCertificateAuthority</a> function. If successful, the function returns an Amazon Resource Name (ARN) for your
- *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> function to retrieve the certificate signing
+ *  <a>CreateCertificateAuthority</a> operation. If successful, the operation returns an Amazon Resource Name (ARN) for your
+ *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> operation to retrieve the certificate signing
  *  request (CSR) for your private CA certificate. Sign the CSR using the root or an intermediate CA in your on-premises PKI
  *  hierarchy, and call the <a>ImportCertificateAuthorityCertificate</a> to import your signed private CA certificate into
  *  ACM PCA.
@@ -44,7 +44,7 @@ namespace ACMPCA {
  * 
  *  Use your private CA to issue and revoke certificates. These are private certificates that identify and secure client
  *  computers, servers, applications, services, devices, and users over SSLS/TLS connections within your organization. Call
- *  the <a>IssueCertificate</a> function to issue a certificate. Call the <a>RevokeCertificate</a> function to revoke a
+ *  the <a>IssueCertificate</a> operation to issue a certificate. Call the <a>RevokeCertificate</a> operation to revoke a
  *  certificate.
  * 
  *  </p <note>
@@ -55,14 +55,14 @@ namespace ACMPCA {
  * 
  *  Your private CA can optionally create a certificate revocation list (CRL) to track the certificates you revoke. To
  *  create a CRL, you must specify a <a>RevocationConfiguration</a> object when you call the
- *  <a>CreateCertificateAuthority</a> function. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
+ *  <a>CreateCertificateAuthority</a> operation. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
  *  bucket policy that grants ACM PCA write permission.
  * 
  *  </p
  * 
  *  You can also call the <a>CreateCertificateAuthorityAuditReport</a> to create an optional audit report that lists every
  *  time the CA private key is used. The private key is used for signing when the <b>IssueCertificate</b> or
- *  <b>RevokeCertificate</b> function is called.
+ *  <b>RevokeCertificate</b> operation is called.
  *
  * \sa AcmpcaClient::getCertificate
  */
diff --git a/src/acmpca/importcertificateauthoritycertificaterequest.cpp b/src/acmpca/importcertificateauthoritycertificaterequest.cpp
index cd591d567e..a0574dd871 100644
--- a/src/acmpca/importcertificateauthoritycertificaterequest.cpp
+++ b/src/acmpca/importcertificateauthoritycertificaterequest.cpp
@@ -32,8 +32,8 @@ namespace ACMPCA {
  * \inmodule QtAwsACMPCA
  *
  *  You can use the ACM PCA API to create a private certificate authority (CA). You must first call the
- *  <a>CreateCertificateAuthority</a> function. If successful, the function returns an Amazon Resource Name (ARN) for your
- *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> function to retrieve the certificate signing
+ *  <a>CreateCertificateAuthority</a> operation. If successful, the operation returns an Amazon Resource Name (ARN) for your
+ *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> operation to retrieve the certificate signing
  *  request (CSR) for your private CA certificate. Sign the CSR using the root or an intermediate CA in your on-premises PKI
  *  hierarchy, and call the <a>ImportCertificateAuthorityCertificate</a> to import your signed private CA certificate into
  *  ACM PCA.
@@ -42,7 +42,7 @@ namespace ACMPCA {
  * 
  *  Use your private CA to issue and revoke certificates. These are private certificates that identify and secure client
  *  computers, servers, applications, services, devices, and users over SSLS/TLS connections within your organization. Call
- *  the <a>IssueCertificate</a> function to issue a certificate. Call the <a>RevokeCertificate</a> function to revoke a
+ *  the <a>IssueCertificate</a> operation to issue a certificate. Call the <a>RevokeCertificate</a> operation to revoke a
  *  certificate.
  * 
  *  </p <note>
@@ -53,14 +53,14 @@ namespace ACMPCA {
  * 
  *  Your private CA can optionally create a certificate revocation list (CRL) to track the certificates you revoke. To
  *  create a CRL, you must specify a <a>RevocationConfiguration</a> object when you call the
- *  <a>CreateCertificateAuthority</a> function. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
+ *  <a>CreateCertificateAuthority</a> operation. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
  *  bucket policy that grants ACM PCA write permission.
  * 
  *  </p
  * 
  *  You can also call the <a>CreateCertificateAuthorityAuditReport</a> to create an optional audit report that lists every
  *  time the CA private key is used. The private key is used for signing when the <b>IssueCertificate</b> or
- *  <b>RevokeCertificate</b> function is called.
+ *  <b>RevokeCertificate</b> operation is called.
  *
  * \sa AcmpcaClient::importCertificateAuthorityCertificate
  */
diff --git a/src/acmpca/importcertificateauthoritycertificateresponse.cpp b/src/acmpca/importcertificateauthoritycertificateresponse.cpp
index 9e5cc44112..282bfb7797 100644
--- a/src/acmpca/importcertificateauthoritycertificateresponse.cpp
+++ b/src/acmpca/importcertificateauthoritycertificateresponse.cpp
@@ -34,8 +34,8 @@ namespace ACMPCA {
  * \inmodule QtAwsACMPCA
  *
  *  You can use the ACM PCA API to create a private certificate authority (CA). You must first call the
- *  <a>CreateCertificateAuthority</a> function. If successful, the function returns an Amazon Resource Name (ARN) for your
- *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> function to retrieve the certificate signing
+ *  <a>CreateCertificateAuthority</a> operation. If successful, the operation returns an Amazon Resource Name (ARN) for your
+ *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> operation to retrieve the certificate signing
  *  request (CSR) for your private CA certificate. Sign the CSR using the root or an intermediate CA in your on-premises PKI
  *  hierarchy, and call the <a>ImportCertificateAuthorityCertificate</a> to import your signed private CA certificate into
  *  ACM PCA.
@@ -44,7 +44,7 @@ namespace ACMPCA {
  * 
  *  Use your private CA to issue and revoke certificates. These are private certificates that identify and secure client
  *  computers, servers, applications, services, devices, and users over SSLS/TLS connections within your organization. Call
- *  the <a>IssueCertificate</a> function to issue a certificate. Call the <a>RevokeCertificate</a> function to revoke a
+ *  the <a>IssueCertificate</a> operation to issue a certificate. Call the <a>RevokeCertificate</a> operation to revoke a
  *  certificate.
  * 
  *  </p <note>
@@ -55,14 +55,14 @@ namespace ACMPCA {
  * 
  *  Your private CA can optionally create a certificate revocation list (CRL) to track the certificates you revoke. To
  *  create a CRL, you must specify a <a>RevocationConfiguration</a> object when you call the
- *  <a>CreateCertificateAuthority</a> function. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
+ *  <a>CreateCertificateAuthority</a> operation. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
  *  bucket policy that grants ACM PCA write permission.
  * 
  *  </p
  * 
  *  You can also call the <a>CreateCertificateAuthorityAuditReport</a> to create an optional audit report that lists every
  *  time the CA private key is used. The private key is used for signing when the <b>IssueCertificate</b> or
- *  <b>RevokeCertificate</b> function is called.
+ *  <b>RevokeCertificate</b> operation is called.
  *
  * \sa AcmpcaClient::importCertificateAuthorityCertificate
  */
diff --git a/src/acmpca/issuecertificaterequest.cpp b/src/acmpca/issuecertificaterequest.cpp
index 69ec42aef6..fb55ee71da 100644
--- a/src/acmpca/issuecertificaterequest.cpp
+++ b/src/acmpca/issuecertificaterequest.cpp
@@ -32,8 +32,8 @@ namespace ACMPCA {
  * \inmodule QtAwsACMPCA
  *
  *  You can use the ACM PCA API to create a private certificate authority (CA). You must first call the
- *  <a>CreateCertificateAuthority</a> function. If successful, the function returns an Amazon Resource Name (ARN) for your
- *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> function to retrieve the certificate signing
+ *  <a>CreateCertificateAuthority</a> operation. If successful, the operation returns an Amazon Resource Name (ARN) for your
+ *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> operation to retrieve the certificate signing
  *  request (CSR) for your private CA certificate. Sign the CSR using the root or an intermediate CA in your on-premises PKI
  *  hierarchy, and call the <a>ImportCertificateAuthorityCertificate</a> to import your signed private CA certificate into
  *  ACM PCA.
@@ -42,7 +42,7 @@ namespace ACMPCA {
  * 
  *  Use your private CA to issue and revoke certificates. These are private certificates that identify and secure client
  *  computers, servers, applications, services, devices, and users over SSLS/TLS connections within your organization. Call
- *  the <a>IssueCertificate</a> function to issue a certificate. Call the <a>RevokeCertificate</a> function to revoke a
+ *  the <a>IssueCertificate</a> operation to issue a certificate. Call the <a>RevokeCertificate</a> operation to revoke a
  *  certificate.
  * 
  *  </p <note>
@@ -53,14 +53,14 @@ namespace ACMPCA {
  * 
  *  Your private CA can optionally create a certificate revocation list (CRL) to track the certificates you revoke. To
  *  create a CRL, you must specify a <a>RevocationConfiguration</a> object when you call the
- *  <a>CreateCertificateAuthority</a> function. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
+ *  <a>CreateCertificateAuthority</a> operation. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
  *  bucket policy that grants ACM PCA write permission.
  * 
  *  </p
  * 
  *  You can also call the <a>CreateCertificateAuthorityAuditReport</a> to create an optional audit report that lists every
  *  time the CA private key is used. The private key is used for signing when the <b>IssueCertificate</b> or
- *  <b>RevokeCertificate</b> function is called.
+ *  <b>RevokeCertificate</b> operation is called.
  *
  * \sa AcmpcaClient::issueCertificate
  */
diff --git a/src/acmpca/issuecertificateresponse.cpp b/src/acmpca/issuecertificateresponse.cpp
index 47d610bfd5..834a7e81ce 100644
--- a/src/acmpca/issuecertificateresponse.cpp
+++ b/src/acmpca/issuecertificateresponse.cpp
@@ -34,8 +34,8 @@ namespace ACMPCA {
  * \inmodule QtAwsACMPCA
  *
  *  You can use the ACM PCA API to create a private certificate authority (CA). You must first call the
- *  <a>CreateCertificateAuthority</a> function. If successful, the function returns an Amazon Resource Name (ARN) for your
- *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> function to retrieve the certificate signing
+ *  <a>CreateCertificateAuthority</a> operation. If successful, the operation returns an Amazon Resource Name (ARN) for your
+ *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> operation to retrieve the certificate signing
  *  request (CSR) for your private CA certificate. Sign the CSR using the root or an intermediate CA in your on-premises PKI
  *  hierarchy, and call the <a>ImportCertificateAuthorityCertificate</a> to import your signed private CA certificate into
  *  ACM PCA.
@@ -44,7 +44,7 @@ namespace ACMPCA {
  * 
  *  Use your private CA to issue and revoke certificates. These are private certificates that identify and secure client
  *  computers, servers, applications, services, devices, and users over SSLS/TLS connections within your organization. Call
- *  the <a>IssueCertificate</a> function to issue a certificate. Call the <a>RevokeCertificate</a> function to revoke a
+ *  the <a>IssueCertificate</a> operation to issue a certificate. Call the <a>RevokeCertificate</a> operation to revoke a
  *  certificate.
  * 
  *  </p <note>
@@ -55,14 +55,14 @@ namespace ACMPCA {
  * 
  *  Your private CA can optionally create a certificate revocation list (CRL) to track the certificates you revoke. To
  *  create a CRL, you must specify a <a>RevocationConfiguration</a> object when you call the
- *  <a>CreateCertificateAuthority</a> function. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
+ *  <a>CreateCertificateAuthority</a> operation. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
  *  bucket policy that grants ACM PCA write permission.
  * 
  *  </p
  * 
  *  You can also call the <a>CreateCertificateAuthorityAuditReport</a> to create an optional audit report that lists every
  *  time the CA private key is used. The private key is used for signing when the <b>IssueCertificate</b> or
- *  <b>RevokeCertificate</b> function is called.
+ *  <b>RevokeCertificate</b> operation is called.
  *
  * \sa AcmpcaClient::issueCertificate
  */
diff --git a/src/acmpca/listcertificateauthoritiesrequest.cpp b/src/acmpca/listcertificateauthoritiesrequest.cpp
index a61506364e..c2933293ca 100644
--- a/src/acmpca/listcertificateauthoritiesrequest.cpp
+++ b/src/acmpca/listcertificateauthoritiesrequest.cpp
@@ -32,8 +32,8 @@ namespace ACMPCA {
  * \inmodule QtAwsACMPCA
  *
  *  You can use the ACM PCA API to create a private certificate authority (CA). You must first call the
- *  <a>CreateCertificateAuthority</a> function. If successful, the function returns an Amazon Resource Name (ARN) for your
- *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> function to retrieve the certificate signing
+ *  <a>CreateCertificateAuthority</a> operation. If successful, the operation returns an Amazon Resource Name (ARN) for your
+ *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> operation to retrieve the certificate signing
  *  request (CSR) for your private CA certificate. Sign the CSR using the root or an intermediate CA in your on-premises PKI
  *  hierarchy, and call the <a>ImportCertificateAuthorityCertificate</a> to import your signed private CA certificate into
  *  ACM PCA.
@@ -42,7 +42,7 @@ namespace ACMPCA {
  * 
  *  Use your private CA to issue and revoke certificates. These are private certificates that identify and secure client
  *  computers, servers, applications, services, devices, and users over SSLS/TLS connections within your organization. Call
- *  the <a>IssueCertificate</a> function to issue a certificate. Call the <a>RevokeCertificate</a> function to revoke a
+ *  the <a>IssueCertificate</a> operation to issue a certificate. Call the <a>RevokeCertificate</a> operation to revoke a
  *  certificate.
  * 
  *  </p <note>
@@ -53,14 +53,14 @@ namespace ACMPCA {
  * 
  *  Your private CA can optionally create a certificate revocation list (CRL) to track the certificates you revoke. To
  *  create a CRL, you must specify a <a>RevocationConfiguration</a> object when you call the
- *  <a>CreateCertificateAuthority</a> function. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
+ *  <a>CreateCertificateAuthority</a> operation. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
  *  bucket policy that grants ACM PCA write permission.
  * 
  *  </p
  * 
  *  You can also call the <a>CreateCertificateAuthorityAuditReport</a> to create an optional audit report that lists every
  *  time the CA private key is used. The private key is used for signing when the <b>IssueCertificate</b> or
- *  <b>RevokeCertificate</b> function is called.
+ *  <b>RevokeCertificate</b> operation is called.
  *
  * \sa AcmpcaClient::listCertificateAuthorities
  */
diff --git a/src/acmpca/listcertificateauthoritiesresponse.cpp b/src/acmpca/listcertificateauthoritiesresponse.cpp
index 96deab6f97..3d7345fdc5 100644
--- a/src/acmpca/listcertificateauthoritiesresponse.cpp
+++ b/src/acmpca/listcertificateauthoritiesresponse.cpp
@@ -34,8 +34,8 @@ namespace ACMPCA {
  * \inmodule QtAwsACMPCA
  *
  *  You can use the ACM PCA API to create a private certificate authority (CA). You must first call the
- *  <a>CreateCertificateAuthority</a> function. If successful, the function returns an Amazon Resource Name (ARN) for your
- *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> function to retrieve the certificate signing
+ *  <a>CreateCertificateAuthority</a> operation. If successful, the operation returns an Amazon Resource Name (ARN) for your
+ *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> operation to retrieve the certificate signing
  *  request (CSR) for your private CA certificate. Sign the CSR using the root or an intermediate CA in your on-premises PKI
  *  hierarchy, and call the <a>ImportCertificateAuthorityCertificate</a> to import your signed private CA certificate into
  *  ACM PCA.
@@ -44,7 +44,7 @@ namespace ACMPCA {
  * 
  *  Use your private CA to issue and revoke certificates. These are private certificates that identify and secure client
  *  computers, servers, applications, services, devices, and users over SSLS/TLS connections within your organization. Call
- *  the <a>IssueCertificate</a> function to issue a certificate. Call the <a>RevokeCertificate</a> function to revoke a
+ *  the <a>IssueCertificate</a> operation to issue a certificate. Call the <a>RevokeCertificate</a> operation to revoke a
  *  certificate.
  * 
  *  </p <note>
@@ -55,14 +55,14 @@ namespace ACMPCA {
  * 
  *  Your private CA can optionally create a certificate revocation list (CRL) to track the certificates you revoke. To
  *  create a CRL, you must specify a <a>RevocationConfiguration</a> object when you call the
- *  <a>CreateCertificateAuthority</a> function. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
+ *  <a>CreateCertificateAuthority</a> operation. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
  *  bucket policy that grants ACM PCA write permission.
  * 
  *  </p
  * 
  *  You can also call the <a>CreateCertificateAuthorityAuditReport</a> to create an optional audit report that lists every
  *  time the CA private key is used. The private key is used for signing when the <b>IssueCertificate</b> or
- *  <b>RevokeCertificate</b> function is called.
+ *  <b>RevokeCertificate</b> operation is called.
  *
  * \sa AcmpcaClient::listCertificateAuthorities
  */
diff --git a/src/acmpca/listtagsrequest.cpp b/src/acmpca/listtagsrequest.cpp
index 6529626e43..18cae28ff6 100644
--- a/src/acmpca/listtagsrequest.cpp
+++ b/src/acmpca/listtagsrequest.cpp
@@ -32,8 +32,8 @@ namespace ACMPCA {
  * \inmodule QtAwsACMPCA
  *
  *  You can use the ACM PCA API to create a private certificate authority (CA). You must first call the
- *  <a>CreateCertificateAuthority</a> function. If successful, the function returns an Amazon Resource Name (ARN) for your
- *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> function to retrieve the certificate signing
+ *  <a>CreateCertificateAuthority</a> operation. If successful, the operation returns an Amazon Resource Name (ARN) for your
+ *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> operation to retrieve the certificate signing
  *  request (CSR) for your private CA certificate. Sign the CSR using the root or an intermediate CA in your on-premises PKI
  *  hierarchy, and call the <a>ImportCertificateAuthorityCertificate</a> to import your signed private CA certificate into
  *  ACM PCA.
@@ -42,7 +42,7 @@ namespace ACMPCA {
  * 
  *  Use your private CA to issue and revoke certificates. These are private certificates that identify and secure client
  *  computers, servers, applications, services, devices, and users over SSLS/TLS connections within your organization. Call
- *  the <a>IssueCertificate</a> function to issue a certificate. Call the <a>RevokeCertificate</a> function to revoke a
+ *  the <a>IssueCertificate</a> operation to issue a certificate. Call the <a>RevokeCertificate</a> operation to revoke a
  *  certificate.
  * 
  *  </p <note>
@@ -53,14 +53,14 @@ namespace ACMPCA {
  * 
  *  Your private CA can optionally create a certificate revocation list (CRL) to track the certificates you revoke. To
  *  create a CRL, you must specify a <a>RevocationConfiguration</a> object when you call the
- *  <a>CreateCertificateAuthority</a> function. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
+ *  <a>CreateCertificateAuthority</a> operation. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
  *  bucket policy that grants ACM PCA write permission.
  * 
  *  </p
  * 
  *  You can also call the <a>CreateCertificateAuthorityAuditReport</a> to create an optional audit report that lists every
  *  time the CA private key is used. The private key is used for signing when the <b>IssueCertificate</b> or
- *  <b>RevokeCertificate</b> function is called.
+ *  <b>RevokeCertificate</b> operation is called.
  *
  * \sa AcmpcaClient::listTags
  */
diff --git a/src/acmpca/listtagsresponse.cpp b/src/acmpca/listtagsresponse.cpp
index 6c6f99a2b0..ac9705aac8 100644
--- a/src/acmpca/listtagsresponse.cpp
+++ b/src/acmpca/listtagsresponse.cpp
@@ -34,8 +34,8 @@ namespace ACMPCA {
  * \inmodule QtAwsACMPCA
  *
  *  You can use the ACM PCA API to create a private certificate authority (CA). You must first call the
- *  <a>CreateCertificateAuthority</a> function. If successful, the function returns an Amazon Resource Name (ARN) for your
- *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> function to retrieve the certificate signing
+ *  <a>CreateCertificateAuthority</a> operation. If successful, the operation returns an Amazon Resource Name (ARN) for your
+ *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> operation to retrieve the certificate signing
  *  request (CSR) for your private CA certificate. Sign the CSR using the root or an intermediate CA in your on-premises PKI
  *  hierarchy, and call the <a>ImportCertificateAuthorityCertificate</a> to import your signed private CA certificate into
  *  ACM PCA.
@@ -44,7 +44,7 @@ namespace ACMPCA {
  * 
  *  Use your private CA to issue and revoke certificates. These are private certificates that identify and secure client
  *  computers, servers, applications, services, devices, and users over SSLS/TLS connections within your organization. Call
- *  the <a>IssueCertificate</a> function to issue a certificate. Call the <a>RevokeCertificate</a> function to revoke a
+ *  the <a>IssueCertificate</a> operation to issue a certificate. Call the <a>RevokeCertificate</a> operation to revoke a
  *  certificate.
  * 
  *  </p <note>
@@ -55,14 +55,14 @@ namespace ACMPCA {
  * 
  *  Your private CA can optionally create a certificate revocation list (CRL) to track the certificates you revoke. To
  *  create a CRL, you must specify a <a>RevocationConfiguration</a> object when you call the
- *  <a>CreateCertificateAuthority</a> function. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
+ *  <a>CreateCertificateAuthority</a> operation. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
  *  bucket policy that grants ACM PCA write permission.
  * 
  *  </p
  * 
  *  You can also call the <a>CreateCertificateAuthorityAuditReport</a> to create an optional audit report that lists every
  *  time the CA private key is used. The private key is used for signing when the <b>IssueCertificate</b> or
- *  <b>RevokeCertificate</b> function is called.
+ *  <b>RevokeCertificate</b> operation is called.
  *
  * \sa AcmpcaClient::listTags
  */
diff --git a/src/acmpca/revokecertificaterequest.cpp b/src/acmpca/revokecertificaterequest.cpp
index 4b7144ecd6..05c1c90bbc 100644
--- a/src/acmpca/revokecertificaterequest.cpp
+++ b/src/acmpca/revokecertificaterequest.cpp
@@ -32,8 +32,8 @@ namespace ACMPCA {
  * \inmodule QtAwsACMPCA
  *
  *  You can use the ACM PCA API to create a private certificate authority (CA). You must first call the
- *  <a>CreateCertificateAuthority</a> function. If successful, the function returns an Amazon Resource Name (ARN) for your
- *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> function to retrieve the certificate signing
+ *  <a>CreateCertificateAuthority</a> operation. If successful, the operation returns an Amazon Resource Name (ARN) for your
+ *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> operation to retrieve the certificate signing
  *  request (CSR) for your private CA certificate. Sign the CSR using the root or an intermediate CA in your on-premises PKI
  *  hierarchy, and call the <a>ImportCertificateAuthorityCertificate</a> to import your signed private CA certificate into
  *  ACM PCA.
@@ -42,7 +42,7 @@ namespace ACMPCA {
  * 
  *  Use your private CA to issue and revoke certificates. These are private certificates that identify and secure client
  *  computers, servers, applications, services, devices, and users over SSLS/TLS connections within your organization. Call
- *  the <a>IssueCertificate</a> function to issue a certificate. Call the <a>RevokeCertificate</a> function to revoke a
+ *  the <a>IssueCertificate</a> operation to issue a certificate. Call the <a>RevokeCertificate</a> operation to revoke a
  *  certificate.
  * 
  *  </p <note>
@@ -53,14 +53,14 @@ namespace ACMPCA {
  * 
  *  Your private CA can optionally create a certificate revocation list (CRL) to track the certificates you revoke. To
  *  create a CRL, you must specify a <a>RevocationConfiguration</a> object when you call the
- *  <a>CreateCertificateAuthority</a> function. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
+ *  <a>CreateCertificateAuthority</a> operation. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
  *  bucket policy that grants ACM PCA write permission.
  * 
  *  </p
  * 
  *  You can also call the <a>CreateCertificateAuthorityAuditReport</a> to create an optional audit report that lists every
  *  time the CA private key is used. The private key is used for signing when the <b>IssueCertificate</b> or
- *  <b>RevokeCertificate</b> function is called.
+ *  <b>RevokeCertificate</b> operation is called.
  *
  * \sa AcmpcaClient::revokeCertificate
  */
diff --git a/src/acmpca/revokecertificateresponse.cpp b/src/acmpca/revokecertificateresponse.cpp
index 9b6e01055a..661825c714 100644
--- a/src/acmpca/revokecertificateresponse.cpp
+++ b/src/acmpca/revokecertificateresponse.cpp
@@ -34,8 +34,8 @@ namespace ACMPCA {
  * \inmodule QtAwsACMPCA
  *
  *  You can use the ACM PCA API to create a private certificate authority (CA). You must first call the
- *  <a>CreateCertificateAuthority</a> function. If successful, the function returns an Amazon Resource Name (ARN) for your
- *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> function to retrieve the certificate signing
+ *  <a>CreateCertificateAuthority</a> operation. If successful, the operation returns an Amazon Resource Name (ARN) for your
+ *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> operation to retrieve the certificate signing
  *  request (CSR) for your private CA certificate. Sign the CSR using the root or an intermediate CA in your on-premises PKI
  *  hierarchy, and call the <a>ImportCertificateAuthorityCertificate</a> to import your signed private CA certificate into
  *  ACM PCA.
@@ -44,7 +44,7 @@ namespace ACMPCA {
  * 
  *  Use your private CA to issue and revoke certificates. These are private certificates that identify and secure client
  *  computers, servers, applications, services, devices, and users over SSLS/TLS connections within your organization. Call
- *  the <a>IssueCertificate</a> function to issue a certificate. Call the <a>RevokeCertificate</a> function to revoke a
+ *  the <a>IssueCertificate</a> operation to issue a certificate. Call the <a>RevokeCertificate</a> operation to revoke a
  *  certificate.
  * 
  *  </p <note>
@@ -55,14 +55,14 @@ namespace ACMPCA {
  * 
  *  Your private CA can optionally create a certificate revocation list (CRL) to track the certificates you revoke. To
  *  create a CRL, you must specify a <a>RevocationConfiguration</a> object when you call the
- *  <a>CreateCertificateAuthority</a> function. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
+ *  <a>CreateCertificateAuthority</a> operation. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
  *  bucket policy that grants ACM PCA write permission.
  * 
  *  </p
  * 
  *  You can also call the <a>CreateCertificateAuthorityAuditReport</a> to create an optional audit report that lists every
  *  time the CA private key is used. The private key is used for signing when the <b>IssueCertificate</b> or
- *  <b>RevokeCertificate</b> function is called.
+ *  <b>RevokeCertificate</b> operation is called.
  *
  * \sa AcmpcaClient::revokeCertificate
  */
diff --git a/src/acmpca/tagcertificateauthorityrequest.cpp b/src/acmpca/tagcertificateauthorityrequest.cpp
index c6d5b5237f..185353ddcc 100644
--- a/src/acmpca/tagcertificateauthorityrequest.cpp
+++ b/src/acmpca/tagcertificateauthorityrequest.cpp
@@ -32,8 +32,8 @@ namespace ACMPCA {
  * \inmodule QtAwsACMPCA
  *
  *  You can use the ACM PCA API to create a private certificate authority (CA). You must first call the
- *  <a>CreateCertificateAuthority</a> function. If successful, the function returns an Amazon Resource Name (ARN) for your
- *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> function to retrieve the certificate signing
+ *  <a>CreateCertificateAuthority</a> operation. If successful, the operation returns an Amazon Resource Name (ARN) for your
+ *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> operation to retrieve the certificate signing
  *  request (CSR) for your private CA certificate. Sign the CSR using the root or an intermediate CA in your on-premises PKI
  *  hierarchy, and call the <a>ImportCertificateAuthorityCertificate</a> to import your signed private CA certificate into
  *  ACM PCA.
@@ -42,7 +42,7 @@ namespace ACMPCA {
  * 
  *  Use your private CA to issue and revoke certificates. These are private certificates that identify and secure client
  *  computers, servers, applications, services, devices, and users over SSLS/TLS connections within your organization. Call
- *  the <a>IssueCertificate</a> function to issue a certificate. Call the <a>RevokeCertificate</a> function to revoke a
+ *  the <a>IssueCertificate</a> operation to issue a certificate. Call the <a>RevokeCertificate</a> operation to revoke a
  *  certificate.
  * 
  *  </p <note>
@@ -53,14 +53,14 @@ namespace ACMPCA {
  * 
  *  Your private CA can optionally create a certificate revocation list (CRL) to track the certificates you revoke. To
  *  create a CRL, you must specify a <a>RevocationConfiguration</a> object when you call the
- *  <a>CreateCertificateAuthority</a> function. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
+ *  <a>CreateCertificateAuthority</a> operation. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
  *  bucket policy that grants ACM PCA write permission.
  * 
  *  </p
  * 
  *  You can also call the <a>CreateCertificateAuthorityAuditReport</a> to create an optional audit report that lists every
  *  time the CA private key is used. The private key is used for signing when the <b>IssueCertificate</b> or
- *  <b>RevokeCertificate</b> function is called.
+ *  <b>RevokeCertificate</b> operation is called.
  *
  * \sa AcmpcaClient::tagCertificateAuthority
  */
diff --git a/src/acmpca/tagcertificateauthorityresponse.cpp b/src/acmpca/tagcertificateauthorityresponse.cpp
index 213f97d241..06a22bb882 100644
--- a/src/acmpca/tagcertificateauthorityresponse.cpp
+++ b/src/acmpca/tagcertificateauthorityresponse.cpp
@@ -34,8 +34,8 @@ namespace ACMPCA {
  * \inmodule QtAwsACMPCA
  *
  *  You can use the ACM PCA API to create a private certificate authority (CA). You must first call the
- *  <a>CreateCertificateAuthority</a> function. If successful, the function returns an Amazon Resource Name (ARN) for your
- *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> function to retrieve the certificate signing
+ *  <a>CreateCertificateAuthority</a> operation. If successful, the operation returns an Amazon Resource Name (ARN) for your
+ *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> operation to retrieve the certificate signing
  *  request (CSR) for your private CA certificate. Sign the CSR using the root or an intermediate CA in your on-premises PKI
  *  hierarchy, and call the <a>ImportCertificateAuthorityCertificate</a> to import your signed private CA certificate into
  *  ACM PCA.
@@ -44,7 +44,7 @@ namespace ACMPCA {
  * 
  *  Use your private CA to issue and revoke certificates. These are private certificates that identify and secure client
  *  computers, servers, applications, services, devices, and users over SSLS/TLS connections within your organization. Call
- *  the <a>IssueCertificate</a> function to issue a certificate. Call the <a>RevokeCertificate</a> function to revoke a
+ *  the <a>IssueCertificate</a> operation to issue a certificate. Call the <a>RevokeCertificate</a> operation to revoke a
  *  certificate.
  * 
  *  </p <note>
@@ -55,14 +55,14 @@ namespace ACMPCA {
  * 
  *  Your private CA can optionally create a certificate revocation list (CRL) to track the certificates you revoke. To
  *  create a CRL, you must specify a <a>RevocationConfiguration</a> object when you call the
- *  <a>CreateCertificateAuthority</a> function. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
+ *  <a>CreateCertificateAuthority</a> operation. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
  *  bucket policy that grants ACM PCA write permission.
  * 
  *  </p
  * 
  *  You can also call the <a>CreateCertificateAuthorityAuditReport</a> to create an optional audit report that lists every
  *  time the CA private key is used. The private key is used for signing when the <b>IssueCertificate</b> or
- *  <b>RevokeCertificate</b> function is called.
+ *  <b>RevokeCertificate</b> operation is called.
  *
  * \sa AcmpcaClient::tagCertificateAuthority
  */
diff --git a/src/acmpca/untagcertificateauthorityrequest.cpp b/src/acmpca/untagcertificateauthorityrequest.cpp
index c5261e0fb9..643aa50859 100644
--- a/src/acmpca/untagcertificateauthorityrequest.cpp
+++ b/src/acmpca/untagcertificateauthorityrequest.cpp
@@ -32,8 +32,8 @@ namespace ACMPCA {
  * \inmodule QtAwsACMPCA
  *
  *  You can use the ACM PCA API to create a private certificate authority (CA). You must first call the
- *  <a>CreateCertificateAuthority</a> function. If successful, the function returns an Amazon Resource Name (ARN) for your
- *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> function to retrieve the certificate signing
+ *  <a>CreateCertificateAuthority</a> operation. If successful, the operation returns an Amazon Resource Name (ARN) for your
+ *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> operation to retrieve the certificate signing
  *  request (CSR) for your private CA certificate. Sign the CSR using the root or an intermediate CA in your on-premises PKI
  *  hierarchy, and call the <a>ImportCertificateAuthorityCertificate</a> to import your signed private CA certificate into
  *  ACM PCA.
@@ -42,7 +42,7 @@ namespace ACMPCA {
  * 
  *  Use your private CA to issue and revoke certificates. These are private certificates that identify and secure client
  *  computers, servers, applications, services, devices, and users over SSLS/TLS connections within your organization. Call
- *  the <a>IssueCertificate</a> function to issue a certificate. Call the <a>RevokeCertificate</a> function to revoke a
+ *  the <a>IssueCertificate</a> operation to issue a certificate. Call the <a>RevokeCertificate</a> operation to revoke a
  *  certificate.
  * 
  *  </p <note>
@@ -53,14 +53,14 @@ namespace ACMPCA {
  * 
  *  Your private CA can optionally create a certificate revocation list (CRL) to track the certificates you revoke. To
  *  create a CRL, you must specify a <a>RevocationConfiguration</a> object when you call the
- *  <a>CreateCertificateAuthority</a> function. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
+ *  <a>CreateCertificateAuthority</a> operation. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
  *  bucket policy that grants ACM PCA write permission.
  * 
  *  </p
  * 
  *  You can also call the <a>CreateCertificateAuthorityAuditReport</a> to create an optional audit report that lists every
  *  time the CA private key is used. The private key is used for signing when the <b>IssueCertificate</b> or
- *  <b>RevokeCertificate</b> function is called.
+ *  <b>RevokeCertificate</b> operation is called.
  *
  * \sa AcmpcaClient::untagCertificateAuthority
  */
diff --git a/src/acmpca/untagcertificateauthorityresponse.cpp b/src/acmpca/untagcertificateauthorityresponse.cpp
index 6fb1d4043c..4c22de5a03 100644
--- a/src/acmpca/untagcertificateauthorityresponse.cpp
+++ b/src/acmpca/untagcertificateauthorityresponse.cpp
@@ -34,8 +34,8 @@ namespace ACMPCA {
  * \inmodule QtAwsACMPCA
  *
  *  You can use the ACM PCA API to create a private certificate authority (CA). You must first call the
- *  <a>CreateCertificateAuthority</a> function. If successful, the function returns an Amazon Resource Name (ARN) for your
- *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> function to retrieve the certificate signing
+ *  <a>CreateCertificateAuthority</a> operation. If successful, the operation returns an Amazon Resource Name (ARN) for your
+ *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> operation to retrieve the certificate signing
  *  request (CSR) for your private CA certificate. Sign the CSR using the root or an intermediate CA in your on-premises PKI
  *  hierarchy, and call the <a>ImportCertificateAuthorityCertificate</a> to import your signed private CA certificate into
  *  ACM PCA.
@@ -44,7 +44,7 @@ namespace ACMPCA {
  * 
  *  Use your private CA to issue and revoke certificates. These are private certificates that identify and secure client
  *  computers, servers, applications, services, devices, and users over SSLS/TLS connections within your organization. Call
- *  the <a>IssueCertificate</a> function to issue a certificate. Call the <a>RevokeCertificate</a> function to revoke a
+ *  the <a>IssueCertificate</a> operation to issue a certificate. Call the <a>RevokeCertificate</a> operation to revoke a
  *  certificate.
  * 
  *  </p <note>
@@ -55,14 +55,14 @@ namespace ACMPCA {
  * 
  *  Your private CA can optionally create a certificate revocation list (CRL) to track the certificates you revoke. To
  *  create a CRL, you must specify a <a>RevocationConfiguration</a> object when you call the
- *  <a>CreateCertificateAuthority</a> function. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
+ *  <a>CreateCertificateAuthority</a> operation. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
  *  bucket policy that grants ACM PCA write permission.
  * 
  *  </p
  * 
  *  You can also call the <a>CreateCertificateAuthorityAuditReport</a> to create an optional audit report that lists every
  *  time the CA private key is used. The private key is used for signing when the <b>IssueCertificate</b> or
- *  <b>RevokeCertificate</b> function is called.
+ *  <b>RevokeCertificate</b> operation is called.
  *
  * \sa AcmpcaClient::untagCertificateAuthority
  */
diff --git a/src/acmpca/updatecertificateauthorityrequest.cpp b/src/acmpca/updatecertificateauthorityrequest.cpp
index 4a3bd989cc..0ebf843f8a 100644
--- a/src/acmpca/updatecertificateauthorityrequest.cpp
+++ b/src/acmpca/updatecertificateauthorityrequest.cpp
@@ -32,8 +32,8 @@ namespace ACMPCA {
  * \inmodule QtAwsACMPCA
  *
  *  You can use the ACM PCA API to create a private certificate authority (CA). You must first call the
- *  <a>CreateCertificateAuthority</a> function. If successful, the function returns an Amazon Resource Name (ARN) for your
- *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> function to retrieve the certificate signing
+ *  <a>CreateCertificateAuthority</a> operation. If successful, the operation returns an Amazon Resource Name (ARN) for your
+ *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> operation to retrieve the certificate signing
  *  request (CSR) for your private CA certificate. Sign the CSR using the root or an intermediate CA in your on-premises PKI
  *  hierarchy, and call the <a>ImportCertificateAuthorityCertificate</a> to import your signed private CA certificate into
  *  ACM PCA.
@@ -42,7 +42,7 @@ namespace ACMPCA {
  * 
  *  Use your private CA to issue and revoke certificates. These are private certificates that identify and secure client
  *  computers, servers, applications, services, devices, and users over SSLS/TLS connections within your organization. Call
- *  the <a>IssueCertificate</a> function to issue a certificate. Call the <a>RevokeCertificate</a> function to revoke a
+ *  the <a>IssueCertificate</a> operation to issue a certificate. Call the <a>RevokeCertificate</a> operation to revoke a
  *  certificate.
  * 
  *  </p <note>
@@ -53,14 +53,14 @@ namespace ACMPCA {
  * 
  *  Your private CA can optionally create a certificate revocation list (CRL) to track the certificates you revoke. To
  *  create a CRL, you must specify a <a>RevocationConfiguration</a> object when you call the
- *  <a>CreateCertificateAuthority</a> function. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
+ *  <a>CreateCertificateAuthority</a> operation. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
  *  bucket policy that grants ACM PCA write permission.
  * 
  *  </p
  * 
  *  You can also call the <a>CreateCertificateAuthorityAuditReport</a> to create an optional audit report that lists every
  *  time the CA private key is used. The private key is used for signing when the <b>IssueCertificate</b> or
- *  <b>RevokeCertificate</b> function is called.
+ *  <b>RevokeCertificate</b> operation is called.
  *
  * \sa AcmpcaClient::updateCertificateAuthority
  */
diff --git a/src/acmpca/updatecertificateauthorityresponse.cpp b/src/acmpca/updatecertificateauthorityresponse.cpp
index 10590ad08b..bcfa4a3ea5 100644
--- a/src/acmpca/updatecertificateauthorityresponse.cpp
+++ b/src/acmpca/updatecertificateauthorityresponse.cpp
@@ -34,8 +34,8 @@ namespace ACMPCA {
  * \inmodule QtAwsACMPCA
  *
  *  You can use the ACM PCA API to create a private certificate authority (CA). You must first call the
- *  <a>CreateCertificateAuthority</a> function. If successful, the function returns an Amazon Resource Name (ARN) for your
- *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> function to retrieve the certificate signing
+ *  <a>CreateCertificateAuthority</a> operation. If successful, the operation returns an Amazon Resource Name (ARN) for your
+ *  private CA. Use this ARN as input to the <a>GetCertificateAuthorityCsr</a> operation to retrieve the certificate signing
  *  request (CSR) for your private CA certificate. Sign the CSR using the root or an intermediate CA in your on-premises PKI
  *  hierarchy, and call the <a>ImportCertificateAuthorityCertificate</a> to import your signed private CA certificate into
  *  ACM PCA.
@@ -44,7 +44,7 @@ namespace ACMPCA {
  * 
  *  Use your private CA to issue and revoke certificates. These are private certificates that identify and secure client
  *  computers, servers, applications, services, devices, and users over SSLS/TLS connections within your organization. Call
- *  the <a>IssueCertificate</a> function to issue a certificate. Call the <a>RevokeCertificate</a> function to revoke a
+ *  the <a>IssueCertificate</a> operation to issue a certificate. Call the <a>RevokeCertificate</a> operation to revoke a
  *  certificate.
  * 
  *  </p <note>
@@ -55,14 +55,14 @@ namespace ACMPCA {
  * 
  *  Your private CA can optionally create a certificate revocation list (CRL) to track the certificates you revoke. To
  *  create a CRL, you must specify a <a>RevocationConfiguration</a> object when you call the
- *  <a>CreateCertificateAuthority</a> function. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
+ *  <a>CreateCertificateAuthority</a> operation. ACM PCA writes the CRL to an S3 bucket that you specify. You must specify a
  *  bucket policy that grants ACM PCA write permission.
  * 
  *  </p
  * 
  *  You can also call the <a>CreateCertificateAuthorityAuditReport</a> to create an optional audit report that lists every
  *  time the CA private key is used. The private key is used for signing when the <b>IssueCertificate</b> or
- *  <b>RevokeCertificate</b> function is called.
+ *  <b>RevokeCertificate</b> operation is called.
  *
  * \sa AcmpcaClient::updateCertificateAuthority
  */
diff --git a/src/applicationautoscaling/applicationautoscalingclient.cpp b/src/applicationautoscaling/applicationautoscalingclient.cpp
index cd6aa52b44..4226ccc24a 100644
--- a/src/applicationautoscaling/applicationautoscalingclient.cpp
+++ b/src/applicationautoscaling/applicationautoscalingclient.cpp
@@ -64,12 +64,12 @@ namespace ApplicationAutoScaling {
  * \ingroup aws-clients
  * \inmodule QtAwsApplicationAutoScaling
  *
- *  With Application Auto Scaling, you can configure automatic scaling for your scalable AWS resources. You can use
- *  Application Auto Scaling to accomplish the following
+ *  With Application Auto Scaling, you can configure automatic scaling for your scalable resources. You can use Application
+ *  Auto Scaling to accomplish the following
  * 
  *  tasks> <ul> <li>
  * 
- *  Define scaling policies to automatically scale your AWS
+ *  Define scaling policies to automatically scale your AWS or custom
  * 
  *  resource> </li> <li>
  * 
@@ -85,7 +85,7 @@ namespace ApplicationAutoScaling {
  * 
  *  event> </li> </ul>
  * 
- *  Application Auto Scaling can scale the following AWS
+ *  Application Auto Scaling can scale the following
  * 
  *  resources> <ul> <li>
  * 
@@ -125,18 +125,25 @@ namespace ApplicationAutoScaling {
  * 
  *  Replicas</a>> </li> <li>
  * 
- *  Amazon SageMaker endpoints. For more information, see <a
+ *  Amazon SageMaker endpoint variants. For more information, see <a
  *  href="http://docs.aws.amazon.com/sagemaker/latest/dg/endpoint-auto-scaling.html">Automatically Scaling Amazon SageMaker
  * 
- *  Models</a>> </li> </ul>
+ *  Models</a>> </li> <li>
  * 
- *  To configure automatic scaling for multiple resources across multiple services, use AWS Auto Scaling to create a scaling
- *  plan for your application. For more information, see <a href="http://aws.amazon.com/autoscaling">AWS Auto
+ *  Custom resources provided by your own applications or services. More information is available in our <a
+ *  href="https://github.com/aws/aws-auto-scaling-custom-resource">GitHub repository</a>.
+ * 
+ *  </p </li> </ul>
  * 
- *  Scaling</a>>
+ *  To learn more about Application Auto Scaling, see the <a
+ *  href="http://docs.aws.amazon.com/autoscaling/application/userguide/what-is-application-auto-scaling.html">Application
+ *  Auto Scaling User
  * 
- *  For a list of supported regions, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#as-app_region">AWS
- *  Regions and Endpoints: Application Auto Scaling</a> in the <i>AWS General
+ *  Guide</a>>
+ * 
+ *  To configure automatic scaling for multiple resources across multiple services, use AWS Auto Scaling to create a scaling
+ *  plan for your application. For more information, see the <a
+ *  href="http://docs.aws.amazon.com/autoscaling/plans/userguide/what-is-aws-auto-scaling.html">AWS Auto Scaling User
  */
 
 /*!
diff --git a/src/applicationautoscaling/deletescalingpolicyrequest.cpp b/src/applicationautoscaling/deletescalingpolicyrequest.cpp
index c4ce2ac361..3c72515f7f 100644
--- a/src/applicationautoscaling/deletescalingpolicyrequest.cpp
+++ b/src/applicationautoscaling/deletescalingpolicyrequest.cpp
@@ -31,12 +31,12 @@ namespace ApplicationAutoScaling {
  *
  * \inmodule QtAwsApplicationAutoScaling
  *
- *  With Application Auto Scaling, you can configure automatic scaling for your scalable AWS resources. You can use
- *  Application Auto Scaling to accomplish the following
+ *  With Application Auto Scaling, you can configure automatic scaling for your scalable resources. You can use Application
+ *  Auto Scaling to accomplish the following
  * 
  *  tasks> <ul> <li>
  * 
- *  Define scaling policies to automatically scale your AWS
+ *  Define scaling policies to automatically scale your AWS or custom
  * 
  *  resource> </li> <li>
  * 
@@ -52,7 +52,7 @@ namespace ApplicationAutoScaling {
  * 
  *  event> </li> </ul>
  * 
- *  Application Auto Scaling can scale the following AWS
+ *  Application Auto Scaling can scale the following
  * 
  *  resources> <ul> <li>
  * 
@@ -92,18 +92,25 @@ namespace ApplicationAutoScaling {
  * 
  *  Replicas</a>> </li> <li>
  * 
- *  Amazon SageMaker endpoints. For more information, see <a
+ *  Amazon SageMaker endpoint variants. For more information, see <a
  *  href="http://docs.aws.amazon.com/sagemaker/latest/dg/endpoint-auto-scaling.html">Automatically Scaling Amazon SageMaker
  * 
- *  Models</a>> </li> </ul>
+ *  Models</a>> </li> <li>
  * 
- *  To configure automatic scaling for multiple resources across multiple services, use AWS Auto Scaling to create a scaling
- *  plan for your application. For more information, see <a href="http://aws.amazon.com/autoscaling">AWS Auto
+ *  Custom resources provided by your own applications or services. More information is available in our <a
+ *  href="https://github.com/aws/aws-auto-scaling-custom-resource">GitHub repository</a>.
+ * 
+ *  </p </li> </ul>
  * 
- *  Scaling</a>>
+ *  To learn more about Application Auto Scaling, see the <a
+ *  href="http://docs.aws.amazon.com/autoscaling/application/userguide/what-is-application-auto-scaling.html">Application
+ *  Auto Scaling User
  * 
- *  For a list of supported regions, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#as-app_region">AWS
- *  Regions and Endpoints: Application Auto Scaling</a> in the <i>AWS General
+ *  Guide</a>>
+ * 
+ *  To configure automatic scaling for multiple resources across multiple services, use AWS Auto Scaling to create a scaling
+ *  plan for your application. For more information, see the <a
+ *  href="http://docs.aws.amazon.com/autoscaling/plans/userguide/what-is-aws-auto-scaling.html">AWS Auto Scaling User
  *
  * \sa ApplicationAutoScalingClient::deleteScalingPolicy
  */
diff --git a/src/applicationautoscaling/deletescalingpolicyresponse.cpp b/src/applicationautoscaling/deletescalingpolicyresponse.cpp
index dd5994520c..4979ebc91d 100644
--- a/src/applicationautoscaling/deletescalingpolicyresponse.cpp
+++ b/src/applicationautoscaling/deletescalingpolicyresponse.cpp
@@ -33,12 +33,12 @@ namespace ApplicationAutoScaling {
  *
  * \inmodule QtAwsApplicationAutoScaling
  *
- *  With Application Auto Scaling, you can configure automatic scaling for your scalable AWS resources. You can use
- *  Application Auto Scaling to accomplish the following
+ *  With Application Auto Scaling, you can configure automatic scaling for your scalable resources. You can use Application
+ *  Auto Scaling to accomplish the following
  * 
  *  tasks> <ul> <li>
  * 
- *  Define scaling policies to automatically scale your AWS
+ *  Define scaling policies to automatically scale your AWS or custom
  * 
  *  resource> </li> <li>
  * 
@@ -54,7 +54,7 @@ namespace ApplicationAutoScaling {
  * 
  *  event> </li> </ul>
  * 
- *  Application Auto Scaling can scale the following AWS
+ *  Application Auto Scaling can scale the following
  * 
  *  resources> <ul> <li>
  * 
@@ -94,18 +94,25 @@ namespace ApplicationAutoScaling {
  * 
  *  Replicas</a>> </li> <li>
  * 
- *  Amazon SageMaker endpoints. For more information, see <a
+ *  Amazon SageMaker endpoint variants. For more information, see <a
  *  href="http://docs.aws.amazon.com/sagemaker/latest/dg/endpoint-auto-scaling.html">Automatically Scaling Amazon SageMaker
  * 
- *  Models</a>> </li> </ul>
+ *  Models</a>> </li> <li>
  * 
- *  To configure automatic scaling for multiple resources across multiple services, use AWS Auto Scaling to create a scaling
- *  plan for your application. For more information, see <a href="http://aws.amazon.com/autoscaling">AWS Auto
+ *  Custom resources provided by your own applications or services. More information is available in our <a
+ *  href="https://github.com/aws/aws-auto-scaling-custom-resource">GitHub repository</a>.
+ * 
+ *  </p </li> </ul>
  * 
- *  Scaling</a>>
+ *  To learn more about Application Auto Scaling, see the <a
+ *  href="http://docs.aws.amazon.com/autoscaling/application/userguide/what-is-application-auto-scaling.html">Application
+ *  Auto Scaling User
  * 
- *  For a list of supported regions, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#as-app_region">AWS
- *  Regions and Endpoints: Application Auto Scaling</a> in the <i>AWS General
+ *  Guide</a>>
+ * 
+ *  To configure automatic scaling for multiple resources across multiple services, use AWS Auto Scaling to create a scaling
+ *  plan for your application. For more information, see the <a
+ *  href="http://docs.aws.amazon.com/autoscaling/plans/userguide/what-is-aws-auto-scaling.html">AWS Auto Scaling User
  *
  * \sa ApplicationAutoScalingClient::deleteScalingPolicy
  */
diff --git a/src/applicationautoscaling/deletescheduledactionrequest.cpp b/src/applicationautoscaling/deletescheduledactionrequest.cpp
index 768702c8b0..9dee1917c0 100644
--- a/src/applicationautoscaling/deletescheduledactionrequest.cpp
+++ b/src/applicationautoscaling/deletescheduledactionrequest.cpp
@@ -31,12 +31,12 @@ namespace ApplicationAutoScaling {
  *
  * \inmodule QtAwsApplicationAutoScaling
  *
- *  With Application Auto Scaling, you can configure automatic scaling for your scalable AWS resources. You can use
- *  Application Auto Scaling to accomplish the following
+ *  With Application Auto Scaling, you can configure automatic scaling for your scalable resources. You can use Application
+ *  Auto Scaling to accomplish the following
  * 
  *  tasks> <ul> <li>
  * 
- *  Define scaling policies to automatically scale your AWS
+ *  Define scaling policies to automatically scale your AWS or custom
  * 
  *  resource> </li> <li>
  * 
@@ -52,7 +52,7 @@ namespace ApplicationAutoScaling {
  * 
  *  event> </li> </ul>
  * 
- *  Application Auto Scaling can scale the following AWS
+ *  Application Auto Scaling can scale the following
  * 
  *  resources> <ul> <li>
  * 
@@ -92,18 +92,25 @@ namespace ApplicationAutoScaling {
  * 
  *  Replicas</a>> </li> <li>
  * 
- *  Amazon SageMaker endpoints. For more information, see <a
+ *  Amazon SageMaker endpoint variants. For more information, see <a
  *  href="http://docs.aws.amazon.com/sagemaker/latest/dg/endpoint-auto-scaling.html">Automatically Scaling Amazon SageMaker
  * 
- *  Models</a>> </li> </ul>
+ *  Models</a>> </li> <li>
  * 
- *  To configure automatic scaling for multiple resources across multiple services, use AWS Auto Scaling to create a scaling
- *  plan for your application. For more information, see <a href="http://aws.amazon.com/autoscaling">AWS Auto
+ *  Custom resources provided by your own applications or services. More information is available in our <a
+ *  href="https://github.com/aws/aws-auto-scaling-custom-resource">GitHub repository</a>.
+ * 
+ *  </p </li> </ul>
  * 
- *  Scaling</a>>
+ *  To learn more about Application Auto Scaling, see the <a
+ *  href="http://docs.aws.amazon.com/autoscaling/application/userguide/what-is-application-auto-scaling.html">Application
+ *  Auto Scaling User
  * 
- *  For a list of supported regions, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#as-app_region">AWS
- *  Regions and Endpoints: Application Auto Scaling</a> in the <i>AWS General
+ *  Guide</a>>
+ * 
+ *  To configure automatic scaling for multiple resources across multiple services, use AWS Auto Scaling to create a scaling
+ *  plan for your application. For more information, see the <a
+ *  href="http://docs.aws.amazon.com/autoscaling/plans/userguide/what-is-aws-auto-scaling.html">AWS Auto Scaling User
  *
  * \sa ApplicationAutoScalingClient::deleteScheduledAction
  */
diff --git a/src/applicationautoscaling/deletescheduledactionresponse.cpp b/src/applicationautoscaling/deletescheduledactionresponse.cpp
index dd7ff4af5e..538b1433a6 100644
--- a/src/applicationautoscaling/deletescheduledactionresponse.cpp
+++ b/src/applicationautoscaling/deletescheduledactionresponse.cpp
@@ -33,12 +33,12 @@ namespace ApplicationAutoScaling {
  *
  * \inmodule QtAwsApplicationAutoScaling
  *
- *  With Application Auto Scaling, you can configure automatic scaling for your scalable AWS resources. You can use
- *  Application Auto Scaling to accomplish the following
+ *  With Application Auto Scaling, you can configure automatic scaling for your scalable resources. You can use Application
+ *  Auto Scaling to accomplish the following
  * 
  *  tasks> <ul> <li>
  * 
- *  Define scaling policies to automatically scale your AWS
+ *  Define scaling policies to automatically scale your AWS or custom
  * 
  *  resource> </li> <li>
  * 
@@ -54,7 +54,7 @@ namespace ApplicationAutoScaling {
  * 
  *  event> </li> </ul>
  * 
- *  Application Auto Scaling can scale the following AWS
+ *  Application Auto Scaling can scale the following
  * 
  *  resources> <ul> <li>
  * 
@@ -94,18 +94,25 @@ namespace ApplicationAutoScaling {
  * 
  *  Replicas</a>> </li> <li>
  * 
- *  Amazon SageMaker endpoints. For more information, see <a
+ *  Amazon SageMaker endpoint variants. For more information, see <a
  *  href="http://docs.aws.amazon.com/sagemaker/latest/dg/endpoint-auto-scaling.html">Automatically Scaling Amazon SageMaker
  * 
- *  Models</a>> </li> </ul>
+ *  Models</a>> </li> <li>
  * 
- *  To configure automatic scaling for multiple resources across multiple services, use AWS Auto Scaling to create a scaling
- *  plan for your application. For more information, see <a href="http://aws.amazon.com/autoscaling">AWS Auto
+ *  Custom resources provided by your own applications or services. More information is available in our <a
+ *  href="https://github.com/aws/aws-auto-scaling-custom-resource">GitHub repository</a>.
+ * 
+ *  </p </li> </ul>
  * 
- *  Scaling</a>>
+ *  To learn more about Application Auto Scaling, see the <a
+ *  href="http://docs.aws.amazon.com/autoscaling/application/userguide/what-is-application-auto-scaling.html">Application
+ *  Auto Scaling User
  * 
- *  For a list of supported regions, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#as-app_region">AWS
- *  Regions and Endpoints: Application Auto Scaling</a> in the <i>AWS General
+ *  Guide</a>>
+ * 
+ *  To configure automatic scaling for multiple resources across multiple services, use AWS Auto Scaling to create a scaling
+ *  plan for your application. For more information, see the <a
+ *  href="http://docs.aws.amazon.com/autoscaling/plans/userguide/what-is-aws-auto-scaling.html">AWS Auto Scaling User
  *
  * \sa ApplicationAutoScalingClient::deleteScheduledAction
  */
diff --git a/src/applicationautoscaling/deregisterscalabletargetrequest.cpp b/src/applicationautoscaling/deregisterscalabletargetrequest.cpp
index b547678253..6e65b1299f 100644
--- a/src/applicationautoscaling/deregisterscalabletargetrequest.cpp
+++ b/src/applicationautoscaling/deregisterscalabletargetrequest.cpp
@@ -31,12 +31,12 @@ namespace ApplicationAutoScaling {
  *
  * \inmodule QtAwsApplicationAutoScaling
  *
- *  With Application Auto Scaling, you can configure automatic scaling for your scalable AWS resources. You can use
- *  Application Auto Scaling to accomplish the following
+ *  With Application Auto Scaling, you can configure automatic scaling for your scalable resources. You can use Application
+ *  Auto Scaling to accomplish the following
  * 
  *  tasks> <ul> <li>
  * 
- *  Define scaling policies to automatically scale your AWS
+ *  Define scaling policies to automatically scale your AWS or custom
  * 
  *  resource> </li> <li>
  * 
@@ -52,7 +52,7 @@ namespace ApplicationAutoScaling {
  * 
  *  event> </li> </ul>
  * 
- *  Application Auto Scaling can scale the following AWS
+ *  Application Auto Scaling can scale the following
  * 
  *  resources> <ul> <li>
  * 
@@ -92,18 +92,25 @@ namespace ApplicationAutoScaling {
  * 
  *  Replicas</a>> </li> <li>
  * 
- *  Amazon SageMaker endpoints. For more information, see <a
+ *  Amazon SageMaker endpoint variants. For more information, see <a
  *  href="http://docs.aws.amazon.com/sagemaker/latest/dg/endpoint-auto-scaling.html">Automatically Scaling Amazon SageMaker
  * 
- *  Models</a>> </li> </ul>
+ *  Models</a>> </li> <li>
  * 
- *  To configure automatic scaling for multiple resources across multiple services, use AWS Auto Scaling to create a scaling
- *  plan for your application. For more information, see <a href="http://aws.amazon.com/autoscaling">AWS Auto
+ *  Custom resources provided by your own applications or services. More information is available in our <a
+ *  href="https://github.com/aws/aws-auto-scaling-custom-resource">GitHub repository</a>.
+ * 
+ *  </p </li> </ul>
  * 
- *  Scaling</a>>
+ *  To learn more about Application Auto Scaling, see the <a
+ *  href="http://docs.aws.amazon.com/autoscaling/application/userguide/what-is-application-auto-scaling.html">Application
+ *  Auto Scaling User
  * 
- *  For a list of supported regions, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#as-app_region">AWS
- *  Regions and Endpoints: Application Auto Scaling</a> in the <i>AWS General
+ *  Guide</a>>
+ * 
+ *  To configure automatic scaling for multiple resources across multiple services, use AWS Auto Scaling to create a scaling
+ *  plan for your application. For more information, see the <a
+ *  href="http://docs.aws.amazon.com/autoscaling/plans/userguide/what-is-aws-auto-scaling.html">AWS Auto Scaling User
  *
  * \sa ApplicationAutoScalingClient::deregisterScalableTarget
  */
diff --git a/src/applicationautoscaling/deregisterscalabletargetresponse.cpp b/src/applicationautoscaling/deregisterscalabletargetresponse.cpp
index 56119bbef4..1f33420b7a 100644
--- a/src/applicationautoscaling/deregisterscalabletargetresponse.cpp
+++ b/src/applicationautoscaling/deregisterscalabletargetresponse.cpp
@@ -33,12 +33,12 @@ namespace ApplicationAutoScaling {
  *
  * \inmodule QtAwsApplicationAutoScaling
  *
- *  With Application Auto Scaling, you can configure automatic scaling for your scalable AWS resources. You can use
- *  Application Auto Scaling to accomplish the following
+ *  With Application Auto Scaling, you can configure automatic scaling for your scalable resources. You can use Application
+ *  Auto Scaling to accomplish the following
  * 
  *  tasks> <ul> <li>
  * 
- *  Define scaling policies to automatically scale your AWS
+ *  Define scaling policies to automatically scale your AWS or custom
  * 
  *  resource> </li> <li>
  * 
@@ -54,7 +54,7 @@ namespace ApplicationAutoScaling {
  * 
  *  event> </li> </ul>
  * 
- *  Application Auto Scaling can scale the following AWS
+ *  Application Auto Scaling can scale the following
  * 
  *  resources> <ul> <li>
  * 
@@ -94,18 +94,25 @@ namespace ApplicationAutoScaling {
  * 
  *  Replicas</a>> </li> <li>
  * 
- *  Amazon SageMaker endpoints. For more information, see <a
+ *  Amazon SageMaker endpoint variants. For more information, see <a
  *  href="http://docs.aws.amazon.com/sagemaker/latest/dg/endpoint-auto-scaling.html">Automatically Scaling Amazon SageMaker
  * 
- *  Models</a>> </li> </ul>
+ *  Models</a>> </li> <li>
  * 
- *  To configure automatic scaling for multiple resources across multiple services, use AWS Auto Scaling to create a scaling
- *  plan for your application. For more information, see <a href="http://aws.amazon.com/autoscaling">AWS Auto
+ *  Custom resources provided by your own applications or services. More information is available in our <a
+ *  href="https://github.com/aws/aws-auto-scaling-custom-resource">GitHub repository</a>.
+ * 
+ *  </p </li> </ul>
  * 
- *  Scaling</a>>
+ *  To learn more about Application Auto Scaling, see the <a
+ *  href="http://docs.aws.amazon.com/autoscaling/application/userguide/what-is-application-auto-scaling.html">Application
+ *  Auto Scaling User
  * 
- *  For a list of supported regions, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#as-app_region">AWS
- *  Regions and Endpoints: Application Auto Scaling</a> in the <i>AWS General
+ *  Guide</a>>
+ * 
+ *  To configure automatic scaling for multiple resources across multiple services, use AWS Auto Scaling to create a scaling
+ *  plan for your application. For more information, see the <a
+ *  href="http://docs.aws.amazon.com/autoscaling/plans/userguide/what-is-aws-auto-scaling.html">AWS Auto Scaling User
  *
  * \sa ApplicationAutoScalingClient::deregisterScalableTarget
  */
diff --git a/src/applicationautoscaling/describescalabletargetsrequest.cpp b/src/applicationautoscaling/describescalabletargetsrequest.cpp
index 6835d4d901..929cc04531 100644
--- a/src/applicationautoscaling/describescalabletargetsrequest.cpp
+++ b/src/applicationautoscaling/describescalabletargetsrequest.cpp
@@ -31,12 +31,12 @@ namespace ApplicationAutoScaling {
  *
  * \inmodule QtAwsApplicationAutoScaling
  *
- *  With Application Auto Scaling, you can configure automatic scaling for your scalable AWS resources. You can use
- *  Application Auto Scaling to accomplish the following
+ *  With Application Auto Scaling, you can configure automatic scaling for your scalable resources. You can use Application
+ *  Auto Scaling to accomplish the following
  * 
  *  tasks> <ul> <li>
  * 
- *  Define scaling policies to automatically scale your AWS
+ *  Define scaling policies to automatically scale your AWS or custom
  * 
  *  resource> </li> <li>
  * 
@@ -52,7 +52,7 @@ namespace ApplicationAutoScaling {
  * 
  *  event> </li> </ul>
  * 
- *  Application Auto Scaling can scale the following AWS
+ *  Application Auto Scaling can scale the following
  * 
  *  resources> <ul> <li>
  * 
@@ -92,18 +92,25 @@ namespace ApplicationAutoScaling {
  * 
  *  Replicas</a>> </li> <li>
  * 
- *  Amazon SageMaker endpoints. For more information, see <a
+ *  Amazon SageMaker endpoint variants. For more information, see <a
  *  href="http://docs.aws.amazon.com/sagemaker/latest/dg/endpoint-auto-scaling.html">Automatically Scaling Amazon SageMaker
  * 
- *  Models</a>> </li> </ul>
+ *  Models</a>> </li> <li>
  * 
- *  To configure automatic scaling for multiple resources across multiple services, use AWS Auto Scaling to create a scaling
- *  plan for your application. For more information, see <a href="http://aws.amazon.com/autoscaling">AWS Auto
+ *  Custom resources provided by your own applications or services. More information is available in our <a
+ *  href="https://github.com/aws/aws-auto-scaling-custom-resource">GitHub repository</a>.
+ * 
+ *  </p </li> </ul>
  * 
- *  Scaling</a>>
+ *  To learn more about Application Auto Scaling, see the <a
+ *  href="http://docs.aws.amazon.com/autoscaling/application/userguide/what-is-application-auto-scaling.html">Application
+ *  Auto Scaling User
  * 
- *  For a list of supported regions, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#as-app_region">AWS
- *  Regions and Endpoints: Application Auto Scaling</a> in the <i>AWS General
+ *  Guide</a>>
+ * 
+ *  To configure automatic scaling for multiple resources across multiple services, use AWS Auto Scaling to create a scaling
+ *  plan for your application. For more information, see the <a
+ *  href="http://docs.aws.amazon.com/autoscaling/plans/userguide/what-is-aws-auto-scaling.html">AWS Auto Scaling User
  *
  * \sa ApplicationAutoScalingClient::describeScalableTargets
  */
diff --git a/src/applicationautoscaling/describescalabletargetsresponse.cpp b/src/applicationautoscaling/describescalabletargetsresponse.cpp
index 7658694c99..fa01293768 100644
--- a/src/applicationautoscaling/describescalabletargetsresponse.cpp
+++ b/src/applicationautoscaling/describescalabletargetsresponse.cpp
@@ -33,12 +33,12 @@ namespace ApplicationAutoScaling {
  *
  * \inmodule QtAwsApplicationAutoScaling
  *
- *  With Application Auto Scaling, you can configure automatic scaling for your scalable AWS resources. You can use
- *  Application Auto Scaling to accomplish the following
+ *  With Application Auto Scaling, you can configure automatic scaling for your scalable resources. You can use Application
+ *  Auto Scaling to accomplish the following
  * 
  *  tasks> <ul> <li>
  * 
- *  Define scaling policies to automatically scale your AWS
+ *  Define scaling policies to automatically scale your AWS or custom
  * 
  *  resource> </li> <li>
  * 
@@ -54,7 +54,7 @@ namespace ApplicationAutoScaling {
  * 
  *  event> </li> </ul>
  * 
- *  Application Auto Scaling can scale the following AWS
+ *  Application Auto Scaling can scale the following
  * 
  *  resources> <ul> <li>
  * 
@@ -94,18 +94,25 @@ namespace ApplicationAutoScaling {
  * 
  *  Replicas</a>> </li> <li>
  * 
- *  Amazon SageMaker endpoints. For more information, see <a
+ *  Amazon SageMaker endpoint variants. For more information, see <a
  *  href="http://docs.aws.amazon.com/sagemaker/latest/dg/endpoint-auto-scaling.html">Automatically Scaling Amazon SageMaker
  * 
- *  Models</a>> </li> </ul>
+ *  Models</a>> </li> <li>
  * 
- *  To configure automatic scaling for multiple resources across multiple services, use AWS Auto Scaling to create a scaling
- *  plan for your application. For more information, see <a href="http://aws.amazon.com/autoscaling">AWS Auto
+ *  Custom resources provided by your own applications or services. More information is available in our <a
+ *  href="https://github.com/aws/aws-auto-scaling-custom-resource">GitHub repository</a>.
+ * 
+ *  </p </li> </ul>
  * 
- *  Scaling</a>>
+ *  To learn more about Application Auto Scaling, see the <a
+ *  href="http://docs.aws.amazon.com/autoscaling/application/userguide/what-is-application-auto-scaling.html">Application
+ *  Auto Scaling User
  * 
- *  For a list of supported regions, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#as-app_region">AWS
- *  Regions and Endpoints: Application Auto Scaling</a> in the <i>AWS General
+ *  Guide</a>>
+ * 
+ *  To configure automatic scaling for multiple resources across multiple services, use AWS Auto Scaling to create a scaling
+ *  plan for your application. For more information, see the <a
+ *  href="http://docs.aws.amazon.com/autoscaling/plans/userguide/what-is-aws-auto-scaling.html">AWS Auto Scaling User
  *
  * \sa ApplicationAutoScalingClient::describeScalableTargets
  */
diff --git a/src/applicationautoscaling/describescalingactivitiesrequest.cpp b/src/applicationautoscaling/describescalingactivitiesrequest.cpp
index 77353c3d23..3e7cb6ce9e 100644
--- a/src/applicationautoscaling/describescalingactivitiesrequest.cpp
+++ b/src/applicationautoscaling/describescalingactivitiesrequest.cpp
@@ -31,12 +31,12 @@ namespace ApplicationAutoScaling {
  *
  * \inmodule QtAwsApplicationAutoScaling
  *
- *  With Application Auto Scaling, you can configure automatic scaling for your scalable AWS resources. You can use
- *  Application Auto Scaling to accomplish the following
+ *  With Application Auto Scaling, you can configure automatic scaling for your scalable resources. You can use Application
+ *  Auto Scaling to accomplish the following
  * 
  *  tasks> <ul> <li>
  * 
- *  Define scaling policies to automatically scale your AWS
+ *  Define scaling policies to automatically scale your AWS or custom
  * 
  *  resource> </li> <li>
  * 
@@ -52,7 +52,7 @@ namespace ApplicationAutoScaling {
  * 
  *  event> </li> </ul>
  * 
- *  Application Auto Scaling can scale the following AWS
+ *  Application Auto Scaling can scale the following
  * 
  *  resources> <ul> <li>
  * 
@@ -92,18 +92,25 @@ namespace ApplicationAutoScaling {
  * 
  *  Replicas</a>> </li> <li>
  * 
- *  Amazon SageMaker endpoints. For more information, see <a
+ *  Amazon SageMaker endpoint variants. For more information, see <a
  *  href="http://docs.aws.amazon.com/sagemaker/latest/dg/endpoint-auto-scaling.html">Automatically Scaling Amazon SageMaker
  * 
- *  Models</a>> </li> </ul>
+ *  Models</a>> </li> <li>
  * 
- *  To configure automatic scaling for multiple resources across multiple services, use AWS Auto Scaling to create a scaling
- *  plan for your application. For more information, see <a href="http://aws.amazon.com/autoscaling">AWS Auto
+ *  Custom resources provided by your own applications or services. More information is available in our <a
+ *  href="https://github.com/aws/aws-auto-scaling-custom-resource">GitHub repository</a>.
+ * 
+ *  </p </li> </ul>
  * 
- *  Scaling</a>>
+ *  To learn more about Application Auto Scaling, see the <a
+ *  href="http://docs.aws.amazon.com/autoscaling/application/userguide/what-is-application-auto-scaling.html">Application
+ *  Auto Scaling User
  * 
- *  For a list of supported regions, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#as-app_region">AWS
- *  Regions and Endpoints: Application Auto Scaling</a> in the <i>AWS General
+ *  Guide</a>>
+ * 
+ *  To configure automatic scaling for multiple resources across multiple services, use AWS Auto Scaling to create a scaling
+ *  plan for your application. For more information, see the <a
+ *  href="http://docs.aws.amazon.com/autoscaling/plans/userguide/what-is-aws-auto-scaling.html">AWS Auto Scaling User
  *
  * \sa ApplicationAutoScalingClient::describeScalingActivities
  */
diff --git a/src/applicationautoscaling/describescalingactivitiesresponse.cpp b/src/applicationautoscaling/describescalingactivitiesresponse.cpp
index f6888d5c13..f970557aca 100644
--- a/src/applicationautoscaling/describescalingactivitiesresponse.cpp
+++ b/src/applicationautoscaling/describescalingactivitiesresponse.cpp
@@ -33,12 +33,12 @@ namespace ApplicationAutoScaling {
  *
  * \inmodule QtAwsApplicationAutoScaling
  *
- *  With Application Auto Scaling, you can configure automatic scaling for your scalable AWS resources. You can use
- *  Application Auto Scaling to accomplish the following
+ *  With Application Auto Scaling, you can configure automatic scaling for your scalable resources. You can use Application
+ *  Auto Scaling to accomplish the following
  * 
  *  tasks> <ul> <li>
  * 
- *  Define scaling policies to automatically scale your AWS
+ *  Define scaling policies to automatically scale your AWS or custom
  * 
  *  resource> </li> <li>
  * 
@@ -54,7 +54,7 @@ namespace ApplicationAutoScaling {
  * 
  *  event> </li> </ul>
  * 
- *  Application Auto Scaling can scale the following AWS
+ *  Application Auto Scaling can scale the following
  * 
  *  resources> <ul> <li>
  * 
@@ -94,18 +94,25 @@ namespace ApplicationAutoScaling {
  * 
  *  Replicas</a>> </li> <li>
  * 
- *  Amazon SageMaker endpoints. For more information, see <a
+ *  Amazon SageMaker endpoint variants. For more information, see <a
  *  href="http://docs.aws.amazon.com/sagemaker/latest/dg/endpoint-auto-scaling.html">Automatically Scaling Amazon SageMaker
  * 
- *  Models</a>> </li> </ul>
+ *  Models</a>> </li> <li>
  * 
- *  To configure automatic scaling for multiple resources across multiple services, use AWS Auto Scaling to create a scaling
- *  plan for your application. For more information, see <a href="http://aws.amazon.com/autoscaling">AWS Auto
+ *  Custom resources provided by your own applications or services. More information is available in our <a
+ *  href="https://github.com/aws/aws-auto-scaling-custom-resource">GitHub repository</a>.
+ * 
+ *  </p </li> </ul>
  * 
- *  Scaling</a>>
+ *  To learn more about Application Auto Scaling, see the <a
+ *  href="http://docs.aws.amazon.com/autoscaling/application/userguide/what-is-application-auto-scaling.html">Application
+ *  Auto Scaling User
  * 
- *  For a list of supported regions, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#as-app_region">AWS
- *  Regions and Endpoints: Application Auto Scaling</a> in the <i>AWS General
+ *  Guide</a>>
+ * 
+ *  To configure automatic scaling for multiple resources across multiple services, use AWS Auto Scaling to create a scaling
+ *  plan for your application. For more information, see the <a
+ *  href="http://docs.aws.amazon.com/autoscaling/plans/userguide/what-is-aws-auto-scaling.html">AWS Auto Scaling User
  *
  * \sa ApplicationAutoScalingClient::describeScalingActivities
  */
diff --git a/src/applicationautoscaling/describescalingpoliciesrequest.cpp b/src/applicationautoscaling/describescalingpoliciesrequest.cpp
index f1433852dc..0289bbcbce 100644
--- a/src/applicationautoscaling/describescalingpoliciesrequest.cpp
+++ b/src/applicationautoscaling/describescalingpoliciesrequest.cpp
@@ -31,12 +31,12 @@ namespace ApplicationAutoScaling {
  *
  * \inmodule QtAwsApplicationAutoScaling
  *
- *  With Application Auto Scaling, you can configure automatic scaling for your scalable AWS resources. You can use
- *  Application Auto Scaling to accomplish the following
+ *  With Application Auto Scaling, you can configure automatic scaling for your scalable resources. You can use Application
+ *  Auto Scaling to accomplish the following
  * 
  *  tasks> <ul> <li>
  * 
- *  Define scaling policies to automatically scale your AWS
+ *  Define scaling policies to automatically scale your AWS or custom
  * 
  *  resource> </li> <li>
  * 
@@ -52,7 +52,7 @@ namespace ApplicationAutoScaling {
  * 
  *  event> </li> </ul>
  * 
- *  Application Auto Scaling can scale the following AWS
+ *  Application Auto Scaling can scale the following
  * 
  *  resources> <ul> <li>
  * 
@@ -92,18 +92,25 @@ namespace ApplicationAutoScaling {
  * 
  *  Replicas</a>> </li> <li>
  * 
- *  Amazon SageMaker endpoints. For more information, see <a
+ *  Amazon SageMaker endpoint variants. For more information, see <a
  *  href="http://docs.aws.amazon.com/sagemaker/latest/dg/endpoint-auto-scaling.html">Automatically Scaling Amazon SageMaker
  * 
- *  Models</a>> </li> </ul>
+ *  Models</a>> </li> <li>
  * 
- *  To configure automatic scaling for multiple resources across multiple services, use AWS Auto Scaling to create a scaling
- *  plan for your application. For more information, see <a href="http://aws.amazon.com/autoscaling">AWS Auto
+ *  Custom resources provided by your own applications or services. More information is available in our <a
+ *  href="https://github.com/aws/aws-auto-scaling-custom-resource">GitHub repository</a>.
+ * 
+ *  </p </li> </ul>
  * 
- *  Scaling</a>>
+ *  To learn more about Application Auto Scaling, see the <a
+ *  href="http://docs.aws.amazon.com/autoscaling/application/userguide/what-is-application-auto-scaling.html">Application
+ *  Auto Scaling User
  * 
- *  For a list of supported regions, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#as-app_region">AWS
- *  Regions and Endpoints: Application Auto Scaling</a> in the <i>AWS General
+ *  Guide</a>>
+ * 
+ *  To configure automatic scaling for multiple resources across multiple services, use AWS Auto Scaling to create a scaling
+ *  plan for your application. For more information, see the <a
+ *  href="http://docs.aws.amazon.com/autoscaling/plans/userguide/what-is-aws-auto-scaling.html">AWS Auto Scaling User
  *
  * \sa ApplicationAutoScalingClient::describeScalingPolicies
  */
diff --git a/src/applicationautoscaling/describescalingpoliciesresponse.cpp b/src/applicationautoscaling/describescalingpoliciesresponse.cpp
index fe5bf871d0..2570bcb014 100644
--- a/src/applicationautoscaling/describescalingpoliciesresponse.cpp
+++ b/src/applicationautoscaling/describescalingpoliciesresponse.cpp
@@ -33,12 +33,12 @@ namespace ApplicationAutoScaling {
  *
  * \inmodule QtAwsApplicationAutoScaling
  *
- *  With Application Auto Scaling, you can configure automatic scaling for your scalable AWS resources. You can use
- *  Application Auto Scaling to accomplish the following
+ *  With Application Auto Scaling, you can configure automatic scaling for your scalable resources. You can use Application
+ *  Auto Scaling to accomplish the following
  * 
  *  tasks> <ul> <li>
  * 
- *  Define scaling policies to automatically scale your AWS
+ *  Define scaling policies to automatically scale your AWS or custom
  * 
  *  resource> </li> <li>
  * 
@@ -54,7 +54,7 @@ namespace ApplicationAutoScaling {
  * 
  *  event> </li> </ul>
  * 
- *  Application Auto Scaling can scale the following AWS
+ *  Application Auto Scaling can scale the following
  * 
  *  resources> <ul> <li>
  * 
@@ -94,18 +94,25 @@ namespace ApplicationAutoScaling {
  * 
  *  Replicas</a>> </li> <li>
  * 
- *  Amazon SageMaker endpoints. For more information, see <a
+ *  Amazon SageMaker endpoint variants. For more information, see <a
  *  href="http://docs.aws.amazon.com/sagemaker/latest/dg/endpoint-auto-scaling.html">Automatically Scaling Amazon SageMaker
  * 
- *  Models</a>> </li> </ul>
+ *  Models</a>> </li> <li>
  * 
- *  To configure automatic scaling for multiple resources across multiple services, use AWS Auto Scaling to create a scaling
- *  plan for your application. For more information, see <a href="http://aws.amazon.com/autoscaling">AWS Auto
+ *  Custom resources provided by your own applications or services. More information is available in our <a
+ *  href="https://github.com/aws/aws-auto-scaling-custom-resource">GitHub repository</a>.
+ * 
+ *  </p </li> </ul>
  * 
- *  Scaling</a>>
+ *  To learn more about Application Auto Scaling, see the <a
+ *  href="http://docs.aws.amazon.com/autoscaling/application/userguide/what-is-application-auto-scaling.html">Application
+ *  Auto Scaling User
  * 
- *  For a list of supported regions, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#as-app_region">AWS
- *  Regions and Endpoints: Application Auto Scaling</a> in the <i>AWS General
+ *  Guide</a>>
+ * 
+ *  To configure automatic scaling for multiple resources across multiple services, use AWS Auto Scaling to create a scaling
+ *  plan for your application. For more information, see the <a
+ *  href="http://docs.aws.amazon.com/autoscaling/plans/userguide/what-is-aws-auto-scaling.html">AWS Auto Scaling User
  *
  * \sa ApplicationAutoScalingClient::describeScalingPolicies
  */
diff --git a/src/applicationautoscaling/describescheduledactionsrequest.cpp b/src/applicationautoscaling/describescheduledactionsrequest.cpp
index 87466e69ef..3136e2e54d 100644
--- a/src/applicationautoscaling/describescheduledactionsrequest.cpp
+++ b/src/applicationautoscaling/describescheduledactionsrequest.cpp
@@ -31,12 +31,12 @@ namespace ApplicationAutoScaling {
  *
  * \inmodule QtAwsApplicationAutoScaling
  *
- *  With Application Auto Scaling, you can configure automatic scaling for your scalable AWS resources. You can use
- *  Application Auto Scaling to accomplish the following
+ *  With Application Auto Scaling, you can configure automatic scaling for your scalable resources. You can use Application
+ *  Auto Scaling to accomplish the following
  * 
  *  tasks> <ul> <li>
  * 
- *  Define scaling policies to automatically scale your AWS
+ *  Define scaling policies to automatically scale your AWS or custom
  * 
  *  resource> </li> <li>
  * 
@@ -52,7 +52,7 @@ namespace ApplicationAutoScaling {
  * 
  *  event> </li> </ul>
  * 
- *  Application Auto Scaling can scale the following AWS
+ *  Application Auto Scaling can scale the following
  * 
  *  resources> <ul> <li>
  * 
@@ -92,18 +92,25 @@ namespace ApplicationAutoScaling {
  * 
  *  Replicas</a>> </li> <li>
  * 
- *  Amazon SageMaker endpoints. For more information, see <a
+ *  Amazon SageMaker endpoint variants. For more information, see <a
  *  href="http://docs.aws.amazon.com/sagemaker/latest/dg/endpoint-auto-scaling.html">Automatically Scaling Amazon SageMaker
  * 
- *  Models</a>> </li> </ul>
+ *  Models</a>> </li> <li>
  * 
- *  To configure automatic scaling for multiple resources across multiple services, use AWS Auto Scaling to create a scaling
- *  plan for your application. For more information, see <a href="http://aws.amazon.com/autoscaling">AWS Auto
+ *  Custom resources provided by your own applications or services. More information is available in our <a
+ *  href="https://github.com/aws/aws-auto-scaling-custom-resource">GitHub repository</a>.
+ * 
+ *  </p </li> </ul>
  * 
- *  Scaling</a>>
+ *  To learn more about Application Auto Scaling, see the <a
+ *  href="http://docs.aws.amazon.com/autoscaling/application/userguide/what-is-application-auto-scaling.html">Application
+ *  Auto Scaling User
  * 
- *  For a list of supported regions, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#as-app_region">AWS
- *  Regions and Endpoints: Application Auto Scaling</a> in the <i>AWS General
+ *  Guide</a>>
+ * 
+ *  To configure automatic scaling for multiple resources across multiple services, use AWS Auto Scaling to create a scaling
+ *  plan for your application. For more information, see the <a
+ *  href="http://docs.aws.amazon.com/autoscaling/plans/userguide/what-is-aws-auto-scaling.html">AWS Auto Scaling User
  *
  * \sa ApplicationAutoScalingClient::describeScheduledActions
  */
diff --git a/src/applicationautoscaling/describescheduledactionsresponse.cpp b/src/applicationautoscaling/describescheduledactionsresponse.cpp
index 2fc8eb9295..6c2f2c679b 100644
--- a/src/applicationautoscaling/describescheduledactionsresponse.cpp
+++ b/src/applicationautoscaling/describescheduledactionsresponse.cpp
@@ -33,12 +33,12 @@ namespace ApplicationAutoScaling {
  *
  * \inmodule QtAwsApplicationAutoScaling
  *
- *  With Application Auto Scaling, you can configure automatic scaling for your scalable AWS resources. You can use
- *  Application Auto Scaling to accomplish the following
+ *  With Application Auto Scaling, you can configure automatic scaling for your scalable resources. You can use Application
+ *  Auto Scaling to accomplish the following
  * 
  *  tasks> <ul> <li>
  * 
- *  Define scaling policies to automatically scale your AWS
+ *  Define scaling policies to automatically scale your AWS or custom
  * 
  *  resource> </li> <li>
  * 
@@ -54,7 +54,7 @@ namespace ApplicationAutoScaling {
  * 
  *  event> </li> </ul>
  * 
- *  Application Auto Scaling can scale the following AWS
+ *  Application Auto Scaling can scale the following
  * 
  *  resources> <ul> <li>
  * 
@@ -94,18 +94,25 @@ namespace ApplicationAutoScaling {
  * 
  *  Replicas</a>> </li> <li>
  * 
- *  Amazon SageMaker endpoints. For more information, see <a
+ *  Amazon SageMaker endpoint variants. For more information, see <a
  *  href="http://docs.aws.amazon.com/sagemaker/latest/dg/endpoint-auto-scaling.html">Automatically Scaling Amazon SageMaker
  * 
- *  Models</a>> </li> </ul>
+ *  Models</a>> </li> <li>
  * 
- *  To configure automatic scaling for multiple resources across multiple services, use AWS Auto Scaling to create a scaling
- *  plan for your application. For more information, see <a href="http://aws.amazon.com/autoscaling">AWS Auto
+ *  Custom resources provided by your own applications or services. More information is available in our <a
+ *  href="https://github.com/aws/aws-auto-scaling-custom-resource">GitHub repository</a>.
+ * 
+ *  </p </li> </ul>
  * 
- *  Scaling</a>>
+ *  To learn more about Application Auto Scaling, see the <a
+ *  href="http://docs.aws.amazon.com/autoscaling/application/userguide/what-is-application-auto-scaling.html">Application
+ *  Auto Scaling User
  * 
- *  For a list of supported regions, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#as-app_region">AWS
- *  Regions and Endpoints: Application Auto Scaling</a> in the <i>AWS General
+ *  Guide</a>>
+ * 
+ *  To configure automatic scaling for multiple resources across multiple services, use AWS Auto Scaling to create a scaling
+ *  plan for your application. For more information, see the <a
+ *  href="http://docs.aws.amazon.com/autoscaling/plans/userguide/what-is-aws-auto-scaling.html">AWS Auto Scaling User
  *
  * \sa ApplicationAutoScalingClient::describeScheduledActions
  */
diff --git a/src/applicationautoscaling/putscalingpolicyrequest.cpp b/src/applicationautoscaling/putscalingpolicyrequest.cpp
index 05f0cf1c9c..7aed0ac400 100644
--- a/src/applicationautoscaling/putscalingpolicyrequest.cpp
+++ b/src/applicationautoscaling/putscalingpolicyrequest.cpp
@@ -31,12 +31,12 @@ namespace ApplicationAutoScaling {
  *
  * \inmodule QtAwsApplicationAutoScaling
  *
- *  With Application Auto Scaling, you can configure automatic scaling for your scalable AWS resources. You can use
- *  Application Auto Scaling to accomplish the following
+ *  With Application Auto Scaling, you can configure automatic scaling for your scalable resources. You can use Application
+ *  Auto Scaling to accomplish the following
  * 
  *  tasks> <ul> <li>
  * 
- *  Define scaling policies to automatically scale your AWS
+ *  Define scaling policies to automatically scale your AWS or custom
  * 
  *  resource> </li> <li>
  * 
@@ -52,7 +52,7 @@ namespace ApplicationAutoScaling {
  * 
  *  event> </li> </ul>
  * 
- *  Application Auto Scaling can scale the following AWS
+ *  Application Auto Scaling can scale the following
  * 
  *  resources> <ul> <li>
  * 
@@ -92,18 +92,25 @@ namespace ApplicationAutoScaling {
  * 
  *  Replicas</a>> </li> <li>
  * 
- *  Amazon SageMaker endpoints. For more information, see <a
+ *  Amazon SageMaker endpoint variants. For more information, see <a
  *  href="http://docs.aws.amazon.com/sagemaker/latest/dg/endpoint-auto-scaling.html">Automatically Scaling Amazon SageMaker
  * 
- *  Models</a>> </li> </ul>
+ *  Models</a>> </li> <li>
  * 
- *  To configure automatic scaling for multiple resources across multiple services, use AWS Auto Scaling to create a scaling
- *  plan for your application. For more information, see <a href="http://aws.amazon.com/autoscaling">AWS Auto
+ *  Custom resources provided by your own applications or services. More information is available in our <a
+ *  href="https://github.com/aws/aws-auto-scaling-custom-resource">GitHub repository</a>.
+ * 
+ *  </p </li> </ul>
  * 
- *  Scaling</a>>
+ *  To learn more about Application Auto Scaling, see the <a
+ *  href="http://docs.aws.amazon.com/autoscaling/application/userguide/what-is-application-auto-scaling.html">Application
+ *  Auto Scaling User
  * 
- *  For a list of supported regions, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#as-app_region">AWS
- *  Regions and Endpoints: Application Auto Scaling</a> in the <i>AWS General
+ *  Guide</a>>
+ * 
+ *  To configure automatic scaling for multiple resources across multiple services, use AWS Auto Scaling to create a scaling
+ *  plan for your application. For more information, see the <a
+ *  href="http://docs.aws.amazon.com/autoscaling/plans/userguide/what-is-aws-auto-scaling.html">AWS Auto Scaling User
  *
  * \sa ApplicationAutoScalingClient::putScalingPolicy
  */
diff --git a/src/applicationautoscaling/putscalingpolicyresponse.cpp b/src/applicationautoscaling/putscalingpolicyresponse.cpp
index a94bbe2a55..69cac9eca2 100644
--- a/src/applicationautoscaling/putscalingpolicyresponse.cpp
+++ b/src/applicationautoscaling/putscalingpolicyresponse.cpp
@@ -33,12 +33,12 @@ namespace ApplicationAutoScaling {
  *
  * \inmodule QtAwsApplicationAutoScaling
  *
- *  With Application Auto Scaling, you can configure automatic scaling for your scalable AWS resources. You can use
- *  Application Auto Scaling to accomplish the following
+ *  With Application Auto Scaling, you can configure automatic scaling for your scalable resources. You can use Application
+ *  Auto Scaling to accomplish the following
  * 
  *  tasks> <ul> <li>
  * 
- *  Define scaling policies to automatically scale your AWS
+ *  Define scaling policies to automatically scale your AWS or custom
  * 
  *  resource> </li> <li>
  * 
@@ -54,7 +54,7 @@ namespace ApplicationAutoScaling {
  * 
  *  event> </li> </ul>
  * 
- *  Application Auto Scaling can scale the following AWS
+ *  Application Auto Scaling can scale the following
  * 
  *  resources> <ul> <li>
  * 
@@ -94,18 +94,25 @@ namespace ApplicationAutoScaling {
  * 
  *  Replicas</a>> </li> <li>
  * 
- *  Amazon SageMaker endpoints. For more information, see <a
+ *  Amazon SageMaker endpoint variants. For more information, see <a
  *  href="http://docs.aws.amazon.com/sagemaker/latest/dg/endpoint-auto-scaling.html">Automatically Scaling Amazon SageMaker
  * 
- *  Models</a>> </li> </ul>
+ *  Models</a>> </li> <li>
  * 
- *  To configure automatic scaling for multiple resources across multiple services, use AWS Auto Scaling to create a scaling
- *  plan for your application. For more information, see <a href="http://aws.amazon.com/autoscaling">AWS Auto
+ *  Custom resources provided by your own applications or services. More information is available in our <a
+ *  href="https://github.com/aws/aws-auto-scaling-custom-resource">GitHub repository</a>.
+ * 
+ *  </p </li> </ul>
  * 
- *  Scaling</a>>
+ *  To learn more about Application Auto Scaling, see the <a
+ *  href="http://docs.aws.amazon.com/autoscaling/application/userguide/what-is-application-auto-scaling.html">Application
+ *  Auto Scaling User
  * 
- *  For a list of supported regions, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#as-app_region">AWS
- *  Regions and Endpoints: Application Auto Scaling</a> in the <i>AWS General
+ *  Guide</a>>
+ * 
+ *  To configure automatic scaling for multiple resources across multiple services, use AWS Auto Scaling to create a scaling
+ *  plan for your application. For more information, see the <a
+ *  href="http://docs.aws.amazon.com/autoscaling/plans/userguide/what-is-aws-auto-scaling.html">AWS Auto Scaling User
  *
  * \sa ApplicationAutoScalingClient::putScalingPolicy
  */
diff --git a/src/applicationautoscaling/putscheduledactionrequest.cpp b/src/applicationautoscaling/putscheduledactionrequest.cpp
index a64ffc751c..a0aa731b32 100644
--- a/src/applicationautoscaling/putscheduledactionrequest.cpp
+++ b/src/applicationautoscaling/putscheduledactionrequest.cpp
@@ -31,12 +31,12 @@ namespace ApplicationAutoScaling {
  *
  * \inmodule QtAwsApplicationAutoScaling
  *
- *  With Application Auto Scaling, you can configure automatic scaling for your scalable AWS resources. You can use
- *  Application Auto Scaling to accomplish the following
+ *  With Application Auto Scaling, you can configure automatic scaling for your scalable resources. You can use Application
+ *  Auto Scaling to accomplish the following
  * 
  *  tasks> <ul> <li>
  * 
- *  Define scaling policies to automatically scale your AWS
+ *  Define scaling policies to automatically scale your AWS or custom
  * 
  *  resource> </li> <li>
  * 
@@ -52,7 +52,7 @@ namespace ApplicationAutoScaling {
  * 
  *  event> </li> </ul>
  * 
- *  Application Auto Scaling can scale the following AWS
+ *  Application Auto Scaling can scale the following
  * 
  *  resources> <ul> <li>
  * 
@@ -92,18 +92,25 @@ namespace ApplicationAutoScaling {
  * 
  *  Replicas</a>> </li> <li>
  * 
- *  Amazon SageMaker endpoints. For more information, see <a
+ *  Amazon SageMaker endpoint variants. For more information, see <a
  *  href="http://docs.aws.amazon.com/sagemaker/latest/dg/endpoint-auto-scaling.html">Automatically Scaling Amazon SageMaker
  * 
- *  Models</a>> </li> </ul>
+ *  Models</a>> </li> <li>
  * 
- *  To configure automatic scaling for multiple resources across multiple services, use AWS Auto Scaling to create a scaling
- *  plan for your application. For more information, see <a href="http://aws.amazon.com/autoscaling">AWS Auto
+ *  Custom resources provided by your own applications or services. More information is available in our <a
+ *  href="https://github.com/aws/aws-auto-scaling-custom-resource">GitHub repository</a>.
+ * 
+ *  </p </li> </ul>
  * 
- *  Scaling</a>>
+ *  To learn more about Application Auto Scaling, see the <a
+ *  href="http://docs.aws.amazon.com/autoscaling/application/userguide/what-is-application-auto-scaling.html">Application
+ *  Auto Scaling User
  * 
- *  For a list of supported regions, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#as-app_region">AWS
- *  Regions and Endpoints: Application Auto Scaling</a> in the <i>AWS General
+ *  Guide</a>>
+ * 
+ *  To configure automatic scaling for multiple resources across multiple services, use AWS Auto Scaling to create a scaling
+ *  plan for your application. For more information, see the <a
+ *  href="http://docs.aws.amazon.com/autoscaling/plans/userguide/what-is-aws-auto-scaling.html">AWS Auto Scaling User
  *
  * \sa ApplicationAutoScalingClient::putScheduledAction
  */
diff --git a/src/applicationautoscaling/putscheduledactionresponse.cpp b/src/applicationautoscaling/putscheduledactionresponse.cpp
index bc09dedf69..4134bf1228 100644
--- a/src/applicationautoscaling/putscheduledactionresponse.cpp
+++ b/src/applicationautoscaling/putscheduledactionresponse.cpp
@@ -33,12 +33,12 @@ namespace ApplicationAutoScaling {
  *
  * \inmodule QtAwsApplicationAutoScaling
  *
- *  With Application Auto Scaling, you can configure automatic scaling for your scalable AWS resources. You can use
- *  Application Auto Scaling to accomplish the following
+ *  With Application Auto Scaling, you can configure automatic scaling for your scalable resources. You can use Application
+ *  Auto Scaling to accomplish the following
  * 
  *  tasks> <ul> <li>
  * 
- *  Define scaling policies to automatically scale your AWS
+ *  Define scaling policies to automatically scale your AWS or custom
  * 
  *  resource> </li> <li>
  * 
@@ -54,7 +54,7 @@ namespace ApplicationAutoScaling {
  * 
  *  event> </li> </ul>
  * 
- *  Application Auto Scaling can scale the following AWS
+ *  Application Auto Scaling can scale the following
  * 
  *  resources> <ul> <li>
  * 
@@ -94,18 +94,25 @@ namespace ApplicationAutoScaling {
  * 
  *  Replicas</a>> </li> <li>
  * 
- *  Amazon SageMaker endpoints. For more information, see <a
+ *  Amazon SageMaker endpoint variants. For more information, see <a
  *  href="http://docs.aws.amazon.com/sagemaker/latest/dg/endpoint-auto-scaling.html">Automatically Scaling Amazon SageMaker
  * 
- *  Models</a>> </li> </ul>
+ *  Models</a>> </li> <li>
  * 
- *  To configure automatic scaling for multiple resources across multiple services, use AWS Auto Scaling to create a scaling
- *  plan for your application. For more information, see <a href="http://aws.amazon.com/autoscaling">AWS Auto
+ *  Custom resources provided by your own applications or services. More information is available in our <a
+ *  href="https://github.com/aws/aws-auto-scaling-custom-resource">GitHub repository</a>.
+ * 
+ *  </p </li> </ul>
  * 
- *  Scaling</a>>
+ *  To learn more about Application Auto Scaling, see the <a
+ *  href="http://docs.aws.amazon.com/autoscaling/application/userguide/what-is-application-auto-scaling.html">Application
+ *  Auto Scaling User
  * 
- *  For a list of supported regions, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#as-app_region">AWS
- *  Regions and Endpoints: Application Auto Scaling</a> in the <i>AWS General
+ *  Guide</a>>
+ * 
+ *  To configure automatic scaling for multiple resources across multiple services, use AWS Auto Scaling to create a scaling
+ *  plan for your application. For more information, see the <a
+ *  href="http://docs.aws.amazon.com/autoscaling/plans/userguide/what-is-aws-auto-scaling.html">AWS Auto Scaling User
  *
  * \sa ApplicationAutoScalingClient::putScheduledAction
  */
diff --git a/src/applicationautoscaling/registerscalabletargetrequest.cpp b/src/applicationautoscaling/registerscalabletargetrequest.cpp
index 6f09684ec4..62308935e9 100644
--- a/src/applicationautoscaling/registerscalabletargetrequest.cpp
+++ b/src/applicationautoscaling/registerscalabletargetrequest.cpp
@@ -31,12 +31,12 @@ namespace ApplicationAutoScaling {
  *
  * \inmodule QtAwsApplicationAutoScaling
  *
- *  With Application Auto Scaling, you can configure automatic scaling for your scalable AWS resources. You can use
- *  Application Auto Scaling to accomplish the following
+ *  With Application Auto Scaling, you can configure automatic scaling for your scalable resources. You can use Application
+ *  Auto Scaling to accomplish the following
  * 
  *  tasks> <ul> <li>
  * 
- *  Define scaling policies to automatically scale your AWS
+ *  Define scaling policies to automatically scale your AWS or custom
  * 
  *  resource> </li> <li>
  * 
@@ -52,7 +52,7 @@ namespace ApplicationAutoScaling {
  * 
  *  event> </li> </ul>
  * 
- *  Application Auto Scaling can scale the following AWS
+ *  Application Auto Scaling can scale the following
  * 
  *  resources> <ul> <li>
  * 
@@ -92,18 +92,25 @@ namespace ApplicationAutoScaling {
  * 
  *  Replicas</a>> </li> <li>
  * 
- *  Amazon SageMaker endpoints. For more information, see <a
+ *  Amazon SageMaker endpoint variants. For more information, see <a
  *  href="http://docs.aws.amazon.com/sagemaker/latest/dg/endpoint-auto-scaling.html">Automatically Scaling Amazon SageMaker
  * 
- *  Models</a>> </li> </ul>
+ *  Models</a>> </li> <li>
  * 
- *  To configure automatic scaling for multiple resources across multiple services, use AWS Auto Scaling to create a scaling
- *  plan for your application. For more information, see <a href="http://aws.amazon.com/autoscaling">AWS Auto
+ *  Custom resources provided by your own applications or services. More information is available in our <a
+ *  href="https://github.com/aws/aws-auto-scaling-custom-resource">GitHub repository</a>.
+ * 
+ *  </p </li> </ul>
  * 
- *  Scaling</a>>
+ *  To learn more about Application Auto Scaling, see the <a
+ *  href="http://docs.aws.amazon.com/autoscaling/application/userguide/what-is-application-auto-scaling.html">Application
+ *  Auto Scaling User
  * 
- *  For a list of supported regions, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#as-app_region">AWS
- *  Regions and Endpoints: Application Auto Scaling</a> in the <i>AWS General
+ *  Guide</a>>
+ * 
+ *  To configure automatic scaling for multiple resources across multiple services, use AWS Auto Scaling to create a scaling
+ *  plan for your application. For more information, see the <a
+ *  href="http://docs.aws.amazon.com/autoscaling/plans/userguide/what-is-aws-auto-scaling.html">AWS Auto Scaling User
  *
  * \sa ApplicationAutoScalingClient::registerScalableTarget
  */
diff --git a/src/applicationautoscaling/registerscalabletargetresponse.cpp b/src/applicationautoscaling/registerscalabletargetresponse.cpp
index 71da34a2db..44c7e784f9 100644
--- a/src/applicationautoscaling/registerscalabletargetresponse.cpp
+++ b/src/applicationautoscaling/registerscalabletargetresponse.cpp
@@ -33,12 +33,12 @@ namespace ApplicationAutoScaling {
  *
  * \inmodule QtAwsApplicationAutoScaling
  *
- *  With Application Auto Scaling, you can configure automatic scaling for your scalable AWS resources. You can use
- *  Application Auto Scaling to accomplish the following
+ *  With Application Auto Scaling, you can configure automatic scaling for your scalable resources. You can use Application
+ *  Auto Scaling to accomplish the following
  * 
  *  tasks> <ul> <li>
  * 
- *  Define scaling policies to automatically scale your AWS
+ *  Define scaling policies to automatically scale your AWS or custom
  * 
  *  resource> </li> <li>
  * 
@@ -54,7 +54,7 @@ namespace ApplicationAutoScaling {
  * 
  *  event> </li> </ul>
  * 
- *  Application Auto Scaling can scale the following AWS
+ *  Application Auto Scaling can scale the following
  * 
  *  resources> <ul> <li>
  * 
@@ -94,18 +94,25 @@ namespace ApplicationAutoScaling {
  * 
  *  Replicas</a>> </li> <li>
  * 
- *  Amazon SageMaker endpoints. For more information, see <a
+ *  Amazon SageMaker endpoint variants. For more information, see <a
  *  href="http://docs.aws.amazon.com/sagemaker/latest/dg/endpoint-auto-scaling.html">Automatically Scaling Amazon SageMaker
  * 
- *  Models</a>> </li> </ul>
+ *  Models</a>> </li> <li>
  * 
- *  To configure automatic scaling for multiple resources across multiple services, use AWS Auto Scaling to create a scaling
- *  plan for your application. For more information, see <a href="http://aws.amazon.com/autoscaling">AWS Auto
+ *  Custom resources provided by your own applications or services. More information is available in our <a
+ *  href="https://github.com/aws/aws-auto-scaling-custom-resource">GitHub repository</a>.
+ * 
+ *  </p </li> </ul>
  * 
- *  Scaling</a>>
+ *  To learn more about Application Auto Scaling, see the <a
+ *  href="http://docs.aws.amazon.com/autoscaling/application/userguide/what-is-application-auto-scaling.html">Application
+ *  Auto Scaling User
  * 
- *  For a list of supported regions, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#as-app_region">AWS
- *  Regions and Endpoints: Application Auto Scaling</a> in the <i>AWS General
+ *  Guide</a>>
+ * 
+ *  To configure automatic scaling for multiple resources across multiple services, use AWS Auto Scaling to create a scaling
+ *  plan for your application. For more information, see the <a
+ *  href="http://docs.aws.amazon.com/autoscaling/plans/userguide/what-is-aws-auto-scaling.html">AWS Auto Scaling User
  *
  * \sa ApplicationAutoScalingClient::registerScalableTarget
  */
diff --git a/src/appstream/appstream.pro b/src/appstream/appstream.pro
index ee175e9f5e..85c25742ec 100644
--- a/src/appstream/appstream.pro
+++ b/src/appstream/appstream.pro
@@ -60,6 +60,10 @@ HEADERS += \
     deleteimagebuilderrequest_p.h \
     deleteimagebuilderresponse.h \
     deleteimagebuilderresponse_p.h \
+    deleteimagepermissionsrequest.h \
+    deleteimagepermissionsrequest_p.h \
+    deleteimagepermissionsresponse.h \
+    deleteimagepermissionsresponse_p.h \
     deleteimagerequest.h \
     deleteimagerequest_p.h \
     deleteimageresponse.h \
@@ -80,6 +84,10 @@ HEADERS += \
     describeimagebuildersrequest_p.h \
     describeimagebuildersresponse.h \
     describeimagebuildersresponse_p.h \
+    describeimagepermissionsrequest.h \
+    describeimagepermissionsrequest_p.h \
+    describeimagepermissionsresponse.h \
+    describeimagepermissionsresponse_p.h \
     describeimagesrequest.h \
     describeimagesrequest_p.h \
     describeimagesresponse.h \
@@ -144,6 +152,10 @@ HEADERS += \
     updatefleetrequest_p.h \
     updatefleetresponse.h \
     updatefleetresponse_p.h \
+    updateimagepermissionsrequest.h \
+    updateimagepermissionsrequest_p.h \
+    updateimagepermissionsresponse.h \
+    updateimagepermissionsresponse_p.h \
     updatestackrequest.h \
     updatestackrequest_p.h \
     updatestackresponse.h \
@@ -175,6 +187,8 @@ SOURCES += \
     deletefleetresponse.cpp \
     deleteimagebuilderrequest.cpp \
     deleteimagebuilderresponse.cpp \
+    deleteimagepermissionsrequest.cpp \
+    deleteimagepermissionsresponse.cpp \
     deleteimagerequest.cpp \
     deleteimageresponse.cpp \
     deletestackrequest.cpp \
@@ -185,6 +199,8 @@ SOURCES += \
     describefleetsresponse.cpp \
     describeimagebuildersrequest.cpp \
     describeimagebuildersresponse.cpp \
+    describeimagepermissionsrequest.cpp \
+    describeimagepermissionsresponse.cpp \
     describeimagesrequest.cpp \
     describeimagesresponse.cpp \
     describesessionsrequest.cpp \
@@ -217,6 +233,8 @@ SOURCES += \
     updatedirectoryconfigresponse.cpp \
     updatefleetrequest.cpp \
     updatefleetresponse.cpp \
+    updateimagepermissionsrequest.cpp \
+    updateimagepermissionsresponse.cpp \
     updatestackrequest.cpp \
     updatestackresponse.cpp \
 
diff --git a/src/appstream/appstreamclient.cpp b/src/appstream/appstreamclient.cpp
index cfefae9243..b5784fe01a 100644
--- a/src/appstream/appstreamclient.cpp
+++ b/src/appstream/appstreamclient.cpp
@@ -45,6 +45,8 @@
 #include "deleteimageresponse.h"
 #include "deleteimagebuilderrequest.h"
 #include "deleteimagebuilderresponse.h"
+#include "deleteimagepermissionsrequest.h"
+#include "deleteimagepermissionsresponse.h"
 #include "deletestackrequest.h"
 #include "deletestackresponse.h"
 #include "describedirectoryconfigsrequest.h"
@@ -53,6 +55,8 @@
 #include "describefleetsresponse.h"
 #include "describeimagebuildersrequest.h"
 #include "describeimagebuildersresponse.h"
+#include "describeimagepermissionsrequest.h"
+#include "describeimagepermissionsresponse.h"
 #include "describeimagesrequest.h"
 #include "describeimagesresponse.h"
 #include "describesessionsrequest.h"
@@ -85,6 +89,8 @@
 #include "updatedirectoryconfigresponse.h"
 #include "updatefleetrequest.h"
 #include "updatefleetresponse.h"
+#include "updateimagepermissionsrequest.h"
+#include "updateimagepermissionsresponse.h"
 #include "updatestackrequest.h"
 #include "updatestackresponse.h"
 
@@ -201,7 +207,8 @@ CopyImageResponse * AppStreamClient::copyImage(const CopyImageRequest &request)
  *
  * \note The caller is to take responsbility for the resulting pointer.
  *
- * Creates a directory
+ * Creates a Directory Config object in AppStream 2.0. This object includes the information required to join streaming
+ * instances to an Active Directory
  */
 CreateDirectoryConfigResponse * AppStreamClient::createDirectoryConfig(const CreateDirectoryConfigRequest &request)
 {
@@ -214,7 +221,7 @@ CreateDirectoryConfigResponse * AppStreamClient::createDirectoryConfig(const Cre
  *
  * \note The caller is to take responsbility for the resulting pointer.
  *
- * Creates a
+ * Creates a fleet. A fleet consists of streaming instances that run a specified
  */
 CreateFleetResponse * AppStreamClient::createFleet(const CreateFleetRequest &request)
 {
@@ -227,9 +234,9 @@ CreateFleetResponse * AppStreamClient::createFleet(const CreateFleetRequest &req
  *
  * \note The caller is to take responsbility for the resulting pointer.
  *
- * Creates an image
+ * Creates an image builder. An image builder is a virtual machine that is used to create an
  *
- * builder>
+ * image>
  *
  * The initial state of the builder is <code>PENDING</code>. When it is ready, the state is
  */
@@ -257,7 +264,8 @@ CreateImageBuilderStreamingURLResponse * AppStreamClient::createImageBuilderStre
  *
  * \note The caller is to take responsbility for the resulting pointer.
  *
- * Creates a
+ * Creates a stack to start streaming applications to users. A stack consists of an associated fleet, user access policies,
+ * and storage configurations.
  */
 CreateStackResponse * AppStreamClient::createStack(const CreateStackRequest &request)
 {
@@ -270,7 +278,8 @@ CreateStackResponse * AppStreamClient::createStack(const CreateStackRequest &req
  *
  * \note The caller is to take responsbility for the resulting pointer.
  *
- * Creates a URL to start a streaming session for the specified
+ * Creates a temporary URL to start an AppStream 2.0 streaming session for the specified user. A streaming URL enables
+ * application streaming to be tested without user setup.
  */
 CreateStreamingURLResponse * AppStreamClient::createStreamingURL(const CreateStreamingURLRequest &request)
 {
@@ -283,7 +292,8 @@ CreateStreamingURLResponse * AppStreamClient::createStreamingURL(const CreateStr
  *
  * \note The caller is to take responsbility for the resulting pointer.
  *
- * Deletes the specified directory
+ * Deletes the specified Directory Config object from AppStream 2.0. This object includes the information required to join
+ * streaming instances to an Active Directory
  */
 DeleteDirectoryConfigResponse * AppStreamClient::deleteDirectoryConfig(const DeleteDirectoryConfigRequest &request)
 {
@@ -309,7 +319,7 @@ DeleteFleetResponse * AppStreamClient::deleteFleet(const DeleteFleetRequest &req
  *
  * \note The caller is to take responsbility for the resulting pointer.
  *
- * Deletes the specified image. You cannot delete an image that is currently in use. After you delete an image, you cannot
+ * Deletes the specified image. You cannot delete an image when it is in use. After you delete an image, you cannot
  * provision new capacity using the
  */
 DeleteImageResponse * AppStreamClient::deleteImage(const DeleteImageRequest &request)
@@ -330,14 +340,28 @@ DeleteImageBuilderResponse * AppStreamClient::deleteImageBuilder(const DeleteIma
     return qobject_cast<DeleteImageBuilderResponse *>(send(request));
 }
 
+/*!
+ * Sends \a request to the AppStreamClient service, and returns a pointer to an
+ * DeleteImagePermissionsResponse object to track the result.
+ *
+ * \note The caller is to take responsbility for the resulting pointer.
+ *
+ * Deletes permissions for the specified private image. After you delete permissions for an image, AWS accounts to which
+ * you previously granted these permissions can no longer use the
+ */
+DeleteImagePermissionsResponse * AppStreamClient::deleteImagePermissions(const DeleteImagePermissionsRequest &request)
+{
+    return qobject_cast<DeleteImagePermissionsResponse *>(send(request));
+}
+
 /*!
  * Sends \a request to the AppStreamClient service, and returns a pointer to an
  * DeleteStackResponse object to track the result.
  *
  * \note The caller is to take responsbility for the resulting pointer.
  *
- * Deletes the specified stack. After this operation completes, the environment can no longer be activated and any
- * reservations made for the stack are
+ * Deletes the specified stack. After the stack is deleted, the application streaming environment provided by the stack is
+ * no longer available to users. Also, any reservations made for application streaming sessions for the stack are
  */
 DeleteStackResponse * AppStreamClient::deleteStack(const DeleteStackRequest &request)
 {
@@ -350,8 +374,13 @@ DeleteStackResponse * AppStreamClient::deleteStack(const DeleteStackRequest &req
  *
  * \note The caller is to take responsbility for the resulting pointer.
  *
- * Describes the specified directory configurations. Note that although the response syntax in this topic includes the
- * account password, this password is not returned in the actual response.
+ * Retrieves a list that describes one or more specified Directory Config objects for AppStream 2.0, if the names for these
+ * objects are provided. Otherwise, all Directory Config objects in the account are described. These objects include the
+ * information required to join streaming instances to an Active Directory domain.
+ *
+ * </p
+ *
+ * Although the response syntax in this topic includes the account password, this password is not returned in the actual
  */
 DescribeDirectoryConfigsResponse * AppStreamClient::describeDirectoryConfigs(const DescribeDirectoryConfigsRequest &request)
 {
@@ -364,7 +393,8 @@ DescribeDirectoryConfigsResponse * AppStreamClient::describeDirectoryConfigs(con
  *
  * \note The caller is to take responsbility for the resulting pointer.
  *
- * Describes the specified fleets or all fleets in the
+ * Retrieves a list that describes one or more specified fleets, if the fleet names are provided. Otherwise, all fleets in
+ * the account are
  */
 DescribeFleetsResponse * AppStreamClient::describeFleets(const DescribeFleetsRequest &request)
 {
@@ -377,20 +407,35 @@ DescribeFleetsResponse * AppStreamClient::describeFleets(const DescribeFleetsReq
  *
  * \note The caller is to take responsbility for the resulting pointer.
  *
- * Describes the specified image builders or all image builders in the
+ * Retrieves a list that describes one or more specified image builders, if the image builder names are provided.
+ * Otherwise, all image builders in the account are
  */
 DescribeImageBuildersResponse * AppStreamClient::describeImageBuilders(const DescribeImageBuildersRequest &request)
 {
     return qobject_cast<DescribeImageBuildersResponse *>(send(request));
 }
 
+/*!
+ * Sends \a request to the AppStreamClient service, and returns a pointer to an
+ * DescribeImagePermissionsResponse object to track the result.
+ *
+ * \note The caller is to take responsbility for the resulting pointer.
+ *
+ * Retrieves a list that describes the permissions for a private image that you own.
+ */
+DescribeImagePermissionsResponse * AppStreamClient::describeImagePermissions(const DescribeImagePermissionsRequest &request)
+{
+    return qobject_cast<DescribeImagePermissionsResponse *>(send(request));
+}
+
 /*!
  * Sends \a request to the AppStreamClient service, and returns a pointer to an
  * DescribeImagesResponse object to track the result.
  *
  * \note The caller is to take responsbility for the resulting pointer.
  *
- * Describes the specified images or all images in the
+ * Retrieves a list that describes one or more specified images, if the image names are provided. Otherwise, all images in
+ * the account are
  */
 DescribeImagesResponse * AppStreamClient::describeImages(const DescribeImagesRequest &request)
 {
@@ -403,9 +448,9 @@ DescribeImagesResponse * AppStreamClient::describeImages(const DescribeImagesReq
  *
  * \note The caller is to take responsbility for the resulting pointer.
  *
- * Describes the streaming sessions for the specified stack and fleet. If a user ID is provided, only the streaming
- * sessions for only that user are returned. If an authentication type is not provided, the default is to authenticate
- * users using a streaming
+ * Retrieves a list that describes the streaming sessions for a specified stack and fleet. If a user ID is provided for the
+ * stack and fleet, only streaming sessions for that user are described. If an authentication type is not provided, the
+ * default is to authenticate users using a streaming
  */
 DescribeSessionsResponse * AppStreamClient::describeSessions(const DescribeSessionsRequest &request)
 {
@@ -418,7 +463,8 @@ DescribeSessionsResponse * AppStreamClient::describeSessions(const DescribeSessi
  *
  * \note The caller is to take responsbility for the resulting pointer.
  *
- * Describes the specified stacks or all stacks in the
+ * Retrieves a list that describes one or more specified stacks, if the stack names are provided. Otherwise, all stacks in
+ * the account are
  */
 DescribeStacksResponse * AppStreamClient::describeStacks(const DescribeStacksRequest &request)
 {
@@ -444,7 +490,7 @@ DisassociateFleetResponse * AppStreamClient::disassociateFleet(const Disassociat
  *
  * \note The caller is to take responsbility for the resulting pointer.
  *
- * Stops the specified streaming
+ * Immediately stops the specified streaming
  */
 ExpireSessionResponse * AppStreamClient::expireSession(const ExpireSessionRequest &request)
 {
@@ -457,7 +503,7 @@ ExpireSessionResponse * AppStreamClient::expireSession(const ExpireSessionReques
  *
  * \note The caller is to take responsbility for the resulting pointer.
  *
- * Lists the fleets associated with the specified
+ * Retrieves the name of the fleet that is associated with the specified
  */
 ListAssociatedFleetsResponse * AppStreamClient::listAssociatedFleets(const ListAssociatedFleetsRequest &request)
 {
@@ -470,7 +516,7 @@ ListAssociatedFleetsResponse * AppStreamClient::listAssociatedFleets(const ListA
  *
  * \note The caller is to take responsbility for the resulting pointer.
  *
- * Lists the stacks associated with the specified
+ * Retrieves the name of the stack with which the specified fleet is
  */
 ListAssociatedStacksResponse * AppStreamClient::listAssociatedStacks(const ListAssociatedStacksRequest &request)
 {
@@ -483,7 +529,8 @@ ListAssociatedStacksResponse * AppStreamClient::listAssociatedStacks(const ListA
  *
  * \note The caller is to take responsbility for the resulting pointer.
  *
- * Lists the tags for the specified AppStream 2.0 resource. You can tag AppStream 2.0 image builders, images, fleets, and
+ * Retrieves a list of all tags for the specified AppStream 2.0 resource. You can tag AppStream 2.0 image builders, images,
+ * fleets, and
  *
  * stacks>
  *
@@ -584,7 +631,7 @@ TagResourceResponse * AppStreamClient::tagResource(const TagResourceRequest &req
  *
  * \note The caller is to take responsbility for the resulting pointer.
  *
- * Disassociates the specified tags from the specified AppStream 2.0
+ * Disassociates one or more specified tags from the specified AppStream 2.0
  *
  * resource>
  *
@@ -607,7 +654,8 @@ UntagResourceResponse * AppStreamClient::untagResource(const UntagResourceReques
  *
  * \note The caller is to take responsbility for the resulting pointer.
  *
- * Updates the specified directory
+ * Updates the specified Directory Config object in AppStream 2.0. This object includes the information required to join
+ * streaming instances to an Active Directory
  */
 UpdateDirectoryConfigResponse * AppStreamClient::updateDirectoryConfig(const UpdateDirectoryConfigRequest &request)
 {
@@ -633,13 +681,26 @@ UpdateFleetResponse * AppStreamClient::updateFleet(const UpdateFleetRequest &req
     return qobject_cast<UpdateFleetResponse *>(send(request));
 }
 
+/*!
+ * Sends \a request to the AppStreamClient service, and returns a pointer to an
+ * UpdateImagePermissionsResponse object to track the result.
+ *
+ * \note The caller is to take responsbility for the resulting pointer.
+ *
+ * Adds or updates permissions for the specified private image.
+ */
+UpdateImagePermissionsResponse * AppStreamClient::updateImagePermissions(const UpdateImagePermissionsRequest &request)
+{
+    return qobject_cast<UpdateImagePermissionsResponse *>(send(request));
+}
+
 /*!
  * Sends \a request to the AppStreamClient service, and returns a pointer to an
  * UpdateStackResponse object to track the result.
  *
  * \note The caller is to take responsbility for the resulting pointer.
  *
- * Updates the specified
+ * Updates the specified fields for the specified
  */
 UpdateStackResponse * AppStreamClient::updateStack(const UpdateStackRequest &request)
 {
diff --git a/src/appstream/appstreamclient.h b/src/appstream/appstreamclient.h
index 7ebad4a292..cb2f8e09b9 100644
--- a/src/appstream/appstreamclient.h
+++ b/src/appstream/appstreamclient.h
@@ -52,6 +52,8 @@ class DeleteImageRequest;
 class DeleteImageResponse;
 class DeleteImageBuilderRequest;
 class DeleteImageBuilderResponse;
+class DeleteImagePermissionsRequest;
+class DeleteImagePermissionsResponse;
 class DeleteStackRequest;
 class DeleteStackResponse;
 class DescribeDirectoryConfigsRequest;
@@ -60,6 +62,8 @@ class DescribeFleetsRequest;
 class DescribeFleetsResponse;
 class DescribeImageBuildersRequest;
 class DescribeImageBuildersResponse;
+class DescribeImagePermissionsRequest;
+class DescribeImagePermissionsResponse;
 class DescribeImagesRequest;
 class DescribeImagesResponse;
 class DescribeSessionsRequest;
@@ -92,6 +96,8 @@ class UpdateDirectoryConfigRequest;
 class UpdateDirectoryConfigResponse;
 class UpdateFleetRequest;
 class UpdateFleetResponse;
+class UpdateImagePermissionsRequest;
+class UpdateImagePermissionsResponse;
 class UpdateStackRequest;
 class UpdateStackResponse;
 
@@ -123,10 +129,12 @@ public slots:
     DeleteFleetResponse * deleteFleet(const DeleteFleetRequest &request);
     DeleteImageResponse * deleteImage(const DeleteImageRequest &request);
     DeleteImageBuilderResponse * deleteImageBuilder(const DeleteImageBuilderRequest &request);
+    DeleteImagePermissionsResponse * deleteImagePermissions(const DeleteImagePermissionsRequest &request);
     DeleteStackResponse * deleteStack(const DeleteStackRequest &request);
     DescribeDirectoryConfigsResponse * describeDirectoryConfigs(const DescribeDirectoryConfigsRequest &request);
     DescribeFleetsResponse * describeFleets(const DescribeFleetsRequest &request);
     DescribeImageBuildersResponse * describeImageBuilders(const DescribeImageBuildersRequest &request);
+    DescribeImagePermissionsResponse * describeImagePermissions(const DescribeImagePermissionsRequest &request);
     DescribeImagesResponse * describeImages(const DescribeImagesRequest &request);
     DescribeSessionsResponse * describeSessions(const DescribeSessionsRequest &request);
     DescribeStacksResponse * describeStacks(const DescribeStacksRequest &request);
@@ -143,6 +151,7 @@ public slots:
     UntagResourceResponse * untagResource(const UntagResourceRequest &request);
     UpdateDirectoryConfigResponse * updateDirectoryConfig(const UpdateDirectoryConfigRequest &request);
     UpdateFleetResponse * updateFleet(const UpdateFleetRequest &request);
+    UpdateImagePermissionsResponse * updateImagePermissions(const UpdateImagePermissionsRequest &request);
     UpdateStackResponse * updateStack(const UpdateStackRequest &request);
 
 private:
diff --git a/src/appstream/appstreamrequest.cpp b/src/appstream/appstreamrequest.cpp
index e845dea6f8..0080cce539 100644
--- a/src/appstream/appstreamrequest.cpp
+++ b/src/appstream/appstreamrequest.cpp
@@ -48,10 +48,12 @@ namespace AppStream {
  * \value DeleteFleetAction AppStream DeleteFleet action.
  * \value DeleteImageAction AppStream DeleteImage action.
  * \value DeleteImageBuilderAction AppStream DeleteImageBuilder action.
+ * \value DeleteImagePermissionsAction AppStream DeleteImagePermissions action.
  * \value DeleteStackAction AppStream DeleteStack action.
  * \value DescribeDirectoryConfigsAction AppStream DescribeDirectoryConfigs action.
  * \value DescribeFleetsAction AppStream DescribeFleets action.
  * \value DescribeImageBuildersAction AppStream DescribeImageBuilders action.
+ * \value DescribeImagePermissionsAction AppStream DescribeImagePermissions action.
  * \value DescribeImagesAction AppStream DescribeImages action.
  * \value DescribeSessionsAction AppStream DescribeSessions action.
  * \value DescribeStacksAction AppStream DescribeStacks action.
@@ -68,6 +70,7 @@ namespace AppStream {
  * \value UntagResourceAction AppStream UntagResource action.
  * \value UpdateDirectoryConfigAction AppStream UpdateDirectoryConfig action.
  * \value UpdateFleetAction AppStream UpdateFleet action.
+ * \value UpdateImagePermissionsAction AppStream UpdateImagePermissions action.
  * \value UpdateStackAction AppStream UpdateStack action.
  */
 
diff --git a/src/appstream/appstreamrequest.h b/src/appstream/appstreamrequest.h
index 05273dcdcb..9509856995 100644
--- a/src/appstream/appstreamrequest.h
+++ b/src/appstream/appstreamrequest.h
@@ -49,10 +49,12 @@ public:
         DeleteFleetAction,
         DeleteImageAction,
         DeleteImageBuilderAction,
+        DeleteImagePermissionsAction,
         DeleteStackAction,
         DescribeDirectoryConfigsAction,
         DescribeFleetsAction,
         DescribeImageBuildersAction,
+        DescribeImagePermissionsAction,
         DescribeImagesAction,
         DescribeSessionsAction,
         DescribeStacksAction,
@@ -69,6 +71,7 @@ public:
         UntagResourceAction,
         UpdateDirectoryConfigAction,
         UpdateFleetAction,
+        UpdateImagePermissionsAction,
         UpdateStackAction,
     };
     Q_DECLARE_FLAGS(Actions, Action)
diff --git a/src/clouddirectory/clouddirectory.pro b/src/clouddirectory/clouddirectory.pro
index 2718e2aff7..0d41aa5e33 100644
--- a/src/clouddirectory/clouddirectory.pro
+++ b/src/clouddirectory/clouddirectory.pro
@@ -180,6 +180,10 @@ HEADERS += \
     listindexrequest_p.h \
     listindexresponse.h \
     listindexresponse_p.h \
+    listmanagedschemaarnsrequest.h \
+    listmanagedschemaarnsrequest_p.h \
+    listmanagedschemaarnsresponse.h \
+    listmanagedschemaarnsresponse_p.h \
     listobjectattributesrequest.h \
     listobjectattributesrequest_p.h \
     listobjectattributesresponse.h \
@@ -363,6 +367,8 @@ SOURCES += \
     listincomingtypedlinksresponse.cpp \
     listindexrequest.cpp \
     listindexresponse.cpp \
+    listmanagedschemaarnsrequest.cpp \
+    listmanagedschemaarnsresponse.cpp \
     listobjectattributesrequest.cpp \
     listobjectattributesresponse.cpp \
     listobjectchildrenrequest.cpp \
diff --git a/src/clouddirectory/clouddirectoryclient.cpp b/src/clouddirectory/clouddirectoryclient.cpp
index 868156024a..576981efe3 100644
--- a/src/clouddirectory/clouddirectoryclient.cpp
+++ b/src/clouddirectory/clouddirectoryclient.cpp
@@ -103,6 +103,8 @@
 #include "listincomingtypedlinksresponse.h"
 #include "listindexrequest.h"
 #include "listindexresponse.h"
+#include "listmanagedschemaarnsrequest.h"
+#include "listmanagedschemaarnsresponse.h"
 #include "listobjectattributesrequest.h"
 #include "listobjectattributesresponse.h"
 #include "listobjectchildrenrequest.h"
@@ -199,7 +201,7 @@ CloudDirectoryClient::CloudDirectoryClient(
 : QtAws::Core::AwsAbstractClient(new CloudDirectoryClientPrivate(this), parent)
 {
     Q_D(CloudDirectoryClient);
-    d->apiVersion = QStringLiteral("2016-05-10");
+    d->apiVersion = QStringLiteral("2017-01-11");
     d->credentials = credentials;
     d->endpointPrefix = QStringLiteral("clouddirectory");
     d->networkAccessManager = manager;
@@ -227,7 +229,7 @@ CloudDirectoryClient::CloudDirectoryClient(
 : QtAws::Core::AwsAbstractClient(new CloudDirectoryClientPrivate(this), parent)
 {
     Q_D(CloudDirectoryClient);
-    d->apiVersion = QStringLiteral("2016-05-10");
+    d->apiVersion = QStringLiteral("2017-01-11");
     d->credentials = credentials;
     d->endpoint = endpoint;
     d->endpointPrefix = QStringLiteral("clouddirectory");
@@ -810,6 +812,20 @@ ListIndexResponse * CloudDirectoryClient::listIndex(const ListIndexRequest &requ
     return qobject_cast<ListIndexResponse *>(send(request));
 }
 
+/*!
+ * Sends \a request to the CloudDirectoryClient service, and returns a pointer to an
+ * ListManagedSchemaArnsResponse object to track the result.
+ *
+ * \note The caller is to take responsbility for the resulting pointer.
+ *
+ * Lists the major version families of each managed schema. If a major version ARN is provided as SchemaArn, the minor
+ * version revisions in that family are listed
+ */
+ListManagedSchemaArnsResponse * CloudDirectoryClient::listManagedSchemaArns(const ListManagedSchemaArnsRequest &request)
+{
+    return qobject_cast<ListManagedSchemaArnsResponse *>(send(request));
+}
+
 /*!
  * Sends \a request to the CloudDirectoryClient service, and returns a pointer to an
  * ListObjectAttributesResponse object to track the result.
diff --git a/src/clouddirectory/clouddirectoryclient.h b/src/clouddirectory/clouddirectoryclient.h
index f0642bccdb..8fc4a1a92e 100644
--- a/src/clouddirectory/clouddirectoryclient.h
+++ b/src/clouddirectory/clouddirectoryclient.h
@@ -110,6 +110,8 @@ class ListIncomingTypedLinksRequest;
 class ListIncomingTypedLinksResponse;
 class ListIndexRequest;
 class ListIndexResponse;
+class ListManagedSchemaArnsRequest;
+class ListManagedSchemaArnsResponse;
 class ListObjectAttributesRequest;
 class ListObjectAttributesResponse;
 class ListObjectChildrenRequest;
@@ -216,6 +218,7 @@ public slots:
     ListFacetNamesResponse * listFacetNames(const ListFacetNamesRequest &request);
     ListIncomingTypedLinksResponse * listIncomingTypedLinks(const ListIncomingTypedLinksRequest &request);
     ListIndexResponse * listIndex(const ListIndexRequest &request);
+    ListManagedSchemaArnsResponse * listManagedSchemaArns(const ListManagedSchemaArnsRequest &request);
     ListObjectAttributesResponse * listObjectAttributes(const ListObjectAttributesRequest &request);
     ListObjectChildrenResponse * listObjectChildren(const ListObjectChildrenRequest &request);
     ListObjectParentPathsResponse * listObjectParentPaths(const ListObjectParentPathsRequest &request);
diff --git a/src/clouddirectory/clouddirectoryrequest.cpp b/src/clouddirectory/clouddirectoryrequest.cpp
index 160ba360cd..41cec02522 100644
--- a/src/clouddirectory/clouddirectoryrequest.cpp
+++ b/src/clouddirectory/clouddirectoryrequest.cpp
@@ -77,6 +77,7 @@ namespace CloudDirectory {
  * \value ListFacetNamesAction CloudDirectory ListFacetNames action.
  * \value ListIncomingTypedLinksAction CloudDirectory ListIncomingTypedLinks action.
  * \value ListIndexAction CloudDirectory ListIndex action.
+ * \value ListManagedSchemaArnsAction CloudDirectory ListManagedSchemaArns action.
  * \value ListObjectAttributesAction CloudDirectory ListObjectAttributes action.
  * \value ListObjectChildrenAction CloudDirectory ListObjectChildren action.
  * \value ListObjectParentPathsAction CloudDirectory ListObjectParentPaths action.
diff --git a/src/clouddirectory/clouddirectoryrequest.h b/src/clouddirectory/clouddirectoryrequest.h
index df0e8020ac..ddffdb442d 100644
--- a/src/clouddirectory/clouddirectoryrequest.h
+++ b/src/clouddirectory/clouddirectoryrequest.h
@@ -78,6 +78,7 @@ public:
         ListFacetNamesAction,
         ListIncomingTypedLinksAction,
         ListIndexAction,
+        ListManagedSchemaArnsAction,
         ListObjectAttributesAction,
         ListObjectChildrenAction,
         ListObjectParentPathsAction,
diff --git a/src/cloudfront/cloudfront.pro b/src/cloudfront/cloudfront.pro
index 8945599fab..8ecd488e49 100644
--- a/src/cloudfront/cloudfront.pro
+++ b/src/cloudfront/cloudfront.pro
@@ -72,10 +72,6 @@ HEADERS += \
     deletepublickeyrequest_p.h \
     deletepublickeyresponse.h \
     deletepublickeyresponse_p.h \
-    deleteservicelinkedrolerequest.h \
-    deleteservicelinkedrolerequest_p.h \
-    deleteservicelinkedroleresponse.h \
-    deleteservicelinkedroleresponse_p.h \
     deletestreamingdistributionrequest.h \
     deletestreamingdistributionrequest_p.h \
     deletestreamingdistributionresponse.h \
@@ -233,8 +229,6 @@ SOURCES += \
     deletefieldlevelencryptionprofileresponse.cpp \
     deletepublickeyrequest.cpp \
     deletepublickeyresponse.cpp \
-    deleteservicelinkedrolerequest.cpp \
-    deleteservicelinkedroleresponse.cpp \
     deletestreamingdistributionrequest.cpp \
     deletestreamingdistributionresponse.cpp \
     getcloudfrontoriginaccessidentityconfigrequest.cpp \
diff --git a/src/cloudfront/cloudfrontclient.cpp b/src/cloudfront/cloudfrontclient.cpp
index f5f98f20c5..a3bb4ca6f7 100644
--- a/src/cloudfront/cloudfrontclient.cpp
+++ b/src/cloudfront/cloudfrontclient.cpp
@@ -49,8 +49,6 @@
 #include "deletefieldlevelencryptionprofileresponse.h"
 #include "deletepublickeyrequest.h"
 #include "deletepublickeyresponse.h"
-#include "deleteservicelinkedrolerequest.h"
-#include "deleteservicelinkedroleresponse.h"
 #include "deletestreamingdistributionrequest.h"
 #include "deletestreamingdistributionresponse.h"
 #include "getcloudfrontoriginaccessidentityrequest.h"
@@ -413,18 +411,6 @@ DeletePublicKeyResponse * CloudFrontClient::deletePublicKey(const DeletePublicKe
     return qobject_cast<DeletePublicKeyResponse *>(send(request));
 }
 
-/*!
- * Sends \a request to the CloudFrontClient service, and returns a pointer to an
- * DeleteServiceLinkedRoleResponse object to track the result.
- *
- * \note The caller is to take responsbility for the resulting pointer.
- *
- */
-DeleteServiceLinkedRoleResponse * CloudFrontClient::deleteServiceLinkedRole(const DeleteServiceLinkedRoleRequest &request)
-{
-    return qobject_cast<DeleteServiceLinkedRoleResponse *>(send(request));
-}
-
 /*!
  * Sends \a request to the CloudFrontClient service, and returns a pointer to an
  * DeleteStreamingDistributionResponse object to track the result.
diff --git a/src/cloudfront/cloudfrontclient.h b/src/cloudfront/cloudfrontclient.h
index c12fe998c6..f5b73dc269 100644
--- a/src/cloudfront/cloudfrontclient.h
+++ b/src/cloudfront/cloudfrontclient.h
@@ -56,8 +56,6 @@ class DeleteFieldLevelEncryptionProfileRequest;
 class DeleteFieldLevelEncryptionProfileResponse;
 class DeletePublicKeyRequest;
 class DeletePublicKeyResponse;
-class DeleteServiceLinkedRoleRequest;
-class DeleteServiceLinkedRoleResponse;
 class DeleteStreamingDistributionRequest;
 class DeleteStreamingDistributionResponse;
 class GetCloudFrontOriginAccessIdentityRequest;
@@ -151,7 +149,6 @@ public slots:
     DeleteFieldLevelEncryptionConfigResponse * deleteFieldLevelEncryptionConfig(const DeleteFieldLevelEncryptionConfigRequest &request);
     DeleteFieldLevelEncryptionProfileResponse * deleteFieldLevelEncryptionProfile(const DeleteFieldLevelEncryptionProfileRequest &request);
     DeletePublicKeyResponse * deletePublicKey(const DeletePublicKeyRequest &request);
-    DeleteServiceLinkedRoleResponse * deleteServiceLinkedRole(const DeleteServiceLinkedRoleRequest &request);
     DeleteStreamingDistributionResponse * deleteStreamingDistribution(const DeleteStreamingDistributionRequest &request);
     GetCloudFrontOriginAccessIdentityResponse * getCloudFrontOriginAccessIdentity(const GetCloudFrontOriginAccessIdentityRequest &request);
     GetCloudFrontOriginAccessIdentityConfigResponse * getCloudFrontOriginAccessIdentityConfig(const GetCloudFrontOriginAccessIdentityConfigRequest &request);
diff --git a/src/cloudfront/cloudfrontrequest.cpp b/src/cloudfront/cloudfrontrequest.cpp
index 39f6d01137..cedd50a96f 100644
--- a/src/cloudfront/cloudfrontrequest.cpp
+++ b/src/cloudfront/cloudfrontrequest.cpp
@@ -50,7 +50,6 @@ namespace CloudFront {
  * \value DeleteFieldLevelEncryptionConfigAction CloudFront DeleteFieldLevelEncryptionConfig action.
  * \value DeleteFieldLevelEncryptionProfileAction CloudFront DeleteFieldLevelEncryptionProfile action.
  * \value DeletePublicKeyAction CloudFront DeletePublicKey action.
- * \value DeleteServiceLinkedRoleAction CloudFront DeleteServiceLinkedRole action.
  * \value DeleteStreamingDistributionAction CloudFront DeleteStreamingDistribution action.
  * \value GetCloudFrontOriginAccessIdentityAction CloudFront GetCloudFrontOriginAccessIdentity action.
  * \value GetCloudFrontOriginAccessIdentityConfigAction CloudFront GetCloudFrontOriginAccessIdentityConfig action.
diff --git a/src/cloudfront/cloudfrontrequest.h b/src/cloudfront/cloudfrontrequest.h
index d6e242a0ea..8906335a59 100644
--- a/src/cloudfront/cloudfrontrequest.h
+++ b/src/cloudfront/cloudfrontrequest.h
@@ -51,7 +51,6 @@ public:
         DeleteFieldLevelEncryptionConfigAction,
         DeleteFieldLevelEncryptionProfileAction,
         DeletePublicKeyAction,
-        DeleteServiceLinkedRoleAction,
         DeleteStreamingDistributionAction,
         GetCloudFrontOriginAccessIdentityAction,
         GetCloudFrontOriginAccessIdentityConfigAction,
diff --git a/src/cloudfront/deleteservicelinkedrolerequest.cpp b/src/cloudfront/deleteservicelinkedrolerequest.cpp
deleted file mode 100644
index 247fffbcc1..0000000000
--- a/src/cloudfront/deleteservicelinkedrolerequest.cpp
+++ /dev/null
@@ -1,113 +0,0 @@
-/*
-    Copyright 2013-2018 Paul Colby
-
-    This file is part of QtAws.
-
-    QtAws is free software: you can redistribute it and/or modify
-    it under the terms of the GNU Lesser General Public License as published by
-    the Free Software Foundation, either version 3 of the License, or
-    (at your option) any later version.
-
-    QtAws is distributed in the hope that it will be useful,
-    but WITHOUT ANY WARRANTY; without even the implied warranty of
-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-    GNU Lesser General Public License for more details.
-
-    You should have received a copy of the GNU Lesser General Public License
-    along with the QtAws.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#include "deleteservicelinkedrolerequest.h"
-#include "deleteservicelinkedrolerequest_p.h"
-#include "deleteservicelinkedroleresponse.h"
-#include "cloudfrontrequest_p.h"
-
-namespace QtAws {
-namespace CloudFront {
-
-/*!
- * \class QtAws::CloudFront::DeleteServiceLinkedRoleRequest
- * \brief The DeleteServiceLinkedRoleRequest class provides an interface for CloudFront DeleteServiceLinkedRole requests.
- *
- * \inmodule QtAwsCloudFront
- *
- *  <fullname>Amazon CloudFront</fullname>
- * 
- *  This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about
- *  CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon
- *  CloudFront Developer
- *
- * \sa CloudFrontClient::deleteServiceLinkedRole
- */
-
-/*!
- * Constructs a copy of \a other.
- */
-DeleteServiceLinkedRoleRequest::DeleteServiceLinkedRoleRequest(const DeleteServiceLinkedRoleRequest &other)
-    : CloudFrontRequest(new DeleteServiceLinkedRoleRequestPrivate(*other.d_func(), this))
-{
-
-}
-
-/*!
- * Constructs a DeleteServiceLinkedRoleRequest object.
- */
-DeleteServiceLinkedRoleRequest::DeleteServiceLinkedRoleRequest()
-    : CloudFrontRequest(new DeleteServiceLinkedRoleRequestPrivate(CloudFrontRequest::DeleteServiceLinkedRoleAction, this))
-{
-
-}
-
-/*!
- * \reimp
- */
-bool DeleteServiceLinkedRoleRequest::isValid() const
-{
-    return false;
-}
-
-
-/*!
- * Returns a DeleteServiceLinkedRoleResponse object to process \a reply.
- *
- * \sa QtAws::Core::AwsAbstractClient::send
- */
-QtAws::Core::AwsAbstractResponse * DeleteServiceLinkedRoleRequest::response(QNetworkReply * const reply) const
-{
-    return new DeleteServiceLinkedRoleResponse(*this, reply);
-}
-
-/*!
- * \class QtAws::CloudFront::DeleteServiceLinkedRoleRequestPrivate
- * \brief The DeleteServiceLinkedRoleRequestPrivate class provides private implementation for DeleteServiceLinkedRoleRequest.
- * \internal
- *
- * \inmodule QtAwsCloudFront
- */
-
-/*!
- * Constructs a DeleteServiceLinkedRoleRequestPrivate object for CloudFront \a action,
- * with public implementation \a q.
- */
-DeleteServiceLinkedRoleRequestPrivate::DeleteServiceLinkedRoleRequestPrivate(
-    const CloudFrontRequest::Action action, DeleteServiceLinkedRoleRequest * const q)
-    : CloudFrontRequestPrivate(action, q)
-{
-
-}
-
-/*!
- * Constructs a copy of \a other, with public implementation \a q.
- *
- * This copy-like constructor exists for the benefit of the DeleteServiceLinkedRoleRequest
- * class' copy constructor.
- */
-DeleteServiceLinkedRoleRequestPrivate::DeleteServiceLinkedRoleRequestPrivate(
-    const DeleteServiceLinkedRoleRequestPrivate &other, DeleteServiceLinkedRoleRequest * const q)
-    : CloudFrontRequestPrivate(other, q)
-{
-
-}
-
-} // namespace CloudFront
-} // namespace QtAws
diff --git a/src/cloudfront/deleteservicelinkedrolerequest.h b/src/cloudfront/deleteservicelinkedrolerequest.h
deleted file mode 100644
index db1ab7181e..0000000000
--- a/src/cloudfront/deleteservicelinkedrolerequest.h
+++ /dev/null
@@ -1,50 +0,0 @@
-/*
-    Copyright 2013-2018 Paul Colby
-
-    This file is part of QtAws.
-
-    QtAws is free software: you can redistribute it and/or modify
-    it under the terms of the GNU Lesser General Public License as published by
-    the Free Software Foundation, either version 3 of the License, or
-    (at your option) any later version.
-
-    QtAws is distributed in the hope that it will be useful,
-    but WITHOUT ANY WARRANTY; without even the implied warranty of
-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-    GNU Lesser General Public License for more details.
-
-    You should have received a copy of the GNU Lesser General Public License
-    along with the QtAws.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#ifndef QTAWS_DELETESERVICELINKEDROLEREQUEST_H
-#define QTAWS_DELETESERVICELINKEDROLEREQUEST_H
-
-#include "cloudfrontrequest.h"
-
-namespace QtAws {
-namespace CloudFront {
-
-class DeleteServiceLinkedRoleRequestPrivate;
-
-class QTAWS_EXPORT DeleteServiceLinkedRoleRequest : public CloudFrontRequest {
-
-public:
-    DeleteServiceLinkedRoleRequest(const DeleteServiceLinkedRoleRequest &other);
-    DeleteServiceLinkedRoleRequest();
-
-    virtual bool isValid() const override;
-
-
-protected:
-    virtual QtAws::Core::AwsAbstractResponse * response(QNetworkReply * const reply) const override;
-
-private:
-    Q_DECLARE_PRIVATE(DeleteServiceLinkedRoleRequest)
-
-};
-
-} // namespace CloudFront
-} // namespace QtAws
-
-#endif
diff --git a/src/cloudfront/deleteservicelinkedrolerequest_p.h b/src/cloudfront/deleteservicelinkedrolerequest_p.h
deleted file mode 100644
index 31e7ab47a9..0000000000
--- a/src/cloudfront/deleteservicelinkedrolerequest_p.h
+++ /dev/null
@@ -1,47 +0,0 @@
-/*
-    Copyright 2013-2018 Paul Colby
-
-    This file is part of QtAws.
-
-    QtAws is free software: you can redistribute it and/or modify
-    it under the terms of the GNU Lesser General Public License as published by
-    the Free Software Foundation, either version 3 of the License, or
-    (at your option) any later version.
-
-    QtAws is distributed in the hope that it will be useful,
-    but WITHOUT ANY WARRANTY; without even the implied warranty of
-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-    GNU Lesser General Public License for more details.
-
-    You should have received a copy of the GNU Lesser General Public License
-    along with the QtAws.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#ifndef QTAWS_DELETESERVICELINKEDROLEREQUEST_P_H
-#define QTAWS_DELETESERVICELINKEDROLEREQUEST_P_H
-
-#include "cloudfrontrequest_p.h"
-#include "deleteservicelinkedrolerequest.h"
-
-namespace QtAws {
-namespace CloudFront {
-
-class DeleteServiceLinkedRoleRequest;
-
-class QTAWS_EXPORT DeleteServiceLinkedRoleRequestPrivate : public CloudFrontRequestPrivate {
-
-public:
-    DeleteServiceLinkedRoleRequestPrivate(const CloudFrontRequest::Action action,
-                                   DeleteServiceLinkedRoleRequest * const q);
-    DeleteServiceLinkedRoleRequestPrivate(const DeleteServiceLinkedRoleRequestPrivate &other,
-                                   DeleteServiceLinkedRoleRequest * const q);
-
-private:
-    Q_DECLARE_PUBLIC(DeleteServiceLinkedRoleRequest)
-
-};
-
-} // namespace CloudFront
-} // namespace QtAws
-
-#endif
diff --git a/src/cloudfront/deleteservicelinkedroleresponse.cpp b/src/cloudfront/deleteservicelinkedroleresponse.cpp
deleted file mode 100644
index 2cf8b56b67..0000000000
--- a/src/cloudfront/deleteservicelinkedroleresponse.cpp
+++ /dev/null
@@ -1,105 +0,0 @@
-/*
-    Copyright 2013-2018 Paul Colby
-
-    This file is part of QtAws.
-
-    QtAws is free software: you can redistribute it and/or modify
-    it under the terms of the GNU Lesser General Public License as published by
-    the Free Software Foundation, either version 3 of the License, or
-    (at your option) any later version.
-
-    QtAws is distributed in the hope that it will be useful,
-    but WITHOUT ANY WARRANTY; without even the implied warranty of
-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-    GNU Lesser General Public License for more details.
-
-    You should have received a copy of the GNU Lesser General Public License
-    along with the QtAws.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#include "deleteservicelinkedroleresponse.h"
-#include "deleteservicelinkedroleresponse_p.h"
-
-#include <QDebug>
-#include <QNetworkReply>
-#include <QXmlStreamReader>
-
-namespace QtAws {
-namespace CloudFront {
-
-/*!
- * \class QtAws::CloudFront::DeleteServiceLinkedRoleResponse
- * \brief The DeleteServiceLinkedRoleResponse class provides an interace for CloudFront DeleteServiceLinkedRole responses.
- *
- * \inmodule QtAwsCloudFront
- *
- *  <fullname>Amazon CloudFront</fullname>
- * 
- *  This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about
- *  CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon
- *  CloudFront Developer
- *
- * \sa CloudFrontClient::deleteServiceLinkedRole
- */
-
-/*!
- * Constructs a DeleteServiceLinkedRoleResponse object for \a reply to \a request, with parent \a parent.
- */
-DeleteServiceLinkedRoleResponse::DeleteServiceLinkedRoleResponse(
-        const DeleteServiceLinkedRoleRequest &request,
-        QNetworkReply * const reply,
-        QObject * const parent)
-    : CloudFrontResponse(new DeleteServiceLinkedRoleResponsePrivate(this), parent)
-{
-    setRequest(new DeleteServiceLinkedRoleRequest(request));
-    setReply(reply);
-}
-
-/*!
- * \reimp
- */
-const DeleteServiceLinkedRoleRequest * DeleteServiceLinkedRoleResponse::request() const
-{
-    Q_D(const DeleteServiceLinkedRoleResponse);
-    return static_cast<const DeleteServiceLinkedRoleRequest *>(d->request);
-}
-
-/*!
- * \reimp
- * Parses a successful CloudFront DeleteServiceLinkedRole \a response.
- */
-void DeleteServiceLinkedRoleResponse::parseSuccess(QIODevice &response)
-{
-    //Q_D(DeleteServiceLinkedRoleResponse);
-    QXmlStreamReader xml(&response);
-    /// @todo
-}
-
-/*!
- * \class QtAws::CloudFront::DeleteServiceLinkedRoleResponsePrivate
- * \brief The DeleteServiceLinkedRoleResponsePrivate class provides private implementation for DeleteServiceLinkedRoleResponse.
- * \internal
- *
- * \inmodule QtAwsCloudFront
- */
-
-/*!
- * Constructs a DeleteServiceLinkedRoleResponsePrivate object with public implementation \a q.
- */
-DeleteServiceLinkedRoleResponsePrivate::DeleteServiceLinkedRoleResponsePrivate(
-    DeleteServiceLinkedRoleResponse * const q) : CloudFrontResponsePrivate(q)
-{
-
-}
-
-/*!
- * Parses a CloudFront DeleteServiceLinkedRole response element from \a xml.
- */
-void DeleteServiceLinkedRoleResponsePrivate::parseDeleteServiceLinkedRoleResponse(QXmlStreamReader &xml)
-{
-    Q_ASSERT(xml.name() == QLatin1String("DeleteServiceLinkedRoleResponse"));
-    /// @todo
-}
-
-} // namespace CloudFront
-} // namespace QtAws
diff --git a/src/cloudfront/deleteservicelinkedroleresponse.h b/src/cloudfront/deleteservicelinkedroleresponse.h
deleted file mode 100644
index 6eaf633d26..0000000000
--- a/src/cloudfront/deleteservicelinkedroleresponse.h
+++ /dev/null
@@ -1,51 +0,0 @@
-/*
-    Copyright 2013-2018 Paul Colby
-
-    This file is part of QtAws.
-
-    QtAws is free software: you can redistribute it and/or modify
-    it under the terms of the GNU Lesser General Public License as published by
-    the Free Software Foundation, either version 3 of the License, or
-    (at your option) any later version.
-
-    QtAws is distributed in the hope that it will be useful,
-    but WITHOUT ANY WARRANTY; without even the implied warranty of
-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-    GNU Lesser General Public License for more details.
-
-    You should have received a copy of the GNU Lesser General Public License
-    along with the QtAws.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#ifndef QTAWS_DELETESERVICELINKEDROLERESPONSE_H
-#define QTAWS_DELETESERVICELINKEDROLERESPONSE_H
-
-#include "cloudfrontresponse.h"
-#include "deleteservicelinkedrolerequest.h"
-
-namespace QtAws {
-namespace CloudFront {
-
-class DeleteServiceLinkedRoleResponsePrivate;
-
-class QTAWS_EXPORT DeleteServiceLinkedRoleResponse : public CloudFrontResponse {
-    Q_OBJECT
-
-public:
-    DeleteServiceLinkedRoleResponse(const DeleteServiceLinkedRoleRequest &request, QNetworkReply * const reply, QObject * const parent = 0);
-
-    virtual const DeleteServiceLinkedRoleRequest * request() const override;
-
-protected slots:
-    virtual void parseSuccess(QIODevice &response) override;
-
-private:
-    Q_DECLARE_PRIVATE(DeleteServiceLinkedRoleResponse)
-    Q_DISABLE_COPY(DeleteServiceLinkedRoleResponse)
-
-};
-
-} // namespace CloudFront
-} // namespace QtAws
-
-#endif
diff --git a/src/cloudfront/deleteservicelinkedroleresponse_p.h b/src/cloudfront/deleteservicelinkedroleresponse_p.h
deleted file mode 100644
index b3baf36beb..0000000000
--- a/src/cloudfront/deleteservicelinkedroleresponse_p.h
+++ /dev/null
@@ -1,47 +0,0 @@
-/*
-    Copyright 2013-2018 Paul Colby
-
-    This file is part of QtAws.
-
-    QtAws is free software: you can redistribute it and/or modify
-    it under the terms of the GNU Lesser General Public License as published by
-    the Free Software Foundation, either version 3 of the License, or
-    (at your option) any later version.
-
-    QtAws is distributed in the hope that it will be useful,
-    but WITHOUT ANY WARRANTY; without even the implied warranty of
-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-    GNU Lesser General Public License for more details.
-
-    You should have received a copy of the GNU Lesser General Public License
-    along with the QtAws.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#ifndef QTAWS_DELETESERVICELINKEDROLERESPONSE_P_H
-#define QTAWS_DELETESERVICELINKEDROLERESPONSE_P_H
-
-#include "cloudfrontresponse_p.h"
-
-namespace QtAws {
-namespace CloudFront {
-
-class DeleteServiceLinkedRoleResponse;
-
-class QTAWS_EXPORT DeleteServiceLinkedRoleResponsePrivate : public CloudFrontResponsePrivate {
-
-public:
-
-    DeleteServiceLinkedRoleResponsePrivate(DeleteServiceLinkedRoleResponse * const q);
-
-    void parseDeleteServiceLinkedRoleResponse(QXmlStreamReader &xml);
-
-private:
-    Q_DECLARE_PUBLIC(DeleteServiceLinkedRoleResponse)
-    Q_DISABLE_COPY(DeleteServiceLinkedRoleResponsePrivate)
-
-};
-
-} // namespace CloudFront
-} // namespace QtAws
-
-#endif
diff --git a/src/comprehend/comprehend.pro b/src/comprehend/comprehend.pro
index fafe174c79..69adc87209 100644
--- a/src/comprehend/comprehend.pro
+++ b/src/comprehend/comprehend.pro
@@ -26,12 +26,32 @@ HEADERS += \
     batchdetectsentimentrequest_p.h \
     batchdetectsentimentresponse.h \
     batchdetectsentimentresponse_p.h \
+    batchdetectsyntaxrequest.h \
+    batchdetectsyntaxrequest_p.h \
+    batchdetectsyntaxresponse.h \
+    batchdetectsyntaxresponse_p.h \
     comprehendclient.h \
     comprehendclient_p.h \
     comprehendrequest.h \
     comprehendrequest_p.h \
     comprehendresponse.h \
     comprehendresponse_p.h \
+    describedominantlanguagedetectionjobrequest.h \
+    describedominantlanguagedetectionjobrequest_p.h \
+    describedominantlanguagedetectionjobresponse.h \
+    describedominantlanguagedetectionjobresponse_p.h \
+    describeentitiesdetectionjobrequest.h \
+    describeentitiesdetectionjobrequest_p.h \
+    describeentitiesdetectionjobresponse.h \
+    describeentitiesdetectionjobresponse_p.h \
+    describekeyphrasesdetectionjobrequest.h \
+    describekeyphrasesdetectionjobrequest_p.h \
+    describekeyphrasesdetectionjobresponse.h \
+    describekeyphrasesdetectionjobresponse_p.h \
+    describesentimentdetectionjobrequest.h \
+    describesentimentdetectionjobrequest_p.h \
+    describesentimentdetectionjobresponse.h \
+    describesentimentdetectionjobresponse_p.h \
     describetopicsdetectionjobrequest.h \
     describetopicsdetectionjobrequest_p.h \
     describetopicsdetectionjobresponse.h \
@@ -52,14 +72,66 @@ HEADERS += \
     detectsentimentrequest_p.h \
     detectsentimentresponse.h \
     detectsentimentresponse_p.h \
+    detectsyntaxrequest.h \
+    detectsyntaxrequest_p.h \
+    detectsyntaxresponse.h \
+    detectsyntaxresponse_p.h \
+    listdominantlanguagedetectionjobsrequest.h \
+    listdominantlanguagedetectionjobsrequest_p.h \
+    listdominantlanguagedetectionjobsresponse.h \
+    listdominantlanguagedetectionjobsresponse_p.h \
+    listentitiesdetectionjobsrequest.h \
+    listentitiesdetectionjobsrequest_p.h \
+    listentitiesdetectionjobsresponse.h \
+    listentitiesdetectionjobsresponse_p.h \
+    listkeyphrasesdetectionjobsrequest.h \
+    listkeyphrasesdetectionjobsrequest_p.h \
+    listkeyphrasesdetectionjobsresponse.h \
+    listkeyphrasesdetectionjobsresponse_p.h \
+    listsentimentdetectionjobsrequest.h \
+    listsentimentdetectionjobsrequest_p.h \
+    listsentimentdetectionjobsresponse.h \
+    listsentimentdetectionjobsresponse_p.h \
     listtopicsdetectionjobsrequest.h \
     listtopicsdetectionjobsrequest_p.h \
     listtopicsdetectionjobsresponse.h \
     listtopicsdetectionjobsresponse_p.h \
+    startdominantlanguagedetectionjobrequest.h \
+    startdominantlanguagedetectionjobrequest_p.h \
+    startdominantlanguagedetectionjobresponse.h \
+    startdominantlanguagedetectionjobresponse_p.h \
+    startentitiesdetectionjobrequest.h \
+    startentitiesdetectionjobrequest_p.h \
+    startentitiesdetectionjobresponse.h \
+    startentitiesdetectionjobresponse_p.h \
+    startkeyphrasesdetectionjobrequest.h \
+    startkeyphrasesdetectionjobrequest_p.h \
+    startkeyphrasesdetectionjobresponse.h \
+    startkeyphrasesdetectionjobresponse_p.h \
+    startsentimentdetectionjobrequest.h \
+    startsentimentdetectionjobrequest_p.h \
+    startsentimentdetectionjobresponse.h \
+    startsentimentdetectionjobresponse_p.h \
     starttopicsdetectionjobrequest.h \
     starttopicsdetectionjobrequest_p.h \
     starttopicsdetectionjobresponse.h \
     starttopicsdetectionjobresponse_p.h \
+    stopdominantlanguagedetectionjobrequest.h \
+    stopdominantlanguagedetectionjobrequest_p.h \
+    stopdominantlanguagedetectionjobresponse.h \
+    stopdominantlanguagedetectionjobresponse_p.h \
+    stopentitiesdetectionjobrequest.h \
+    stopentitiesdetectionjobrequest_p.h \
+    stopentitiesdetectionjobresponse.h \
+    stopentitiesdetectionjobresponse_p.h \
+    stopkeyphrasesdetectionjobrequest.h \
+    stopkeyphrasesdetectionjobrequest_p.h \
+    stopkeyphrasesdetectionjobresponse.h \
+    stopkeyphrasesdetectionjobresponse_p.h \
+    stopsentimentdetectionjobrequest.h \
+    stopsentimentdetectionjobrequest_p.h \
+    stopsentimentdetectionjobresponse.h \
+    stopsentimentdetectionjobresponse_p.h \
 
 SOURCES += \
     batchdetectdominantlanguagerequest.cpp \
@@ -70,9 +142,19 @@ SOURCES += \
     batchdetectkeyphrasesresponse.cpp \
     batchdetectsentimentrequest.cpp \
     batchdetectsentimentresponse.cpp \
+    batchdetectsyntaxrequest.cpp \
+    batchdetectsyntaxresponse.cpp \
     comprehendclient.cpp \
     comprehendrequest.cpp \
     comprehendresponse.cpp \
+    describedominantlanguagedetectionjobrequest.cpp \
+    describedominantlanguagedetectionjobresponse.cpp \
+    describeentitiesdetectionjobrequest.cpp \
+    describeentitiesdetectionjobresponse.cpp \
+    describekeyphrasesdetectionjobrequest.cpp \
+    describekeyphrasesdetectionjobresponse.cpp \
+    describesentimentdetectionjobrequest.cpp \
+    describesentimentdetectionjobresponse.cpp \
     describetopicsdetectionjobrequest.cpp \
     describetopicsdetectionjobresponse.cpp \
     detectdominantlanguagerequest.cpp \
@@ -83,9 +165,35 @@ SOURCES += \
     detectkeyphrasesresponse.cpp \
     detectsentimentrequest.cpp \
     detectsentimentresponse.cpp \
+    detectsyntaxrequest.cpp \
+    detectsyntaxresponse.cpp \
+    listdominantlanguagedetectionjobsrequest.cpp \
+    listdominantlanguagedetectionjobsresponse.cpp \
+    listentitiesdetectionjobsrequest.cpp \
+    listentitiesdetectionjobsresponse.cpp \
+    listkeyphrasesdetectionjobsrequest.cpp \
+    listkeyphrasesdetectionjobsresponse.cpp \
+    listsentimentdetectionjobsrequest.cpp \
+    listsentimentdetectionjobsresponse.cpp \
     listtopicsdetectionjobsrequest.cpp \
     listtopicsdetectionjobsresponse.cpp \
+    startdominantlanguagedetectionjobrequest.cpp \
+    startdominantlanguagedetectionjobresponse.cpp \
+    startentitiesdetectionjobrequest.cpp \
+    startentitiesdetectionjobresponse.cpp \
+    startkeyphrasesdetectionjobrequest.cpp \
+    startkeyphrasesdetectionjobresponse.cpp \
+    startsentimentdetectionjobrequest.cpp \
+    startsentimentdetectionjobresponse.cpp \
     starttopicsdetectionjobrequest.cpp \
     starttopicsdetectionjobresponse.cpp \
+    stopdominantlanguagedetectionjobrequest.cpp \
+    stopdominantlanguagedetectionjobresponse.cpp \
+    stopentitiesdetectionjobrequest.cpp \
+    stopentitiesdetectionjobresponse.cpp \
+    stopkeyphrasesdetectionjobrequest.cpp \
+    stopkeyphrasesdetectionjobresponse.cpp \
+    stopsentimentdetectionjobrequest.cpp \
+    stopsentimentdetectionjobresponse.cpp \
 
 win32:CONFIG += skip_target_version_ext
diff --git a/src/comprehend/comprehendclient.cpp b/src/comprehend/comprehendclient.cpp
index ca02944d8f..bd6a282f7b 100644
--- a/src/comprehend/comprehendclient.cpp
+++ b/src/comprehend/comprehendclient.cpp
@@ -29,6 +29,16 @@
 #include "batchdetectkeyphrasesresponse.h"
 #include "batchdetectsentimentrequest.h"
 #include "batchdetectsentimentresponse.h"
+#include "batchdetectsyntaxrequest.h"
+#include "batchdetectsyntaxresponse.h"
+#include "describedominantlanguagedetectionjobrequest.h"
+#include "describedominantlanguagedetectionjobresponse.h"
+#include "describeentitiesdetectionjobrequest.h"
+#include "describeentitiesdetectionjobresponse.h"
+#include "describekeyphrasesdetectionjobrequest.h"
+#include "describekeyphrasesdetectionjobresponse.h"
+#include "describesentimentdetectionjobrequest.h"
+#include "describesentimentdetectionjobresponse.h"
 #include "describetopicsdetectionjobrequest.h"
 #include "describetopicsdetectionjobresponse.h"
 #include "detectdominantlanguagerequest.h"
@@ -39,10 +49,36 @@
 #include "detectkeyphrasesresponse.h"
 #include "detectsentimentrequest.h"
 #include "detectsentimentresponse.h"
+#include "detectsyntaxrequest.h"
+#include "detectsyntaxresponse.h"
+#include "listdominantlanguagedetectionjobsrequest.h"
+#include "listdominantlanguagedetectionjobsresponse.h"
+#include "listentitiesdetectionjobsrequest.h"
+#include "listentitiesdetectionjobsresponse.h"
+#include "listkeyphrasesdetectionjobsrequest.h"
+#include "listkeyphrasesdetectionjobsresponse.h"
+#include "listsentimentdetectionjobsrequest.h"
+#include "listsentimentdetectionjobsresponse.h"
 #include "listtopicsdetectionjobsrequest.h"
 #include "listtopicsdetectionjobsresponse.h"
+#include "startdominantlanguagedetectionjobrequest.h"
+#include "startdominantlanguagedetectionjobresponse.h"
+#include "startentitiesdetectionjobrequest.h"
+#include "startentitiesdetectionjobresponse.h"
+#include "startkeyphrasesdetectionjobrequest.h"
+#include "startkeyphrasesdetectionjobresponse.h"
+#include "startsentimentdetectionjobrequest.h"
+#include "startsentimentdetectionjobresponse.h"
 #include "starttopicsdetectionjobrequest.h"
 #include "starttopicsdetectionjobresponse.h"
+#include "stopdominantlanguagedetectionjobrequest.h"
+#include "stopdominantlanguagedetectionjobresponse.h"
+#include "stopentitiesdetectionjobrequest.h"
+#include "stopentitiesdetectionjobresponse.h"
+#include "stopkeyphrasesdetectionjobrequest.h"
+#include "stopkeyphrasesdetectionjobresponse.h"
+#include "stopsentimentdetectionjobrequest.h"
+#include "stopsentimentdetectionjobresponse.h"
 
 #include <QNetworkAccessManager>
 #include <QNetworkRequest>
@@ -145,8 +181,8 @@ BatchDetectDominantLanguageResponse * ComprehendClient::batchDetectDominantLangu
  *
  * \note The caller is to take responsbility for the resulting pointer.
  *
- * Inspects the text of a batch of documents and returns information about them. For more information about entities, see
- * <a>how-entities</a>
+ * Inspects the text of a batch of documents for named entities and returns information about them. For more information
+ * about named entities, see <a>how-entities</a>
  */
 BatchDetectEntitiesResponse * ComprehendClient::batchDetectEntities(const BatchDetectEntitiesRequest &request)
 {
@@ -180,6 +216,73 @@ BatchDetectSentimentResponse * ComprehendClient::batchDetectSentiment(const Batc
     return qobject_cast<BatchDetectSentimentResponse *>(send(request));
 }
 
+/*!
+ * Sends \a request to the ComprehendClient service, and returns a pointer to an
+ * BatchDetectSyntaxResponse object to track the result.
+ *
+ * \note The caller is to take responsbility for the resulting pointer.
+ *
+ * Inspects the text of a batch of documents for the syntax and part of speech of the words in the document and returns
+ * information about them. For more information, see
+ */
+BatchDetectSyntaxResponse * ComprehendClient::batchDetectSyntax(const BatchDetectSyntaxRequest &request)
+{
+    return qobject_cast<BatchDetectSyntaxResponse *>(send(request));
+}
+
+/*!
+ * Sends \a request to the ComprehendClient service, and returns a pointer to an
+ * DescribeDominantLanguageDetectionJobResponse object to track the result.
+ *
+ * \note The caller is to take responsbility for the resulting pointer.
+ *
+ * Gets the properties associated with a dominant language detection job. Use this operation to get the status of a
+ * detection
+ */
+DescribeDominantLanguageDetectionJobResponse * ComprehendClient::describeDominantLanguageDetectionJob(const DescribeDominantLanguageDetectionJobRequest &request)
+{
+    return qobject_cast<DescribeDominantLanguageDetectionJobResponse *>(send(request));
+}
+
+/*!
+ * Sends \a request to the ComprehendClient service, and returns a pointer to an
+ * DescribeEntitiesDetectionJobResponse object to track the result.
+ *
+ * \note The caller is to take responsbility for the resulting pointer.
+ *
+ * Gets the properties associated with an entities detection job. Use this operation to get the status of a detection
+ */
+DescribeEntitiesDetectionJobResponse * ComprehendClient::describeEntitiesDetectionJob(const DescribeEntitiesDetectionJobRequest &request)
+{
+    return qobject_cast<DescribeEntitiesDetectionJobResponse *>(send(request));
+}
+
+/*!
+ * Sends \a request to the ComprehendClient service, and returns a pointer to an
+ * DescribeKeyPhrasesDetectionJobResponse object to track the result.
+ *
+ * \note The caller is to take responsbility for the resulting pointer.
+ *
+ * Gets the properties associated with a key phrases detection job. Use this operation to get the status of a detection
+ */
+DescribeKeyPhrasesDetectionJobResponse * ComprehendClient::describeKeyPhrasesDetectionJob(const DescribeKeyPhrasesDetectionJobRequest &request)
+{
+    return qobject_cast<DescribeKeyPhrasesDetectionJobResponse *>(send(request));
+}
+
+/*!
+ * Sends \a request to the ComprehendClient service, and returns a pointer to an
+ * DescribeSentimentDetectionJobResponse object to track the result.
+ *
+ * \note The caller is to take responsbility for the resulting pointer.
+ *
+ * Gets the properties associated with a sentiment detection job. Use this operation to get the status of a detection
+ */
+DescribeSentimentDetectionJobResponse * ComprehendClient::describeSentimentDetectionJob(const DescribeSentimentDetectionJobRequest &request)
+{
+    return qobject_cast<DescribeSentimentDetectionJobResponse *>(send(request));
+}
+
 /*!
  * Sends \a request to the ComprehendClient service, and returns a pointer to an
  * DescribeTopicsDetectionJobResponse object to track the result.
@@ -213,7 +316,7 @@ DetectDominantLanguageResponse * ComprehendClient::detectDominantLanguage(const
  *
  * \note The caller is to take responsbility for the resulting pointer.
  *
- * Inspects text for entities, and returns information about them. For more information, about entities, see
+ * Inspects text for named entities, and returns information about them. For more information, about named entities, see
  * <a>how-entities</a>.
  */
 DetectEntitiesResponse * ComprehendClient::detectEntities(const DetectEntitiesRequest &request)
@@ -248,6 +351,71 @@ DetectSentimentResponse * ComprehendClient::detectSentiment(const DetectSentimen
     return qobject_cast<DetectSentimentResponse *>(send(request));
 }
 
+/*!
+ * Sends \a request to the ComprehendClient service, and returns a pointer to an
+ * DetectSyntaxResponse object to track the result.
+ *
+ * \note The caller is to take responsbility for the resulting pointer.
+ *
+ * Inspects text for syntax and the part of speech of words in the document. For more information,
+ */
+DetectSyntaxResponse * ComprehendClient::detectSyntax(const DetectSyntaxRequest &request)
+{
+    return qobject_cast<DetectSyntaxResponse *>(send(request));
+}
+
+/*!
+ * Sends \a request to the ComprehendClient service, and returns a pointer to an
+ * ListDominantLanguageDetectionJobsResponse object to track the result.
+ *
+ * \note The caller is to take responsbility for the resulting pointer.
+ *
+ * Gets a list of the dominant language detection jobs that you have
+ */
+ListDominantLanguageDetectionJobsResponse * ComprehendClient::listDominantLanguageDetectionJobs(const ListDominantLanguageDetectionJobsRequest &request)
+{
+    return qobject_cast<ListDominantLanguageDetectionJobsResponse *>(send(request));
+}
+
+/*!
+ * Sends \a request to the ComprehendClient service, and returns a pointer to an
+ * ListEntitiesDetectionJobsResponse object to track the result.
+ *
+ * \note The caller is to take responsbility for the resulting pointer.
+ *
+ * Gets a list of the entity detection jobs that you have
+ */
+ListEntitiesDetectionJobsResponse * ComprehendClient::listEntitiesDetectionJobs(const ListEntitiesDetectionJobsRequest &request)
+{
+    return qobject_cast<ListEntitiesDetectionJobsResponse *>(send(request));
+}
+
+/*!
+ * Sends \a request to the ComprehendClient service, and returns a pointer to an
+ * ListKeyPhrasesDetectionJobsResponse object to track the result.
+ *
+ * \note The caller is to take responsbility for the resulting pointer.
+ *
+ * Get a list of key phrase detection jobs that you have
+ */
+ListKeyPhrasesDetectionJobsResponse * ComprehendClient::listKeyPhrasesDetectionJobs(const ListKeyPhrasesDetectionJobsRequest &request)
+{
+    return qobject_cast<ListKeyPhrasesDetectionJobsResponse *>(send(request));
+}
+
+/*!
+ * Sends \a request to the ComprehendClient service, and returns a pointer to an
+ * ListSentimentDetectionJobsResponse object to track the result.
+ *
+ * \note The caller is to take responsbility for the resulting pointer.
+ *
+ * Gets a list of sentiment detection jobs that you have
+ */
+ListSentimentDetectionJobsResponse * ComprehendClient::listSentimentDetectionJobs(const ListSentimentDetectionJobsRequest &request)
+{
+    return qobject_cast<ListSentimentDetectionJobsResponse *>(send(request));
+}
+
 /*!
  * Sends \a request to the ComprehendClient service, and returns a pointer to an
  * ListTopicsDetectionJobsResponse object to track the result.
@@ -261,6 +429,60 @@ ListTopicsDetectionJobsResponse * ComprehendClient::listTopicsDetectionJobs(cons
     return qobject_cast<ListTopicsDetectionJobsResponse *>(send(request));
 }
 
+/*!
+ * Sends \a request to the ComprehendClient service, and returns a pointer to an
+ * StartDominantLanguageDetectionJobResponse object to track the result.
+ *
+ * \note The caller is to take responsbility for the resulting pointer.
+ *
+ * Starts an asynchronous dominant language detection job for a collection of documents. Use the operation to track the
+ * status of a
+ */
+StartDominantLanguageDetectionJobResponse * ComprehendClient::startDominantLanguageDetectionJob(const StartDominantLanguageDetectionJobRequest &request)
+{
+    return qobject_cast<StartDominantLanguageDetectionJobResponse *>(send(request));
+}
+
+/*!
+ * Sends \a request to the ComprehendClient service, and returns a pointer to an
+ * StartEntitiesDetectionJobResponse object to track the result.
+ *
+ * \note The caller is to take responsbility for the resulting pointer.
+ *
+ * Starts an asynchronous entity detection job for a collection of documents. Use the operation to track the status of a
+ */
+StartEntitiesDetectionJobResponse * ComprehendClient::startEntitiesDetectionJob(const StartEntitiesDetectionJobRequest &request)
+{
+    return qobject_cast<StartEntitiesDetectionJobResponse *>(send(request));
+}
+
+/*!
+ * Sends \a request to the ComprehendClient service, and returns a pointer to an
+ * StartKeyPhrasesDetectionJobResponse object to track the result.
+ *
+ * \note The caller is to take responsbility for the resulting pointer.
+ *
+ * Starts an asynchronous key phrase detection job for a collection of documents. Use the operation to track the status of
+ * a
+ */
+StartKeyPhrasesDetectionJobResponse * ComprehendClient::startKeyPhrasesDetectionJob(const StartKeyPhrasesDetectionJobRequest &request)
+{
+    return qobject_cast<StartKeyPhrasesDetectionJobResponse *>(send(request));
+}
+
+/*!
+ * Sends \a request to the ComprehendClient service, and returns a pointer to an
+ * StartSentimentDetectionJobResponse object to track the result.
+ *
+ * \note The caller is to take responsbility for the resulting pointer.
+ *
+ * Starts an asynchronous sentiment detection job for a collection of documents. use the operation to track the status of a
+ */
+StartSentimentDetectionJobResponse * ComprehendClient::startSentimentDetectionJob(const StartSentimentDetectionJobRequest &request)
+{
+    return qobject_cast<StartSentimentDetectionJobResponse *>(send(request));
+}
+
 /*!
  * Sends \a request to the ComprehendClient service, and returns a pointer to an
  * StartTopicsDetectionJobResponse object to track the result.
@@ -275,6 +497,118 @@ StartTopicsDetectionJobResponse * ComprehendClient::startTopicsDetectionJob(cons
     return qobject_cast<StartTopicsDetectionJobResponse *>(send(request));
 }
 
+/*!
+ * Sends \a request to the ComprehendClient service, and returns a pointer to an
+ * StopDominantLanguageDetectionJobResponse object to track the result.
+ *
+ * \note The caller is to take responsbility for the resulting pointer.
+ *
+ * Stops a dominant language detection job in
+ *
+ * progress>
+ *
+ * If the job state is <code>IN_PROGRESS</code> the job is marked for termination and put into the
+ * <code>STOP_REQUESTED</code> state. If the job completes before it can be stopped, it is put into the
+ * <code>COMPLETED</code> state; otherwise the job is stopped and put into the <code>STOPPED</code>
+ *
+ * state>
+ *
+ * If the job is in the <code>COMPLETED</code> or <code>FAILED</code> state when you call the
+ * <code>StopDominantLanguageDetectionJob</code> operation, the operation returns a 400 Internal Request Exception.
+ *
+ * </p
+ *
+ * When a job is stopped, any documents already processed are written to the output
+ */
+StopDominantLanguageDetectionJobResponse * ComprehendClient::stopDominantLanguageDetectionJob(const StopDominantLanguageDetectionJobRequest &request)
+{
+    return qobject_cast<StopDominantLanguageDetectionJobResponse *>(send(request));
+}
+
+/*!
+ * Sends \a request to the ComprehendClient service, and returns a pointer to an
+ * StopEntitiesDetectionJobResponse object to track the result.
+ *
+ * \note The caller is to take responsbility for the resulting pointer.
+ *
+ * Stops an entities detection job in
+ *
+ * progress>
+ *
+ * If the job state is <code>IN_PROGRESS</code> the job is marked for termination and put into the
+ * <code>STOP_REQUESTED</code> state. If the job completes before it can be stopped, it is put into the
+ * <code>COMPLETED</code> state; otherwise the job is stopped and put into the <code>STOPPED</code>
+ *
+ * state>
+ *
+ * If the job is in the <code>COMPLETED</code> or <code>FAILED</code> state when you call the
+ * <code>StopDominantLanguageDetectionJob</code> operation, the operation returns a 400 Internal Request Exception.
+ *
+ * </p
+ *
+ * When a job is stopped, any documents already processed are written to the output
+ */
+StopEntitiesDetectionJobResponse * ComprehendClient::stopEntitiesDetectionJob(const StopEntitiesDetectionJobRequest &request)
+{
+    return qobject_cast<StopEntitiesDetectionJobResponse *>(send(request));
+}
+
+/*!
+ * Sends \a request to the ComprehendClient service, and returns a pointer to an
+ * StopKeyPhrasesDetectionJobResponse object to track the result.
+ *
+ * \note The caller is to take responsbility for the resulting pointer.
+ *
+ * Stops a key phrases detection job in
+ *
+ * progress>
+ *
+ * If the job state is <code>IN_PROGRESS</code> the job is marked for termination and put into the
+ * <code>STOP_REQUESTED</code> state. If the job completes before it can be stopped, it is put into the
+ * <code>COMPLETED</code> state; otherwise the job is stopped and put into the <code>STOPPED</code>
+ *
+ * state>
+ *
+ * If the job is in the <code>COMPLETED</code> or <code>FAILED</code> state when you call the
+ * <code>StopDominantLanguageDetectionJob</code> operation, the operation returns a 400 Internal Request Exception.
+ *
+ * </p
+ *
+ * When a job is stopped, any documents already processed are written to the output
+ */
+StopKeyPhrasesDetectionJobResponse * ComprehendClient::stopKeyPhrasesDetectionJob(const StopKeyPhrasesDetectionJobRequest &request)
+{
+    return qobject_cast<StopKeyPhrasesDetectionJobResponse *>(send(request));
+}
+
+/*!
+ * Sends \a request to the ComprehendClient service, and returns a pointer to an
+ * StopSentimentDetectionJobResponse object to track the result.
+ *
+ * \note The caller is to take responsbility for the resulting pointer.
+ *
+ * Stops a sentiment detection job in
+ *
+ * progress>
+ *
+ * If the job state is <code>IN_PROGRESS</code> the job is marked for termination and put into the
+ * <code>STOP_REQUESTED</code> state. If the job completes before it can be stopped, it is put into the
+ * <code>COMPLETED</code> state; otherwise the job is be stopped and put into the <code>STOPPED</code>
+ *
+ * state>
+ *
+ * If the job is in the <code>COMPLETED</code> or <code>FAILED</code> state when you call the
+ * <code>StopDominantLanguageDetectionJob</code> operation, the operation returns a 400 Internal Request Exception.
+ *
+ * </p
+ *
+ * When a job is stopped, any documents already processed are written to the output
+ */
+StopSentimentDetectionJobResponse * ComprehendClient::stopSentimentDetectionJob(const StopSentimentDetectionJobRequest &request)
+{
+    return qobject_cast<StopSenti